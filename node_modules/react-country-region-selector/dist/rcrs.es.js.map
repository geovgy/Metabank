{"version":3,"file":"rcrs.es.js","sources":["../src/constants.js","../src/helpers.js","../src/CountryDropdown.js","../src/RegionDropdown.js"],"sourcesContent":["export default {\n\tDISPLAY_TYPE_FULL: 'full',\n\tDISPLAY_TYPE_SHORT: 'short',\n\tREGION_LIST_DELIMITER: '|',\n\tSINGLE_REGION_DELIMITER: '~'\n};\n","// reduces the subset of countries depending on whether the user specified a white/blacklist, and lists priority\n// countries first\nexport const filterCountries = (countries, priorityCountries, whitelist, blacklist) => {\n\tlet countriesListedFirst = [];\n\tlet filteredCountries = countries;\n\n\tif (whitelist.length > 0) {\n\t\tfilteredCountries = countries.filter(([, countrySlug]) => whitelist.indexOf(countrySlug) > -1);\n\t} else if (blacklist.length > 0) {\n\t\tfilteredCountries = countries.filter(([, countrySlug]) => blacklist.indexOf(countrySlug) === -1);\n\t}\n\n\tif (priorityCountries.length > 0) {\n\n\t\t// ensure the countries are added in the order in which they are specified by the user\n\t\tpriorityCountries.forEach((slug) => {\n\t\t\tconst result = filteredCountries.find(([, countrySlug]) => countrySlug === slug);\n\t\t\tif (result) {\n\t\t\t\tcountriesListedFirst.push(result);\n\t\t\t}\n\t\t});\n\n\t\tfilteredCountries = filteredCountries.filter(([, countrySlug]) => priorityCountries.indexOf(countrySlug) === -1);\n\t}\n\n\treturn countriesListedFirst.length ? [...countriesListedFirst, ...filteredCountries] : filteredCountries;\n};\n\n// called when requesting new regions. It reduces the subset of regions depending on whether the user specifies\n// a white/blacklist\nexport const filterRegions = (regionsObject, whitelistObject, blacklistObject) => {\n\tconst [country, countryCode, regions] = regionsObject;\n\tconst whitelist = whitelistObject.hasOwnProperty(countryCode) ? whitelistObject[countryCode] : [];\n\tconst blacklist = blacklistObject.hasOwnProperty(countryCode) ? blacklistObject[countryCode] : [];\n\tlet filteredRegions = regions.split('|');\n\n\tif (whitelist.length > 0 && filteredRegions.length > 0) {\n\t\tfilteredRegions = filteredRegions.filter((region) => {\n\t\t\tfor (let i = 0, n = whitelist.length; i < n; i++) {\n\t\t\t\tif (region.indexOf(whitelist[i]) > -1) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\t} else if (blacklist.length > 0 && filteredRegions.length > 0) {\n\t\tfilteredRegions = filteredRegions.filter((region) => {\n\t\t\tfor (let i = 0, n = blacklist.length; i < n; i++) {\n\t\t\t\tif (region.indexOf(blacklist[i]) > -1) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t});\n\t}\n\n\treturn [\n\t\tcountry,\n\t\tcountryCode,\n\t\tfilteredRegions.join('|')\n\t];\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport CountryRegionData from '../node_modules/country-region-data/data.json';\nimport C from './constants';\nimport * as helpers from './helpers';\n\nexport default class CountryDropdown extends Component {\n\n\tconstructor (props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tcountries: helpers.filterCountries(CountryRegionData, props.priorityOptions, props.whitelist, props.blacklist)\n\t\t};\n\t}\n\n\tgetCountries () {\n\t\tconst { valueType, labelType } = this.props;\n\n\t\treturn this.state.countries.map(([countryName, countrySlug]) => (\n\t\t\t<option value={(valueType === C.DISPLAY_TYPE_SHORT) ? countrySlug : countryName} key={countrySlug}>\n\t\t\t\t{(labelType === C.DISPLAY_TYPE_SHORT) ? countrySlug : countryName}\n\t\t\t</option>\n\t\t));\n\t}\n\n\tgetDefaultOption () {\n\t\tconst { showDefaultOption, defaultOptionLabel } = this.props;\n\t\tif (!showDefaultOption) {\n\t\t\treturn null;\n\t\t}\n\t\treturn (\n\t\t\t<option value=\"\" key=\"default\">{defaultOptionLabel}</option>\n\t\t);\n\t}\n\n\trender () {\n\t\t// unused properties deliberately added so arbitraryProps gets populated with anything else the user specifies\n\t\tconst { name, id, classes, value, onChange, onBlur, disabled, showDefaultOption, defaultOptionLabel,\n\t\t\tlabelType, valueType, whitelist, blacklist, customOptions, priorityOptions, ...arbitraryProps } = this.props;\n\n\t\tconst attrs = {\n\t\t\t...arbitraryProps,\n\t\t\tname,\n\t\t\tvalue,\n\t\t\tonChange: (e) => onChange(e.target.value, e),\n\t\t\tonBlur: (e) => onBlur(e.target.value, e),\n\t\t\tdisabled\n\t\t};\n\t\tif (id) {\n\t\t\tattrs.id = id;\n\t\t}\n\t\tif (classes) {\n\t\t\tattrs.className = classes;\n\t\t}\n\n\t\treturn (\n\t\t\t<select {...attrs}>\n\t\t\t\t{this.getDefaultOption()}\n\t\t\t\t{this.getCountries()}\n\t\t\t</select>\n\t\t);\n\t}\n}\n\nCountryDropdown.propTypes = {\n\tvalue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\tname: PropTypes.string,\n\tid: PropTypes.string,\n\tclasses: PropTypes.string,\n\tshowDefaultOption: PropTypes.bool,\n\tdefaultOptionLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\tpriorityOptions: PropTypes.array,\n\tonChange: PropTypes.func,\n\tonBlur: PropTypes.func,\n\tlabelType: PropTypes.oneOf([C.DISPLAY_TYPE_FULL, C.DISPLAY_TYPE_SHORT]),\n\tvalueType: PropTypes.oneOf([C.DISPLAY_TYPE_FULL, C.DISPLAY_TYPE_SHORT]),\n\twhitelist: PropTypes.array,\n\tblacklist: PropTypes.array,\n\tdisabled: PropTypes.bool\n};\nCountryDropdown.defaultProps = {\n\tvalue: '',\n\tname: 'rcrs-country',\n\tid: '',\n\tclasses: '',\n\tshowDefaultOption: true,\n\tdefaultOptionLabel: 'Select Country',\n\tpriorityOptions: [],\n\tonChange: () => {},\n\tonBlur: () => {},\n\tlabelType: C.DISPLAY_TYPE_FULL,\n\tvalueType: C.DISPLAY_TYPE_FULL,\n\twhitelist: [],\n\tblacklist: [],\n\tdisabled: false\n};\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport CountryRegionData from '../node_modules/country-region-data/data.json';\nimport { filterRegions } from './helpers';\nimport C from './constants';\n\nexport default class RegionDropdown extends PureComponent {\n\tconstructor (props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tregions: this.getRegions(props.country)\n\t\t};\n\t\tthis.getRegions = this.getRegions.bind(this);\n\t}\n\n\tcomponentDidUpdate (prevProps) {\n\t\tconst { country } = this.props;\n\t\tif (country === prevProps.country) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst defaultRegions = this.getRegions(country);\n\n\t\tthis.setState({\n\t\t\tregions: [\n\t\t\t\t...defaultRegions,\n\t\t\t\t...this.getCustomOptions(defaultRegions)\n\t\t\t]\n\t\t});\n\t}\n\n\tgetCustomOptions (regions) {\n\t\tconst { customOptions } = this.props;\n\n\t\tconst duplicateRegions = this.getDuplicates(regions);\n\n\t\tif (duplicateRegions.length) {\n\t\t\tconsole.error('Error: Duplicate regions present: ' + duplicateRegions.toString() + '.\\nThe above item(s) is/are already getting added to the region dropdown by the library.');\n\t\t\treturn [];\n\t\t}\n\n\t\treturn customOptions.map((option) => {\n\t\t\tif (option) {\n\t\t\t\treturn { regionName: option, regionShortCode: option };\n\t\t\t}\n\t\t});\n\t}\n\n\tgetDuplicates (regions) {\n\t\tconst { customOptions, valueType } = this.props;\n\t\tconst regionKey = valueType === C.DISPLAY_TYPE_FULL ? 'regionName' : 'regionShortCode';\n\n\t\treturn regions.filter((region) => customOptions.indexOf(region[regionKey]) !== -1).map(region => region[regionKey]);\n\t}\n\n\tgetRegions (country) {\n\t\tif (!country) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst { countryValueType, whitelist, blacklist } = this.props;\n\t\tconst searchIndex = (countryValueType === C.DISPLAY_TYPE_FULL) ? 0 : 1;\n\t\tlet regions = [];\n\t\tCountryRegionData.forEach((i) => {\n\t\t\tif (i[searchIndex] === country) {\n\t\t\t\tregions = i;\n\t\t\t}\n\t\t});\n\n\t\t// this could happen if the user is managing the state of the region/country themselves and screws up passing\n\t\t// in a valid country\n\t\tif (!regions || regions.length === 0) {\n\t\t\tconsole.error('Error. Unknown country passed: ' + country + '. If you\\'re passing a country shortcode, be sure to include countryValueType=\"short\" on the RegionDropdown');\n\t\t\treturn [];\n\t\t}\n\n\t\tconst filteredRegions = filterRegions(regions, whitelist, blacklist);\n\n\t\treturn filteredRegions[2].split(C.REGION_LIST_DELIMITER).map((regionPair) => {\n\t\t\tlet [regionName, regionShortCode = null] = regionPair.split(C.SINGLE_REGION_DELIMITER);\n\t\t\treturn { regionName, regionShortCode };\n\t\t});\n\t}\n\n\tgetRegionList () {\n\t\tconst { labelType, valueType } = this.props;\n\t\treturn this.state.regions.map(({ regionName, regionShortCode }) => {\n\t\t\tconst label = (labelType === C.DISPLAY_TYPE_FULL) ? regionName : regionShortCode;\n\t\t\tconst value = (valueType === C.DISPLAY_TYPE_FULL) ? regionName : regionShortCode;\n\t\t\treturn <option value={value} key={regionName}>{label}</option>;\n\t\t});\n\t}\n\n\t// there are two default options. The \"blank\" option which shows up when the user hasn't selected a country yet, and\n\t// a \"default\" option which shows\n\tgetDefaultOption () {\n\t\tconst { blankOptionLabel, showDefaultOption, defaultOptionLabel, country } = this.props;\n\t\tif (!country) {\n\t\t\treturn <option value=\"\">{blankOptionLabel}</option>;\n\t\t}\n\t\tif (showDefaultOption) {\n\t\t\treturn <option value=\"\">{defaultOptionLabel}</option>;\n\t\t}\n\t\treturn null;\n\t}\n\n\trender () {\n\t\tconst {\n\t\t\tvalue, country, onChange, onBlur, id, name, classes, disabled, blankOptionLabel, showDefaultOption,\n\t\t\tdefaultOptionLabel, labelType, valueType, countryValueType, disableWhenEmpty, customOptions,\n\t\t\t...arbitraryProps\n\t\t} = this.props;\n\n\t\tconst isDisabled = disabled || (disableWhenEmpty && country === '');\n\t\tconst attrs = {\n\t\t\t...arbitraryProps,\n\t\t\tname,\n\t\t\tvalue,\n\t\t\tonChange: (e) => onChange(e.target.value, e),\n\t\t\tonBlur: (e) => onBlur(e.target.value, e),\n\t\t\tdisabled: isDisabled\n\t\t};\n\t\tif (id) {\n\t\t\tattrs.id = id;\n\t\t}\n\t\tif (classes) {\n\t\t\tattrs.className = classes;\n\t\t}\n\n\t\treturn (\n\t\t\t<select {...attrs}>\n\t\t\t\t{this.getDefaultOption()}\n\t\t\t\t{this.getRegionList()}\n\t\t\t</select>\n\t\t);\n\t}\n}\n\nRegionDropdown.propTypes = {\n\tcountry: PropTypes.string,\n\tcountryValueType: PropTypes.oneOf([C.DISPLAY_TYPE_FULL, C.DISPLAY_TYPE_SHORT]),\n\tvalue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\tname: PropTypes.string,\n\tid: PropTypes.string,\n\tclasses: PropTypes.string,\n\tblankOptionLabel: PropTypes.string,\n\tshowDefaultOption: PropTypes.bool,\n\tdefaultOptionLabel: PropTypes.string,\n\tonChange: PropTypes.func,\n\tonBlur: PropTypes.func,\n\tlabelType: PropTypes.string,\n\tvalueType: PropTypes.string,\n\twhitelist: PropTypes.object,\n\tblacklist: PropTypes.object,\n\tdisabled: PropTypes.bool,\n\tdisableWhenEmpty: PropTypes.bool,\n\tcustomOptions: PropTypes.array\n};\nRegionDropdown.defaultProps = {\n\tcountry: '',\n\tvalue: '',\n\tname: 'rcrs-region',\n\tid: '',\n\tclasses: '',\n\tblankOptionLabel: '-',\n\tshowDefaultOption: true,\n\tdefaultOptionLabel: 'Select Region',\n\tonChange: () => {},\n\tonBlur: () => {},\n\tcountryValueType: C.DISPLAY_TYPE_FULL,\n\tlabelType: C.DISPLAY_TYPE_FULL,\n\tvalueType: C.DISPLAY_TYPE_FULL,\n\twhitelist: {},\n\tblacklist: {},\n\tdisabled: false,\n\tdisableWhenEmpty: false,\n\tcustomOptions: []\n};\n"],"names":["filterCountries","countries","priorityCountries","whitelist","blacklist","countriesListedFirst","filteredCountries","length","filter","countrySlug","indexOf","forEach","slug","result","find","push","filterRegions","regionsObject","whitelistObject","blacklistObject","country","countryCode","regions","hasOwnProperty","filteredRegions","split","region","i","n","join","CountryDropdown","props","state","helpers","CountryRegionData","priorityOptions","valueType","labelType","map","countryName","C","DISPLAY_TYPE_SHORT","showDefaultOption","defaultOptionLabel","name","id","classes","value","onChange","onBlur","disabled","customOptions","arbitraryProps","attrs","e","target","className","getDefaultOption","getCountries","Component","propTypes","PropTypes","oneOfType","string","number","bool","array","func","oneOf","DISPLAY_TYPE_FULL","defaultProps","RegionDropdown","getRegions","bind","prevProps","defaultRegions","setState","getCustomOptions","duplicateRegions","getDuplicates","error","toString","option","regionName","regionShortCode","regionKey","countryValueType","searchIndex","REGION_LIST_DELIMITER","regionPair","SINGLE_REGION_DELIMITER","label","blankOptionLabel","disableWhenEmpty","isDisabled","getRegionList","PureComponent","object"],"mappings":"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"}