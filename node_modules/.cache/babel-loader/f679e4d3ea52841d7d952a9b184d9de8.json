{"ast":null,"code":"var _jsxFileName = \"/Users/mac/writingPlatform/src/pages/Writer/Exam/Questions.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Container, Row, Col, Card, CardBody, Label, CardTitle, Input, Form, FormGroup, CustomInput, ListGroup, ListGroupItem, ButtonGroup, Button, Jumbotron, Progress } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport instance from \"../../../helpers/axiosly\";\nimport stateWrapper from \"../../../containers/provider\";\nimport { withNamespaces } from \"react-i18next\";\nimport Moment from 'react-moment';\nimport AvForm from \"availity-reactstrap-validation/lib/AvForm\";\nimport Questionform from './question';\nimport Startquestion from './Startquestion';\nimport Result from './results';\n\nconst Questions = props => {\n  const Question = [{\n    \"question\": \"What is capital of Croatia\",\n    \"options\": [\"Split\", \"osijek\", \"Zagreb\"],\n    \"answer\": \"Zagreb\",\n    \"score\": \"100\"\n  }, {\n    \"question\": \"What is capital of Slovenia\",\n    \"options\": [\"Split\", \"Ljubljana\", \"Zagreb\"],\n    \"answer\": \"Ljubljana\",\n    \"score\": \"200\"\n  }, {\n    \"question\": \"What is capital of Austria\",\n    \"options\": [\"Split\", \"Vienna\", \"Zagreb\"],\n    \"answer\": \"Vienna\",\n    \"score\": \"300\"\n  }];\n  const [step, setStep] = useState(1);\n  const [activeQuestion, setActiveQuestion] = useState(0);\n  const [answers, setAnswers] = useState([]);\n  const [showPrev, setShowPrev] = useState(0);\n  console.log(answers);\n  /*const[questions, setQuestions] = useState([]);\n  const[state, setState] = useState({\n    loading: false\n  })\n   useEffect(() => {\n     async function fetchData(){\n      setState({...state, loading: true})\n    try {\n      const token = localStorage.getItem(\"token\")\n      let id = props.match.params.id\n      const res = await instance\n        .get(`${process.env.REACT_APP_DATABASEURL}/exam/${id}/question`, {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        })\n        setState({...state, loading: false})\n        setQuestions(res.data.data)\n         console.log(res.data.data)\n      } catch (e) {\n      console.log(e);\n    }\n    }\n    fetchData();\n    //eslint-disable-line\n  }, [])\n   const qstOpt = questions.map((a, i) => {return a.options})\n  const qst = JSON.stringify(qstOpt)\n  console.log(qst)*/\n\n  const onQuestionHandler = () => {\n    setStep(2);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, step === 1 && /*#__PURE__*/React.createElement(Startquestion, {\n    onQuestionStart: onQuestionHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 24\n    }\n  }), step === 2 && /*#__PURE__*/React.createElement(Questionform, {\n    data: Question[activeQuestion],\n    onAnswerUpdate: setAnswers,\n    numberOfQuestion: Question.length,\n    activeQuestion: activeQuestion,\n    onSetActiveQuestion: setActiveQuestion,\n    setShowPrev: setShowPrev,\n    onSetStep: setStep,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 24\n    }\n  }), step === 3 && /*#__PURE__*/React.createElement(Result, {\n    results: answers,\n    data: Question,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 24\n    }\n  }))))));\n};\n\nexport default withNamespaces()(stateWrapper(Questions));","map":{"version":3,"sources":["/Users/mac/writingPlatform/src/pages/Writer/Exam/Questions.js"],"names":["React","useEffect","useState","Container","Row","Col","Card","CardBody","Label","CardTitle","Input","Form","FormGroup","CustomInput","ListGroup","ListGroupItem","ButtonGroup","Button","Jumbotron","Progress","Link","instance","stateWrapper","withNamespaces","Moment","AvForm","Questionform","Startquestion","Result","Questions","props","Question","step","setStep","activeQuestion","setActiveQuestion","answers","setAnswers","showPrev","setShowPrev","console","log","onQuestionHandler","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {  Container, Row, Col, Card, CardBody, Label, CardTitle, Input, Form, FormGroup, CustomInput, ListGroup,ListGroupItem, ButtonGroup, Button, Jumbotron, Progress } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport instance from \"../../../helpers/axiosly\";\nimport stateWrapper from \"../../../containers/provider\";\nimport { withNamespaces } from \"react-i18next\";\nimport Moment from 'react-moment'\nimport AvForm from \"availity-reactstrap-validation/lib/AvForm\";\nimport Questionform from './question'\nimport Startquestion from './Startquestion'\nimport Result from './results'\n\n\nconst Questions = (props) => {\n\n  const Question = [\n    {\n      \"question\" : \"What is capital of Croatia\",\n      \"options\": [\"Split\", \"osijek\", \"Zagreb\"],\n      \"answer\": \"Zagreb\",\n      \"score\": \"100\"\n    },\n    {\n      \"question\" : \"What is capital of Slovenia\",\n      \"options\": [\"Split\", \"Ljubljana\", \"Zagreb\"],\n      \"answer\": \"Ljubljana\",\n      \"score\": \"200\"\n    },\n    {\n      \"question\" : \"What is capital of Austria\",\n      \"options\": [\"Split\", \"Vienna\", \"Zagreb\"],\n      \"answer\": \"Vienna\",\n      \"score\": \"300\"\n    }\n  ]\n\n  const [step, setStep] = useState(1);\n  const [activeQuestion, setActiveQuestion] = useState(0);\n  const [answers, setAnswers] = useState([])\n  const [showPrev, setShowPrev] = useState(0)\n\n  console.log(answers)\n  /*const[questions, setQuestions] = useState([]);\n  const[state, setState] = useState({\n    loading: false\n  })\n\n  useEffect(() => {\n\n    async function fetchData(){\n      setState({...state, loading: true})\n    try {\n      const token = localStorage.getItem(\"token\")\n      let id = props.match.params.id\n      const res = await instance\n        .get(`${process.env.REACT_APP_DATABASEURL}/exam/${id}/question`, {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        })\n        setState({...state, loading: false})\n        setQuestions(res.data.data)\n\n        console.log(res.data.data)\n\n\n    } catch (e) {\n      console.log(e);\n    }\n    }\n    fetchData();\n    //eslint-disable-line\n  }, [])\n\n  const qstOpt = questions.map((a, i) => {return a.options})\n  const qst = JSON.stringify(qstOpt)\n  console.log(qst)*/\n\n\n  const onQuestionHandler = () => {\n    setStep(2)\n  }\n\n  return (\n    <React.Fragment>\n        <div className=\"page-content\">\n        <Container fluid>\n        <Row>\n        <Col lg=\"12\">\n        {step === 1 && <Startquestion onQuestionStart={onQuestionHandler}/>}\n        {step === 2 && <Questionform\n          data={Question[activeQuestion] }\n          onAnswerUpdate = {setAnswers}\n          numberOfQuestion= {Question.length}\n          activeQuestion = {activeQuestion}\n          onSetActiveQuestion = {setActiveQuestion}\n          setShowPrev = {setShowPrev}\n          onSetStep= {setStep}\n        />}\n        {step === 3 && <Result\n        results={answers}\n        data={Question}\n        />}\n        </Col>\n        </Row>\n\n        </Container>\n    </div>\n\n    </React.Fragment>\n  );\n};\n\nexport default withNamespaces()(stateWrapper(Questions));"]},"metadata":{},"sourceType":"module"}