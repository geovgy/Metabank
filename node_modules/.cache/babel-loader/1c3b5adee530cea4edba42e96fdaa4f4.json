{"ast":null,"code":"import { Container } from \"unstated\";\nimport instance from \"../helpers/axiosly\";\nimport CONSTANTS from \"../helpers/App.constant\";\nimport { LOCAL_STORAGE_SIGNIN_KEY } from '../App.constants';\n\nclass SupportContainer extends Container {\n  constructor() {\n    super();\n\n    this.goBack = props => {\n      props.history.goBack();\n    };\n\n    this.createSupportTicket = ({\n      fullname,\n      title,\n      body,\n      userId\n    }, bearertoken) => {\n      const token = localStorage.getItem(\"token\");\n      instance.post(`${process.env.REACT_APP_DATABASEURL}support`, {\n        title,\n        body,\n        userId\n      }, {\n        headers: {\n          \"Authorization\": `Bearer ${token}`\n        }\n      }).then(response => {\n        // console.log(\"status here \" , response.status);\n        const status = response.status == 200 ? 'passed' : 'failed';\n        console.log(response.status);\n        this.setState({\n          sessionData: {\n            supportStatus: status\n          }\n        });\n        let copySessionData;\n        copySessionData = ({}, this.state.sessionData);\n        copySessionData.supportStatus = status;\n        console.log(\"api res\", this.state.sessionData.supportStatus);\n      }).catch(e => console.log(e));\n    };\n\n    this.state = {\n      sessionData: {\n        user: null,\n        accessToken: \"\",\n        userId: -1,\n        supportStatus: 'default'\n      }\n    };\n  } // signIn = ({ email, password }, props) => {\n  //   instance\n  //     .post(`${process.env.REACT_APP_DATABASEURL}auth/login`, { email, password })\n  //     .then((response) => {\n  //       console.log(response.data.data);\n  //       localStorage.setItem(LOCAL_STORAGE_SIGNIN_KEY, JSON.stringify(response.data.data));\n  //       console.log(\"local storage data\", localStorage.getItem(LOCAL_STORAGE_SIGNIN_KEY));\n  //       props.history.push(\"/dashboard\");\n  //     })\n  //     .catch((e) => {\n  //       console.log(e);\n  //     });\n  // };\n\n\n}\n\nexport { SupportContainer };","map":{"version":3,"sources":["/Users/mac/writingPlatform/src/containers/SupportContainer.js"],"names":["Container","instance","CONSTANTS","LOCAL_STORAGE_SIGNIN_KEY","SupportContainer","constructor","goBack","props","history","createSupportTicket","fullname","title","body","userId","bearertoken","token","localStorage","getItem","post","process","env","REACT_APP_DATABASEURL","headers","then","response","status","console","log","setState","sessionData","supportStatus","copySessionData","state","catch","e","user","accessToken"],"mappings":"AAAA,SAASA,SAAT,QAA0B,UAA1B;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAAQC,wBAAR,QAAuC,kBAAvC;;AAEA,MAAMC,gBAAN,SAA+BJ,SAA/B,CAAyC;AACvCK,EAAAA,WAAW,GAAG;AACZ;;AADY,SAWdC,MAXc,GAWJC,KAAD,IAAW;AAClBA,MAAAA,KAAK,CAACC,OAAN,CAAcF,MAAd;AACD,KAba;;AAAA,SAiBdG,mBAjBc,GAiBQ,CAAC;AAAEC,MAAAA,QAAF;AAAYC,MAAAA,KAAZ;AAAmBC,MAAAA,IAAnB;AAAyBC,MAAAA;AAAzB,KAAD,EAAoCC,WAApC,KAAoD;AAExE,YAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACAhB,MAAAA,QAAQ,CAACiB,IAAT,CAAe,GAAEC,OAAO,CAACC,GAAR,CAAYC,qBAAsB,SAAnD,EAA6D;AAAEV,QAAAA,KAAF;AAASC,QAAAA,IAAT;AAAeC,QAAAA;AAAf,OAA7D,EAAsF;AACpFS,QAAAA,OAAO,EAAE;AACP,2BAAkB,UAASP,KAAM;AAD1B;AAD2E,OAAtF,EAIGQ,IAJH,CAISC,QAAD,IAAc;AACpB;AACA,cAAMC,MAAM,GAAID,QAAQ,CAACC,MAAT,IAAmB,GAApB,GAA2B,QAA3B,GAAsC,QAArD;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACC,MAArB;AACE,aAAKG,QAAL,CAAc;AACZC,UAAAA,WAAW,EAAE;AACXC,YAAAA,aAAa,EAACL;AADH;AADD,SAAd;AAMA,YAAIM,eAAJ;AACAA,QAAAA,eAAe,IAAI,IAAI,KAAKC,KAAL,CAAWH,WAAnB,CAAf;AACAE,QAAAA,eAAe,CAACD,aAAhB,GAAgCL,MAAhC;AAEAC,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsB,KAAKK,KAAL,CAAWH,WAAX,CAAuBC,aAA7C;AACH,OAnBD,EAmBGG,KAnBH,CAmBSC,CAAC,IAAIR,OAAO,CAACC,GAAR,CAAYO,CAAZ,CAnBd;AAoBD,KAxCa;;AAEZ,SAAKF,KAAL,GAAa;AACXH,MAAAA,WAAW,EAAE;AACXM,QAAAA,IAAI,EAAE,IADK;AAEXC,QAAAA,WAAW,EAAE,EAFF;AAGXvB,QAAAA,MAAM,EAAE,CAAC,CAHE;AAIXiB,QAAAA,aAAa,EAAC;AAJH;AADF,KAAb;AAQD,GAXsC,CA2CvC;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAxDuC;;AA2DzC,SAAS1B,gBAAT","sourcesContent":["import { Container } from \"unstated\";\nimport instance from \"../helpers/axiosly\";\nimport CONSTANTS from \"../helpers/App.constant\";\nimport {LOCAL_STORAGE_SIGNIN_KEY} from '../App.constants'\n\nclass SupportContainer extends Container {\n  constructor() {\n    super();\n    this.state = {\n      sessionData: {\n        user: null,\n        accessToken: \"\",\n        userId: -1,\n        supportStatus:'default',\n      },\n    };\n  }\n  goBack = (props) => {\n    props.history.goBack();\n  };\n\n\n\n  createSupportTicket = ({ fullname, title, body, userId }, bearertoken) => {\n\n    const token = localStorage.getItem(\"token\")\n    instance.post(`${process.env.REACT_APP_DATABASEURL}support`, { title, body, userId }, {\n      headers: {\n        \"Authorization\": `Bearer ${token}`\n      }\n    }).then((response) => {\n      // console.log(\"status here \" , response.status);\n      const status = (response.status == 200) ? 'passed' : 'failed'\n      console.log(response.status)\n        this.setState({\n          sessionData: {\n            supportStatus:status,\n          },\n        })\n        \n        let copySessionData;\n        copySessionData = ({}, this.state.sessionData);\n        copySessionData.supportStatus = status;\n\n        console.log(\"api res\",this.state.sessionData.supportStatus)\n    }).catch(e => console.log(e))\n  };\n\n  // signIn = ({ email, password }, props) => {\n  //   instance\n  //     .post(`${process.env.REACT_APP_DATABASEURL}auth/login`, { email, password })\n  //     .then((response) => {\n  //       console.log(response.data.data);\n  //       localStorage.setItem(LOCAL_STORAGE_SIGNIN_KEY, JSON.stringify(response.data.data));\n\n  //       console.log(\"local storage data\", localStorage.getItem(LOCAL_STORAGE_SIGNIN_KEY));\n  //       props.history.push(\"/dashboard\");\n  //     })\n  //     .catch((e) => {\n  //       console.log(e);\n  //     });\n  // };\n}\n\nexport { SupportContainer };\n"]},"metadata":{},"sourceType":"module"}