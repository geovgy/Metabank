{"ast":null,"code":"var _jsxFileName = \"/Users/mac/writingPlatform/src/pages/SuperAdmin/Users/UsersList.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Card, CardBody, CardTitle, Badge, Button } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport instance from \"../../../helpers/axiosly\";\nimport stateWrapper from \"../../../containers/provider\";\nimport { withNamespaces } from \"react-i18next\";\nimport Breadcrumbs from \"../../../components/Common/Breadcrumb\";\nimport Moment from 'react-moment';\nimport Pagination from './Pagination';\n\nconst Users = props => {\n  //const[users, setUsers] = useState([])\n  const [currentPage, setCurrentPage] = useState(1);\n  const [usersPerPage, setUsersPerPage] = useState(10);\n  const [state, setState] = useState({\n    loading: false\n  });\n  useEffect(() => {\n    let mounted = true;\n    setState({ ...state,\n      loading: true\n    });\n    let userData;\n    userData = props.userStore.fetchUser(props);\n\n    async function fetchData() {\n      const res = await props.userStore.fetchAllUser(userData.access_token);\n\n      if (res.data.status == 'Success') {\n        setState({ ...state,\n          loading: false\n        });\n      } //setUsers(res.data.data.rows)\n\n    }\n\n    fetchData();\n    return () => mounted = false; //eslint-disable-line\n  }, []);\n  let users = props.userStore.state.sessionData.allUserList;\n  console.log(users); //get current page\n\n  const indexOfLastUser = currentPage * usersPerPage;\n  const indexOffirstUser = indexOfLastUser - usersPerPage;\n  const currentUser = users && users.slice(indexOffirstUser, indexOfLastUser); //change page\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardTitle, {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, \"Users\"), state.loading ? /*#__PURE__*/React.createElement(\"div\", {\n    class: \"spinner-border\",\n    role: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    class: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, \"Loading...\")) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table-responsive\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table table-centered table-nowrap mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    className: \"thead-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }, \"#\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 16\n    }\n  }, \"User ID\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 16\n    }\n  }, \"Created At\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 16\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 16\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 16\n    }\n  }, \"Role\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 12\n    }\n  }, currentUser && currentUser.map((user, key) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: \"_tr_\" + key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 16\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 18\n    }\n  }, key + 1), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 18\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"#\",\n    className: \"text-body font-weight-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 20\n    }\n  }, \" \", user.id, \" \"), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 18\n    }\n  }, /*#__PURE__*/React.createElement(Moment, {\n    format: \"YYYY/MM/DD\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 22\n    }\n  }, user.createdAt)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 18\n    }\n  }, user.first_name, \" \", user.last_name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 18\n    }\n  }, user.email), user.RoleId === 2 ? /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 39\n    }\n  }, \"Client\") : /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 56\n    }\n  }, \"Writer\"))))), /*#__PURE__*/React.createElement(Pagination, {\n    usersPerPage: usersPerPage,\n    totalUser: users && users.length,\n    paginate: paginate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 10\n    }\n  })))));\n};\n\nexport default withNamespaces()(stateWrapper(Users));","map":{"version":3,"sources":["/Users/mac/writingPlatform/src/pages/SuperAdmin/Users/UsersList.js"],"names":["React","useEffect","useState","Card","CardBody","CardTitle","Badge","Button","Link","instance","stateWrapper","withNamespaces","Breadcrumbs","Moment","Pagination","Users","props","currentPage","setCurrentPage","usersPerPage","setUsersPerPage","state","setState","loading","mounted","userData","userStore","fetchUser","fetchData","res","fetchAllUser","access_token","data","status","users","sessionData","allUserList","console","log","indexOfLastUser","indexOffirstUser","currentUser","slice","paginate","pageNumber","map","user","key","id","createdAt","first_name","last_name","email","RoleId","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Card, CardBody, CardTitle, Badge, Button } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport instance from \"../../../helpers/axiosly\";\nimport stateWrapper from \"../../../containers/provider\";\nimport { withNamespaces } from \"react-i18next\";\nimport Breadcrumbs from \"../../../components/Common/Breadcrumb\";\nimport Moment from 'react-moment'\nimport Pagination from './Pagination'\n\nconst Users = (props) => {\n\n  //const[users, setUsers] = useState([])\n  const[currentPage, setCurrentPage] = useState(1);\n  const [usersPerPage, setUsersPerPage] = useState(10)\n  const[state, setState] = useState({\n    loading: false\n  })\n\n  useEffect(() => {\n    let mounted = true;\n    setState({...state, loading: true})\n    let userData;\n    userData = props.userStore.fetchUser(props);\n\n    async function fetchData(){\n\n      const res = await props.userStore.fetchAllUser(\n        userData.access_token\n      );\n      if(res.data.status == 'Success'){\n          setState({...state, loading: false})\n      }\n\n        //setUsers(res.data.data.rows)\n\n    }\n    fetchData();\n    return () => mounted = false;\n    //eslint-disable-line\n  }, [])\n\n  let users = props.userStore.state.sessionData.allUserList;\n  console.log(users)\n  //get current page\n  const indexOfLastUser = currentPage * usersPerPage;\n  const indexOffirstUser = indexOfLastUser - usersPerPage;\n  const currentUser = users && users.slice(indexOffirstUser, indexOfLastUser);\n  //change page\n  const paginate = (pageNumber) => setCurrentPage(pageNumber)\n\n  return (\n    <React.Fragment>\n      <Card>\n        <CardBody>\n          <CardTitle className=\"mb-4\">Users</CardTitle>\n          {state.loading ? (<div class=\"spinner-border\" role=\"status\">\n      <span class=\"sr-only\">Loading...</span>\n      </div>): (\n         <div className=\"table-responsive\">\n         <table className=\"table table-centered table-nowrap mb-0\">\n           <thead className=\"thead-light\">\n             <tr>\n              <th>#</th>\n               <th>User ID</th>\n               <th>Created At</th>\n               <th>Name</th>\n               <th>Email</th>\n               <th>Role</th>\n             </tr>\n           </thead>\n           <tbody>\n             {currentUser && currentUser.map((user, key) => (\n               <tr key={\"_tr_\" + key}>\n                 <th scope=\"row\">{key + 1}</th>\n                 <td>\n                   <Link to=\"#\" className=\"text-body font-weight-bold\">\n                     {\" \"}\n                     {user.id}{\" \"}\n                   </Link>{\" \"}\n                 </td>\n                 <td><Moment format=\"YYYY/MM/DD\">{user.createdAt}</Moment></td>\n                 <td>{user.first_name} {user.last_name}</td>\n                 <td>{user.email}</td>\n                 {user.RoleId === 2 ? <td>Client</td>: <td>Writer</td>}\n               </tr>\n             ))}\n           </tbody>\n         </table>\n         <Pagination usersPerPage={usersPerPage} totalUser={users && users.length} paginate={paginate}/>\n       </div>\n\n      )}\n\n        </CardBody>\n      </Card>\n    </React.Fragment>\n  );\n};\n\nexport default withNamespaces()(stateWrapper(Users));\n"]},"metadata":{},"sourceType":"module"}