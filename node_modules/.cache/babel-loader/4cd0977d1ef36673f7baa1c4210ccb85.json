{"ast":null,"code":"var _jsxFileName = \"/Users/mac/writingPlatform/src/pages/SuperAdmin/Project/AssignProject.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Container, Row, Col, Card, CardBody, CardTitle, Badge, Button } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport instance from \"../../../helpers/axiosly\";\nimport stateWrapper from \"../../../containers/provider\";\nimport { withNamespaces } from \"react-i18next\";\nimport Breadcrumbs from \"../../../components/Common/Breadcrumb\";\nimport Pagination from './Pagination';\n\nconst Users = props => {\n  const [users, setUsers] = useState([]);\n  const [orders, setOrders] = useState([]);\n  const [state, setState] = useState({\n    userId: {},\n    orderId: {},\n    loading: false\n  });\n  const [currentPage, setCurrentPage] = useState(1);\n  const [orderPerPage, setUsersPerPage] = useState(4); //get current page\n\n  const indexOfLastOrder = currentPage * orderPerPage;\n  const indexOffirstOrder = indexOfLastOrder - orderPerPage;\n  const currentOrders = orders.slice(indexOffirstOrder, indexOfLastOrder); //change page\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  useEffect(() => {\n    setState({ ...state,\n      loading: true\n    });\n\n    async function fetchData() {\n      try {\n        const token = localStorage.getItem(\"token\");\n        const userRes = await instance.get(`${process.env.REACT_APP_DATABASEURL}/user`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setState({ ...state,\n          loading: false\n        });\n        setUsers(userRes.data.data.rows);\n        const orderRes = await instance.get(`${process.env.REACT_APP_DATABASEURL}/order`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setOrders(orderRes.data.data.rows);\n      } catch (e) {\n        console.log(e);\n      }\n    }\n\n    fetchData(); //eslint-disable-line\n  }, []);\n  const writers = users.filter(user => user.RoleId === 3);\n  const clients = users.filter(user => user.RoleId === 2);\n  const [search, setsearch] = useState(false);\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    try {\n      const userId = Object.keys(state.userId).filter(i => {\n        var _state$userId$;\n\n        return ((_state$userId$ = state.userId[`${i}`]) === null || _state$userId$ === void 0 ? void 0 : _state$userId$.status) == true;\n      })[0];\n      const orderId = Object.keys(state.orderId).filter(i => {\n        var _state$orderId$;\n\n        return ((_state$orderId$ = state.orderId[`${i}`]) === null || _state$orderId$ === void 0 ? void 0 : _state$orderId$.status) == true;\n      });\n      orderId.forEach(async i => {\n        var _state$userId$userId, _state$userId$userId$, _state$orderId$i, _state$orderId$i$valu;\n\n        console.log(i);\n        const body = {\n          user_id: (_state$userId$userId = state.userId[userId]) === null || _state$userId$userId === void 0 ? void 0 : (_state$userId$userId$ = _state$userId$userId.value) === null || _state$userId$userId$ === void 0 ? void 0 : _state$userId$userId$.id,\n          order_id: (_state$orderId$i = state.orderId[i]) === null || _state$orderId$i === void 0 ? void 0 : (_state$orderId$i$valu = _state$orderId$i.value) === null || _state$orderId$i$valu === void 0 ? void 0 : _state$orderId$i$valu.id\n        };\n        console.log(body);\n        const token = localStorage.getItem(\"token\");\n        await instance.post(`${process.env.REACT_APP_DATABASEURL}/project`, { ...body\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }).then(response => {\n          console.log(response.data.data);\n        }).catch(e => console.log(e));\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  const handleInputChangeForUser = (key, value) => {\n    const temp = Object.keys(state.userId).map(i => {\n      let t = {};\n      t[`${i}`] = {\n        status: false,\n        value\n      };\n      return t;\n    });\n    temp[key] = {\n      status: true,\n      value\n    };\n    setState({ ...state,\n      userId: temp\n    });\n  };\n\n  const handleInputChangeForOrder = (key, value) => {\n    var _state$orderId$$statu, _state$orderId$2;\n\n    console.log(value);\n    const temp = Object.keys(state.orderId).map(i => {\n      return state.orderId[`${i}`];\n    });\n    temp[key] = {\n      status: (_state$orderId$$statu = !((_state$orderId$2 = state.orderId[`${key}`]) === null || _state$orderId$2 === void 0 ? void 0 : _state$orderId$2.status)) !== null && _state$orderId$$statu !== void 0 ? _state$orderId$$statu : false,\n      value\n    };\n    setState({ ...state,\n      orderId: temp\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumbs, {\n    title: props.t(\"Project\"),\n    breadcrumbItem: props.t(\"Assign Project\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, state.loading ? /*#__PURE__*/React.createElement(\"div\", {\n    class: \"spinner-border\",\n    role: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    class: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 19\n    }\n  }, \"Loading...\")) : /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 24\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-0\",\n    \"aria-labelledby\": \"page-header-search-dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 24\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"p-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 32\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group m-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 34\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 36\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    placeholder: \"Search...\",\n    \"aria-label\": \"Recipient's username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 38\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 38\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 40\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"mdi mdi-magnify\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 90\n    }\n  }))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 24\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table-responsive col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 24\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 26\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    className: \"thead-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 28\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 30\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      width: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 32\n    }\n  }, \" \"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 32\n    }\n  }, \"Writer\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 28\n    }\n  }, writers.map((writer, key) => {\n    var _state$userId$key;\n\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 32\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 34\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"custom-control custom-checkbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 36\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      className: \"custom-control-input\",\n      id: writer.id,\n      checked: (state === null || state === void 0 ? void 0 : (_state$userId$key = state.userId[key]) === null || _state$userId$key === void 0 ? void 0 : _state$userId$key.status) == true ? true : false,\n      onChange: e => {\n        handleInputChangeForUser(key, writer);\n      },\n      key: key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 38\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"custom-control-label\",\n      htmlFor: writer.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 38\n      }\n    }, \"\\xA0\"))), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 34\n      }\n    }, writer.first_name, \" \", writer.last_name));\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table-responsive col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    className: \"thead-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 28\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 30\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 32\n    }\n  }, \"Client\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 28\n    }\n  }, clients.map((client, key) => /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 32\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 34\n    }\n  }, client.first_name, \" \", client.last_name)))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    className: \"thead-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 28\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"table-primary\",\n    onClick: () => {\n      setsearch(!search);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 30\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      width: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 32\n    }\n  }, \" \"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 32\n    }\n  }, \"Orders\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 28\n    }\n  }, currentOrders.map((order, key) => {\n    var _state$orderId$key;\n\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 32\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 34\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"custom-control custom-checkbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 36\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      className: \"custom-control-input\",\n      id: order.id,\n      checked: (state === null || state === void 0 ? void 0 : (_state$orderId$key = state.orderId[key]) === null || _state$orderId$key === void 0 ? void 0 : _state$orderId$key.status) == true ? true : false,\n      onChange: () => handleInputChangeForOrder(key, order),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 38\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"custom-control-label\",\n      htmlFor: order.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 38\n      }\n    }, \"\\xA0\"))), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 34\n      }\n    }, order.topic));\n  }))), /*#__PURE__*/React.createElement(Pagination, {\n    orderPerPage: orderPerPage,\n    totalOrder: orders.length,\n    paginate: paginate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 26\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    color: \"primary\",\n    className: \"btn btn-primary waves-effect waves-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 34\n    }\n  }, \" \", \"Assign Project\")))))))))));\n};\n\nexport default withNamespaces()(stateWrapper(Users));","map":{"version":3,"sources":["/Users/mac/writingPlatform/src/pages/SuperAdmin/Project/AssignProject.js"],"names":["React","useEffect","useState","Container","Row","Col","Card","CardBody","CardTitle","Badge","Button","Link","instance","stateWrapper","withNamespaces","Breadcrumbs","Pagination","Users","props","users","setUsers","orders","setOrders","state","setState","userId","orderId","loading","currentPage","setCurrentPage","orderPerPage","setUsersPerPage","indexOfLastOrder","indexOffirstOrder","currentOrders","slice","paginate","pageNumber","fetchData","token","localStorage","getItem","userRes","get","process","env","REACT_APP_DATABASEURL","headers","Authorization","data","rows","orderRes","e","console","log","writers","filter","user","RoleId","clients","search","setsearch","handleSubmit","preventDefault","Object","keys","i","status","forEach","body","user_id","value","id","order_id","post","then","response","catch","handleInputChangeForUser","key","temp","map","t","handleInputChangeForOrder","width","writer","first_name","last_name","client","order","topic","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {  Container, Row, Col, Card, CardBody, CardTitle, Badge, Button } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport instance from \"../../../helpers/axiosly\";\nimport stateWrapper from \"../../../containers/provider\";\nimport { withNamespaces } from \"react-i18next\";\nimport Breadcrumbs from \"../../../components/Common/Breadcrumb\";\nimport Pagination from './Pagination'\n\nconst Users = (props) => {\n \n  const[users, setUsers] = useState([]);\n  const[orders, setOrders] = useState([])\n\n  const [state, setState] = useState({\n    userId: {},\n    orderId: {},\n    loading: false\n  })\n  const[currentPage, setCurrentPage] = useState(1);\n  const [orderPerPage, setUsersPerPage] = useState(4)\n\n  //get current page\n  const indexOfLastOrder = currentPage * orderPerPage;\n  const indexOffirstOrder = indexOfLastOrder - orderPerPage;\n  const currentOrders = orders.slice(indexOffirstOrder, indexOfLastOrder);\n  //change page\n  const paginate = (pageNumber) => setCurrentPage(pageNumber)\n\n  useEffect(() => {\n    setState({...state, loading: true})\n    async function fetchData(){ \n    try {\n      const token = localStorage.getItem(\"token\")\n      const userRes = await instance\n        .get(`${process.env.REACT_APP_DATABASEURL}/user`, {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        })\n        setState({...state, loading: false})\n        setUsers(userRes.data.data.rows)\n\n        const orderRes = await instance\n        .get(`${process.env.REACT_APP_DATABASEURL}/order`, {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        })\n        \n        setOrders(orderRes.data.data.rows)\n       \n    } catch (e) {\n      console.log(e);\n    } \n    }\n    fetchData();\n    //eslint-disable-line\n  }, [])\n  \n  const writers = users.filter(user => user.RoleId === 3)\n  const clients = users.filter(user => user.RoleId === 2)\n\n\n  const [search, setsearch] = useState(false);\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    \n      try {\n        const userId = Object.keys(state.userId).filter(i => state.userId[`${i}`]?.status == true )[0];\n        const orderId = Object.keys(state.orderId).filter(i => state.orderId[`${i}`]?.status == true);\n\n        orderId.forEach(async i => {\n          console.log(i);\n          const body = {\n            user_id: state.userId[userId]?.value?.id,\n            order_id: state.orderId[i]?.value?.id\n          }\n          console.log(body);\n          const token = localStorage.getItem(\"token\")\n          await instance\n              .post(`${process.env.REACT_APP_DATABASEURL}/project`,  {...body}, {\n                headers: {\n                  Authorization: `Bearer ${token}`,\n                },\n              }).then((response) => {\n                  console.log(response.data.data)})\n                  .catch((e) => console.log(e));\n        });    \n      }\n       catch (e) {\n        console.log(e);\n      }\n  }\n\n  const handleInputChangeForUser = (key, value) => {\n    const temp = Object.keys(state.userId).map(i => {\n      let t = {};\n      t[`${i}`] = { status: false, value }\n      return t;\n    });\n    temp[key] = {status: true, value};\n    setState({...state, userId: temp});\n  }\n\n  const handleInputChangeForOrder = (key, value) => {\n    console.log(value);\n    const temp = Object.keys(state.orderId).map(i => {\n      return state.orderId[`${i}`];\n    });\n    temp[key] = {status: !state.orderId[`${key}`]?.status ?? false, value};\n    setState({...state, orderId: temp});\n  }\n\n  return (\n    <React.Fragment>\n        <div className=\"page-content\">\n        <Container fluid>\n        <Row>\n        <Col lg=\"12\">\n         {/* Render Breadcrumb */}\n         <Breadcrumbs\n            title={props.t(\"Project\")}\n            breadcrumbItem={props.t(\"Assign Project\")}\n          />\n      <Card>\n        <CardBody>\n          {state.loading ? (<div class=\"spinner-border\" role=\"status\">\n                  <span class=\"sr-only\">Loading...</span>\n                  </div>):(\n                       <form onSubmit={handleSubmit}>\n                       <div className=\"p-0\"\n                               aria-labelledby=\"page-header-search-dropdown\">\n                               <form className=\"p-3\">\n                                 <div className=\"form-group m-0\">\n                                   <div className=\"input-group\">\n                                     <input type=\"text\" className=\"form-control\" placeholder=\"Search...\" aria-label=\"Recipient's username\" />\n                                     <div className=\"input-group-append\">\n                                       <button className=\"btn btn-primary\" type=\"submit\"><i className=\"mdi mdi-magnify\"></i></button>\n                                     </div>\n                                   </div>\n                                 </div>\n                               </form>\n                             </div>\n                       <div className=\"row\">\n                       <div className=\"table-responsive col\">\n                         <table className=\"table\">\n                           <thead className=\"thead-light\">\n                             <tr>\n                               <th style={{ width: \"20px\" }}>\n                                 {\" \"}\n                               </th>\n                               <th>Writer</th>\n                             </tr>\n                           </thead>\n                           <tbody>\n                             {writers.map((writer, key) => (\n                               <tr>\n                                 <td>\n                                   <div className=\"custom-control custom-checkbox\">\n                                     <input\n                                       type=\"checkbox\"\n                                       className=\"custom-control-input\"\n                                       id={writer.id}\n                                       checked={state?.userId[key]?.status == true ? true : false}\n                                       onChange={e => {\n                                         handleInputChangeForUser(key, writer);\n                                       }}\n                                       key={key}\n                                     />\n                                     <label\n                                       className=\"custom-control-label\"\n                                       htmlFor={writer.id}\n                                     >\n                                       &nbsp;\n                                     </label>\n                                   </div>\n                                 </td>\n                                 <td>{writer.first_name} {writer.last_name}</td>      \n                               </tr>\n                             ))}\n                             \n                           </tbody>\n                         </table>\n                       </div>\n                      <div className=\"table-responsive col\">\n                      <table className=\"table\">\n                           <thead className=\"thead-light\">\n                             <tr>\n                               <th>Client</th>\n                             </tr>\n                           </thead>\n                           <tbody>\n                             {clients.map((client, key) => (\n                               <tr>\n                                 <td>{client.first_name} {client.last_name}</td>       \n                               </tr>\n                             ))}\n                             \n                           </tbody>\n                         </table>\n                      </div>\n                      <div className=\"col\">\n                      <table className=\"table\">\n                           <thead className=\"thead-light\">\n                             <tr className=\"table-primary\" onClick={() => { setsearch(!search) }}>\n                               <th style={{ width: \"20px\" }}>\n                                 {\" \"}\n                               </th>\n                               <th>\n                                     Orders\n                               </th>\n                             </tr>\n                           </thead>\n                           <tbody>\n                               {currentOrders.map((order, key) => ( \n                               <tr>\n                                 <td>\n                                   <div className=\"custom-control custom-checkbox\">\n                                     <input\n                                       type=\"checkbox\"\n                                       className=\"custom-control-input\"\n                                       id={order.id}\n                                       checked={state?.orderId[key]?.status == true ? true : false}\n                                        onChange={() => handleInputChangeForOrder(key, order)}\n                                      />\n                                     <label\n                                       className=\"custom-control-label\"\n                                       htmlFor={order.id}\n                                     >\n                                       &nbsp;\n                                     </label>\n                                   </div>\n                                 </td>\n                                 <td>{order.topic}</td>        \n                               </tr>  \n                                  ))}                          \n                           </tbody>\n                           \n                         </table>\n                         <Pagination orderPerPage={orderPerPage} totalOrder={orders.length} paginate={paginate}/> \n                      </div>\n                      <div className=\"col\"> \n                                 <Button\n                                 type=\"submit\"\n                                 color=\"primary\"\n                                 className=\"btn btn-primary waves-effect waves-light\"\n                                   >\n                                   {\" \"}\n                                  Assign Project\n                                 </Button>\n             \n                      </div>\n                      </div>\n                        \n                       \n                     \n                       </form>\n                  )}\n         \n\n        </CardBody>\n        </Card>\n        </Col>\n        </Row>\n    </Container>\n            </div>\n    </React.Fragment>\n  );\n};\n\nexport default withNamespaces()(stateWrapper(Users));\n"]},"metadata":{},"sourceType":"module"}