{"ast":null,"code":"import _slicedToArray from\"/Users/mac/writingPlatform/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import{Container,Row,Col,Card,CardBody,Label,CardTitle,Input,Form,FormGroup,CustomInput,ListGroup,ListGroupItem,ButtonGroup,Button,Jumbotron,Progress}from\"reactstrap\";import{Link}from\"react-router-dom\";import instance from\"../../../helpers/axiosly\";import stateWrapper from\"../../../containers/provider\";import{withNamespaces}from\"react-i18next\";import Moment from'react-moment';import AvForm from\"availity-reactstrap-validation/lib/AvForm\";import Questionform from'./question';import Startquestion from'./Startquestion';import Result from'./results';var Questions=function Questions(props){var Question=[{\"question\":\"What is capital of Croatia\",\"options\":[\"Split\",\"osijek\",\"Zagreb\"],\"answer\":\"Zagreb\",\"score\":100},{\"question\":\"What is capital of Slovenia\",\"options\":[\"Split\",\"Ljubljana\",\"Zagreb\"],\"answer\":\"Ljubljana\",\"score\":200},{\"question\":\"What is capital of Austria\",\"options\":[\"Split\",\"Vienna\",\"Zagreb\"],\"answer\":\"Vienna\",\"score\":300}];var _useState=useState(1),_useState2=_slicedToArray(_useState,2),step=_useState2[0],setStep=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),activeQuestion=_useState4[0],setActiveQuestion=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),answers=_useState6[0],setAnswers=_useState6[1];var _useState7=useState(0),_useState8=_slicedToArray(_useState7,2),showPrev=_useState8[0],setShowPrev=_useState8[1];var _useState9=useState(0),_useState10=_slicedToArray(_useState9,2),userId=_useState10[0],setUserId=_useState10[1];var _useState11=useState(0),_useState12=_slicedToArray(_useState11,2),score=_useState12[0],setScore=_useState12[1];console.log(answers);var id=Number(props.match.params.id);var rediect=props.history;useEffect(function(){var userData=props.userStore.fetchUser(props);setUserId(userData.id);//eslint-disable-line\n},[]);/*const[questions, setQuestions] = useState([]);\n  const[state, setState] = useState({\n    loading: false\n  })\n\n  useEffect(() => {\n\n    async function fetchData(){\n      setState({...state, loading: true})\n    try {\n      const token = localStorage.getItem(\"token\")\n      let id = props.match.params.id\n      const res = await instance\n        .get(`${process.env.REACT_APP_DATABASEURL}/exam/${id}/question`, {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        })\n        setState({...state, loading: false})\n        setQuestions(res.data.data)\n\n        console.log(res.data.data)\n\n\n    } catch (e) {\n      console.log(e);\n    }\n    }\n    fetchData();\n    //eslint-disable-line\n  }, [])\n\n  const qstOpt = questions.map((a, i) => {return a.options})\n  const qst = JSON.stringify(qstOpt)\n  console.log(qst)*/var onQuestionHandler=function onQuestionHandler(){setStep(2);};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"page-content\"},/*#__PURE__*/React.createElement(Container,{fluid:true},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{xl:\"2\"}),/*#__PURE__*/React.createElement(Col,{xl:\"8\"},step===1&&/*#__PURE__*/React.createElement(Startquestion,{onQuestionStart:onQuestionHandler}),step===2&&/*#__PURE__*/React.createElement(Questionform,{data:Question[activeQuestion],onAnswerUpdate:setAnswers,numberOfQuestion:Question.length,activeQuestion:activeQuestion,onSetActiveQuestion:setActiveQuestion,setShowPrev:setShowPrev,onSetStep:setStep,setScore:setScore,score:score}),step===3&&/*#__PURE__*/React.createElement(Result,{results:answers,data:Question,questionId:id,userId:userId,score:score,rediect:rediect})),/*#__PURE__*/React.createElement(Col,{xl:\"2\"})))));};export default withNamespaces()(stateWrapper(Questions));","map":{"version":3,"sources":["/Users/mac/writingPlatform/src/pages/Writer/Exam/Questions.js"],"names":["React","useEffect","useState","Container","Row","Col","Card","CardBody","Label","CardTitle","Input","Form","FormGroup","CustomInput","ListGroup","ListGroupItem","ButtonGroup","Button","Jumbotron","Progress","Link","instance","stateWrapper","withNamespaces","Moment","AvForm","Questionform","Startquestion","Result","Questions","props","Question","step","setStep","activeQuestion","setActiveQuestion","answers","setAnswers","showPrev","setShowPrev","userId","setUserId","score","setScore","console","log","id","Number","match","params","rediect","history","userData","userStore","fetchUser","onQuestionHandler","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {  Container, Row, Col, Card, CardBody, Label, CardTitle, Input, Form, FormGroup, CustomInput, ListGroup,ListGroupItem, ButtonGroup, Button, Jumbotron, Progress } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport instance from \"../../../helpers/axiosly\";\nimport stateWrapper from \"../../../containers/provider\";\nimport { withNamespaces } from \"react-i18next\";\nimport Moment from 'react-moment'\nimport AvForm from \"availity-reactstrap-validation/lib/AvForm\";\nimport Questionform from './question'\nimport Startquestion from './Startquestion'\nimport Result from './results'\n\n\nconst Questions = (props) => {\n\n  const Question = [\n    {\n      \"question\" : \"What is capital of Croatia\",\n      \"options\": [\"Split\", \"osijek\", \"Zagreb\"],\n      \"answer\": \"Zagreb\",\n      \"score\": 100\n    },\n    {\n      \"question\" : \"What is capital of Slovenia\",\n      \"options\": [\"Split\", \"Ljubljana\", \"Zagreb\"],\n      \"answer\": \"Ljubljana\",\n      \"score\": 200\n    },\n    {\n      \"question\" : \"What is capital of Austria\",\n      \"options\": [\"Split\", \"Vienna\", \"Zagreb\"],\n      \"answer\": \"Vienna\",\n      \"score\": 300\n    }\n  ]\n\n  const [step, setStep] = useState(1);\n  const [activeQuestion, setActiveQuestion] = useState(0);\n  const [answers, setAnswers] = useState([])\n  const [showPrev, setShowPrev] = useState(0)\n  const[userId, setUserId] = useState(0)\n  const [score, setScore] = useState(0)\n\n  console.log(answers)\n  let id = Number(props.match.params.id)\n  let rediect = props.history\n\n  useEffect(() => {\n    let userData = props.userStore.fetchUser(props);\n    setUserId(userData.id)\n    //eslint-disable-line\n  }, [])\n\n\n  /*const[questions, setQuestions] = useState([]);\n  const[state, setState] = useState({\n    loading: false\n  })\n\n  useEffect(() => {\n\n    async function fetchData(){\n      setState({...state, loading: true})\n    try {\n      const token = localStorage.getItem(\"token\")\n      let id = props.match.params.id\n      const res = await instance\n        .get(`${process.env.REACT_APP_DATABASEURL}/exam/${id}/question`, {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        })\n        setState({...state, loading: false})\n        setQuestions(res.data.data)\n\n        console.log(res.data.data)\n\n\n    } catch (e) {\n      console.log(e);\n    }\n    }\n    fetchData();\n    //eslint-disable-line\n  }, [])\n\n  const qstOpt = questions.map((a, i) => {return a.options})\n  const qst = JSON.stringify(qstOpt)\n  console.log(qst)*/\n\n\n  const onQuestionHandler = () => {\n    setStep(2)\n  }\n\n  return (\n    <React.Fragment>\n        <div className=\"page-content\">\n        <Container fluid>\n        <Row>\n        <Col xl='2'></Col>\n        <Col xl='8'>\n        {step === 1 && <Startquestion onQuestionStart={onQuestionHandler}/>}\n        {step === 2 && <Questionform\n          data={Question[activeQuestion] }\n          onAnswerUpdate = {setAnswers}\n          numberOfQuestion= {Question.length}\n          activeQuestion = {activeQuestion}\n          onSetActiveQuestion = {setActiveQuestion}\n          setShowPrev = {setShowPrev}\n          onSetStep= {setStep}\n          setScore={setScore}\n          score={score}\n        />}\n        {step === 3 && <Result\n        results={answers}\n        data={Question}\n        questionId={id}\n        userId={userId}\n        score={score}\n        rediect={rediect}\n        />}\n        </Col>\n        <Col xl='2'></Col>\n        </Row>\n\n        </Container>\n    </div>\n\n    </React.Fragment>\n  );\n};\n\nexport default withNamespaces()(stateWrapper(Questions));"]},"metadata":{},"sourceType":"module"}