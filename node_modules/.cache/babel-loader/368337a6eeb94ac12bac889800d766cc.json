{"ast":null,"code":"var _jsxFileName = \"/Users/mac/writingPlatform/src/pages/SuperAdmin/Exam/CreateQuestion.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Container, Row, Col, Card, CardBody, CardTitle, NavItem, NavLink, Label, Input, Form, FormGroup } from \"reactstrap\";\nimport { Link } from \"react-router-dom\"; // availity-reactstrap-validation\n\nimport { AvForm, AvField, Button } from \"availity-reactstrap-validation\";\nimport instance from \"../../../helpers/axiosly\";\nimport * as _ from \"lodash\";\nimport stateWrapper from \"../../../containers/provider\"; // Pages Components\n// import LatestTranaction from \"./LatestTranaction\";\n//Import Breadcrumb\n\nimport Breadcrumbs from \"../../../components/Common/Breadcrumb\"; //i18n\n\nimport { withNamespaces } from \"react-i18next\";\n\nconst CreateQuestion = props => {\n  const [state, setState] = useState({\n    question: \"\",\n    answer: \"\",\n    options: \"\",\n    score: 0,\n    loading: false\n  });\n  const [updateQuestion, setUpdateQuestion] = useState(\"\");\n  useEffect(() => {\n    let serviceData, userData;\n    userData = props.userStore.fetchUser(props);\n    serviceData = props.masterStore.fetchQuestion(userData.access_token, Number(props.match.params.id));\n\n    if (props.match.path === \"/creatquestion/update/:id?\") {\n      setUpdateQuestion(\"update\");\n      setState({ ...state,\n        question: currentQuestion.map(e => {\n          return e.question;\n        }),\n        answer: currentQuestion.map(e => {\n          return e.answer;\n        }),\n        options: currentQuestion.map(e => {\n          return e.options;\n        }),\n        score: currentQuestion.map(e => {\n          return e.score;\n        })\n      });\n    } else {\n      setState({ ...state,\n        name: '',\n        price: ''\n      });\n    } //eslint-disable-line\n\n  }, []);\n  let questions = props.masterStore.state.sessionData.questionList;\n  let currentQuestion = questions && questions.filter(e => e.id === Number(props.match.params.id));\n  console.log(props);\n\n  async function handleSubmit(e) {\n    setState({ ...state,\n      loading: true\n    });\n    let userData;\n    userData = props.userStore.fetchUser(props);\n    e.preventDefault();\n    props.masterStore.addQuestion(state, userData.access_token, Number(props.match.query.q));\n    setTimeout(function () {\n      setState({ ...state,\n        name: \"\",\n        loading: false\n      });\n    }, 2000);\n    setTimeout(function () {\n      props.history.push({\n        pathname: `/question/${Number(props.match.params.id)}`,\n        state: {\n          status: 'created'\n        }\n      });\n    }, 2000);\n  }\n\n  async function handleUpdate(e) {\n    setState({ ...state,\n      loading: true\n    });\n    let userData;\n    userData = props.userStore.fetchUser(props);\n    e.preventDefault();\n    let id = Number(props.match.params.id);\n    props.masterStore.updateExam(state, userData.access_token, id);\n    setTimeout(function () {\n      setState({ ...state,\n        name: \"\",\n        price: \"\",\n        loading: false\n      });\n    }, 2000);\n    setTimeout(function () {\n      props.history.push({\n        pathname: \"/exam\",\n        state: {\n          status: 'updated'\n        }\n      });\n    }, 2000);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumbs, {\n    title: props.t(\"Question\"),\n    breadcrumbItem: props.t(\"Create Question\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 17\n    }\n  }, updateQuestion === \"\" ? /*#__PURE__*/React.createElement(CardTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 42\n    }\n  }, \"CREATE QUESTION\") : /*#__PURE__*/React.createElement(CardTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 21\n    }\n  }, \"UPDATE QUESTION\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 27\n    }\n  }, \"Question\"), /*#__PURE__*/React.createElement(Input, {\n    value: state.name,\n    onChange: e => setState({ ...state,\n      name: e.target.value\n    }),\n    type: \"text\",\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 27\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 27\n    }\n  }, \"Answer\"), /*#__PURE__*/React.createElement(Input, {\n    value: state.answer,\n    onChange: e => setState({ ...state,\n      answer: e.target.value\n    }),\n    type: \"text\",\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 27\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 27\n    }\n  }, \"Option\"), /*#__PURE__*/React.createElement(Input, {\n    value: state.options,\n    onChange: e => setState({ ...state,\n      options: e.target.value\n    }),\n    type: \"text\",\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 27\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 27\n    }\n  }, \"Score\"), /*#__PURE__*/React.createElement(Input, {\n    value: state.score,\n    onChange: e => setState({ ...state,\n      score: e.target.value\n    }),\n    type: \"text\",\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 27\n    }\n  })))), updateQuestion === \"\" ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \" \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 24\n    }\n  }, state.loading ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"spinner-grow text-primary m-1\",\n    role: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 28\n    }\n  }) : /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary waves-effect waves-light mx-2\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 27\n    }\n  }, \"Post Question\")) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 23\n    }\n  }, state.loading ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"spinner-grow text-primary m-1\",\n    role: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 28\n    }\n  }) : /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary waves-effect waves-light mx-2\",\n    type: \"submit\",\n    onClick: handleUpdate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 27\n    }\n  }, \"Update Question\"))))))))));\n};\n\nexport default withNamespaces()(stateWrapper(CreateQuestion));","map":{"version":3,"sources":["/Users/mac/writingPlatform/src/pages/SuperAdmin/Exam/CreateQuestion.js"],"names":["React","useState","useEffect","Container","Row","Col","Card","CardBody","CardTitle","NavItem","NavLink","Label","Input","Form","FormGroup","Link","AvForm","AvField","Button","instance","_","stateWrapper","Breadcrumbs","withNamespaces","CreateQuestion","props","state","setState","question","answer","options","score","loading","updateQuestion","setUpdateQuestion","serviceData","userData","userStore","fetchUser","masterStore","fetchQuestion","access_token","Number","match","params","id","path","currentQuestion","map","e","name","price","questions","sessionData","questionList","filter","console","log","handleSubmit","preventDefault","addQuestion","query","q","setTimeout","history","push","pathname","status","handleUpdate","updateExam","t","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Container,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  CardTitle,\n  NavItem,\n  NavLink,\n  Label,\n  Input,\n  Form,\n  FormGroup,\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\n\n// availity-reactstrap-validation\nimport { AvForm, AvField, Button } from \"availity-reactstrap-validation\";\nimport instance from \"../../../helpers/axiosly\";\n\n\n\nimport * as _ from \"lodash\";\nimport stateWrapper from \"../../../containers/provider\";\n\n\n\n// Pages Components\n// import LatestTranaction from \"./LatestTranaction\";\n\n//Import Breadcrumb\nimport Breadcrumbs from \"../../../components/Common/Breadcrumb\";\n\n//i18n\nimport { withNamespaces } from \"react-i18next\";\n\nconst CreateQuestion = (props) => {\n\n  const [state, setState] = useState({\n    question: \"\",\n    answer: \"\",\n    options: \"\",\n    score: 0,\n    loading: false\n  });\n\n  const[updateQuestion, setUpdateQuestion] = useState(\"\");\n\n\n\n\n  useEffect(() => {\n\n    let serviceData, userData;\n    userData = props.userStore.fetchUser(props);\n\n    serviceData = props.masterStore.fetchQuestion(\n      userData.access_token, Number(props.match.params.id)\n    );\n\n    if(props.match.path === \"/creatquestion/update/:id?\"){\n        setUpdateQuestion(\"update\")\n        setState({\n        ...state,\n        question: currentQuestion.map(e => {return (e.question)}),\n        answer: currentQuestion.map(e => {return (e.answer)}),\n        options: currentQuestion.map(e => {return (e.options)}),\n        score: currentQuestion.map(e => {return (e.score)}),\n        })\n    } else {\n        setState({\n        ...state,\n        name: '',\n        price: ''\n      })\n      }\n\n    //eslint-disable-line\n  }, [])\n\n  let questions = props.masterStore.state.sessionData.questionList;\n\n  let currentQuestion = questions && questions.filter((e) => e.id === Number(props.match.params.id))\n\n  console.log(props)\n\n  async function handleSubmit(e) {\n    setState({...state,\n      loading: true,\n    });\n    let  userData;\n    userData = props.userStore.fetchUser(props);\n\n\n\n    e.preventDefault()\n    props.masterStore.addQuestion(state, userData.access_token, Number(props.match.query.q))\n\n    setTimeout(function(){\n      setState({...state,\n        name: \"\",\n        loading: false\n      })\n    }, 2000)\n\n    setTimeout(function(){\n      props.history.push({pathname:`/question/${Number(props.match.params.id)}`, state:{status: 'created'}});\n    }, 2000)\n\n\n\n}\n\n  async function handleUpdate(e){\n    setState({...state,\n      loading: true,\n    });\n    let  userData;\n    userData = props.userStore.fetchUser(props);\n\n\n\n    e.preventDefault()\n    let id = Number(props.match.params.id)\n\n    props.masterStore.updateExam(state, userData.access_token, id)\n\n    setTimeout(function(){\n      setState({...state,\n        name: \"\",\n        price: \"\",\n        loading: false\n      })\n    }, 2000)\n\n    setTimeout(function(){\n      props.history.push({pathname:\"/exam\", state:{status: 'updated'}});\n    }, 2000)\n\n\n  }\n\n  return (\n    <React.Fragment>\n      <div className=\"page-content\">\n        <Container fluid>\n          {/* Render Breadcrumb */}\n          <Breadcrumbs\n            title={props.t(\"Question\")}\n            breadcrumbItem={props.t(\"Create Question\")}\n          />\n\n          <Row>\n            <Col lg=\"12\">\n              <Card>\n                <CardBody>\n                {updateQuestion === \"\" ? <CardTitle>CREATE QUESTION</CardTitle> :\n                    <CardTitle>UPDATE QUESTION</CardTitle>\n                  }\n                    <form onSubmit={handleSubmit}>\n                    <Row>\n                      <Col lg=\"6\">\n                        <FormGroup>\n                          <Label>\n                            Question\n                          </Label>\n                          <Input\n                            value={state.name}\n                            onChange={(e) =>\n                              setState({ ...state, name: e.target.value })\n                            }\n                            type=\"text\"\n                            className=\"form-control\"\n\n                          />\n                        </FormGroup>\n                      </Col>\n\n                      <Col lg=\"6\">\n                        <FormGroup>\n                          <Label>\n                            Answer\n                          </Label>\n                          <Input\n                            value={state.answer}\n                            onChange={(e) =>\n                              setState({ ...state, answer: e.target.value })\n                            }\n                            type=\"text\"\n                            className=\"form-control\"\n\n                          />\n                        </FormGroup>\n                      </Col>\n\n                    </Row>\n                    <Row>\n                      <Col lg=\"6\">\n                        <FormGroup>\n                          <Label>\n                            Option\n                          </Label>\n                          <Input\n                            value={state.options}\n                            onChange={(e) =>\n                              setState({ ...state, options: e.target.value })\n                            }\n                            type=\"text\"\n                            className=\"form-control\"\n\n                          />\n                        </FormGroup>\n                      </Col>\n\n                      <Col lg=\"6\">\n                        <FormGroup>\n                          <Label>\n                            Score\n                          </Label>\n                          <Input\n                            value={state.score}\n                            onChange={(e) =>\n                              setState({ ...state, score: e.target.value })\n                            }\n                            type=\"text\"\n                            className=\"form-control\"\n\n                          />\n                        </FormGroup>\n                      </Col>\n\n                    </Row>\n                     {updateQuestion === \"\" ? (\n                       <div className=\" \">\n                         {state.loading ? (\n                           <div\n                           className=\"spinner-grow text-primary m-1\"\n                           role=\"status\"\n                         >\n                           {/* <span className=\"sr-only\">Loading...</span> */}\n                         </div>\n                         ): (\n                          <button\n                         type=\"submit\"\n                         className=\"btn btn-primary waves-effect waves-light mx-2\"\n                         type=\"submit\"\n                       >\n                         Post Question\n                       </button>\n                         )}\n\n                       </div>\n                     ) : (\n                      <div>\n                        {state.loading ? (\n                           <div\n                           className=\"spinner-grow text-primary m-1\"\n                           role=\"status\"\n                         >\n                           {/* <span className=\"sr-only\">Loading...</span> */}\n                         </div>\n                         ): (\n                          <button\n                        className=\"btn btn-primary waves-effect waves-light mx-2\"\n                        type=\"submit\"\n                        onClick={handleUpdate}\n                      >\n                        Update Question\n                      </button>\n                         )}\n\n                    </div>\n                     )}\n\n\n\n                  </form>\n\n\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    </React.Fragment>\n\n);\n};\n\nexport default withNamespaces()(stateWrapper(CreateQuestion));\n"]},"metadata":{},"sourceType":"module"}