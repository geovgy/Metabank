{"ast":null,"code":"import { Container } from \"unstated\";\nimport instance from \"../helpers/axiosly\";\nimport { LOCAL_STORAGE_SIGNIN_KEY } from '../App.constants'; // Get token from local storage\n\nconst token = localStorage.getItem(\"token\");\n\nclass WithdrawalContainer extends Container {\n  constructor() {\n    super();\n\n    this.requestWithrawal = (bearertoken, amount) => {\n      return new Promise((reo, reject) => {\n        instance.get(`${process.env.REACT_APP_DATABASEURL}/withdrawal`, {\n          amount: amount\n        }, {\n          headers: {\n            Authorization: `Bearer ${bearertoken}`\n          }\n        }).then(response => {\n          console.log(resolve(response === null || response === void 0 ? void 0 : response.data));\n          resolve(response === null || response === void 0 ? void 0 : response.data);\n        }).catch(e => {\n          console.log(e);\n        });\n      });\n    };\n\n    this.state = {\n      sessionData: {\n        serviceList: []\n      }\n    };\n  } //Function to request withdrawal by the writer\n\n\n}\n\nexport { WithdrawalContainer };","map":{"version":3,"sources":["/Users/mac/writingPlatform/src/containers/WithrawalContainer.js"],"names":["Container","instance","LOCAL_STORAGE_SIGNIN_KEY","token","localStorage","getItem","WithdrawalContainer","constructor","requestWithrawal","bearertoken","amount","Promise","reo","reject","get","process","env","REACT_APP_DATABASEURL","headers","Authorization","then","response","console","log","resolve","data","catch","e","state","sessionData","serviceList"],"mappings":"AAAA,SAASA,SAAT,QAA0B,UAA1B;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,SAASC,wBAAT,QAAyC,kBAAzC,C,CAEA;;AACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;;AAEA,MAAMC,mBAAN,SAAkCN,SAAlC,CAA4C;AAC1CO,EAAAA,WAAW,GAAG;AACZ;;AADY,SAWhBC,gBAXgB,GAWG,CAACC,WAAD,EAAcC,MAAd,KAAyB;AAC5C,aAAO,IAAIC,OAAJ,CAAY,CAACC,GAAD,EAAMC,MAAN,KAAiB;AAChCZ,QAAAA,QAAQ,CAACa,GAAT,CAAc,GAAEC,OAAO,CAACC,GAAR,CAAYC,qBAAsB,aAAlD,EACA;AAACP,UAAAA,MAAM,EAAEA;AAAT,SADA,EAEA;AACIQ,UAAAA,OAAO,EAAE;AACLC,YAAAA,aAAa,EAAG,UAASV,WAAY;AADhC;AADb,SAFA,EAOGW,IAPH,CAOSC,QAAD,IAAc;AAClBC,UAAAA,OAAO,CAACC,GAAR,CAAYC,OAAO,CAACH,QAAD,aAACA,QAAD,uBAACA,QAAQ,CAAEI,IAAX,CAAnB;AACAD,UAAAA,OAAO,CAACH,QAAD,aAACA,QAAD,uBAACA,QAAQ,CAAEI,IAAX,CAAP;AACH,SAVD,EAUGC,KAVH,CAUUC,CAAD,IAAO;AACZL,UAAAA,OAAO,CAACC,GAAR,CAAYI,CAAZ;AACH,SAZD;AAcH,OAfM,CAAP;AAgBC,KA5Be;;AAEZ,SAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE;AACXC,QAAAA,WAAW,EAAE;AADF;AADF,KAAb;AAKD,GARyC,CAU5C;;;AAV4C;;AAgC5C,SAASxB,mBAAT","sourcesContent":["import { Container } from \"unstated\";\nimport instance from \"../helpers/axiosly\";\nimport { LOCAL_STORAGE_SIGNIN_KEY } from '../App.constants'\n\n// Get token from local storage\nconst token = localStorage.getItem(\"token\");\n\nclass WithdrawalContainer extends Container {\n  constructor() {\n    super();\n    this.state = {\n      sessionData: {\n        serviceList: [],\n      },\n    };\n  }\n\n//Function to request withdrawal by the writer\n\nrequestWithrawal = (bearertoken, amount) => {\nreturn new Promise((reo, reject) => {\n    instance.get(`${process.env.REACT_APP_DATABASEURL}/withdrawal`,\n    {amount: amount},\n    {\n        headers: {\n            Authorization: `Bearer ${bearertoken}`\n        }\n\n    }).then((response) => {\n        console.log(resolve(response?.data));\n        resolve(response?.data);\n    }).catch((e) => {\n        console.log(e);\n    });\n\n})\n}\n\n}\nexport { WithdrawalContainer };\n\n\n\n"]},"metadata":{},"sourceType":"module"}