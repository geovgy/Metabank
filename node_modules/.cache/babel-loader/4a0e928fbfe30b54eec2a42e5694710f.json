{"ast":null,"code":"import _slicedToArray from\"/Users/mac/writingPlatform/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{CardBody,Card}from'reactstrap';import stateWrapper from\"../../../containers/provider\";import{withNamespaces}from\"react-i18next\";var Result=function Result(_ref){var results=_ref.results,data=_ref.data;var _useState=useState(0),_useState2=_slicedToArray(_useState,2),correctAnswers=_useState2[0],setCorrectAnswers=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),score=_useState4[0],setScore=_useState4[1];//const sco = results.map(result => {return result.s})\n//setScore(sco)\nconsole.log(score);useEffect(function(){var correct=0;results.forEach(function(result,index){if(result.a===data[index].answer){}});setCorrectAnswers(correct);//eslint-disable-next-line\n});return/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(\"h3\",null,\"Your Results\"),/*#__PURE__*/React.createElement(\"p\",null,correctAnswers)));};export default withNamespaces()(stateWrapper(Result));","map":{"version":3,"sources":["/Users/mac/writingPlatform/src/pages/Writer/Exam/results.js"],"names":["React","useEffect","useState","CardBody","Card","stateWrapper","withNamespaces","Result","results","data","correctAnswers","setCorrectAnswers","score","setScore","console","log","correct","forEach","result","index","a","answer"],"mappings":"iJAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,CAA0BC,QAA1B,KAAyC,OAAzC,CACA,OAASC,QAAT,CAAmBC,IAAnB,KAA+B,YAA/B,CACA,MAAOC,CAAAA,YAAP,KAAyB,8BAAzB,CACA,OAASC,cAAT,KAA+B,eAA/B,CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,MAAqB,IAAnBC,CAAAA,OAAmB,MAAnBA,OAAmB,CAAVC,IAAU,MAAVA,IAAU,eACWP,QAAQ,CAAC,CAAD,CADnB,wCAC1BQ,cAD0B,eACVC,iBADU,8BAENT,QAAQ,CAAC,EAAD,CAFF,yCAEzBU,KAFyB,eAElBC,QAFkB,eAGhC;AACA;AACAC,OAAO,CAACC,GAAR,CAAYH,KAAZ,EACAX,SAAS,CAAC,UAAM,CACZ,GAAIe,CAAAA,OAAO,CAAG,CAAd,CAEAR,OAAO,CAACS,OAAR,CAAgB,SAACC,MAAD,CAASC,KAAT,CAAmB,CAE/B,GAAGD,MAAM,CAACE,CAAP,GAAaX,IAAI,CAACU,KAAD,CAAJ,CAAYE,MAA5B,CAAmC,CAElC,CACJ,CALD,EAMAV,iBAAiB,CAACK,OAAD,CAAjB,CACA;AACH,CAXQ,CAAT,CAYA,mBACI,oBAAC,IAAD,mBACI,oBAAC,QAAD,mBACI,6CADJ,cAEI,6BAAIN,cAAJ,CAFJ,CADJ,CADJ,CAQH,CA1BD,CA4BA,cAAeJ,CAAAA,cAAc,GAAGD,YAAY,CAACE,MAAD,CAAf,CAA7B","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport { CardBody, Card } from 'reactstrap';\nimport stateWrapper from \"../../../containers/provider\";\nimport { withNamespaces } from \"react-i18next\";\n\nconst Result = ({results, data}) => {\n    const[correctAnswers, setCorrectAnswers] = useState(0)\n    const [score, setScore] = useState([])\n    //const sco = results.map(result => {return result.s})\n    //setScore(sco)\n    console.log(score)\n    useEffect(() => {\n        let correct = 0;\n\n        results.forEach((result, index) => {\n\n            if(result.a === data[index].answer){\n\n            }\n        })\n        setCorrectAnswers(correct)\n        //eslint-disable-next-line\n    })\n    return(\n        <Card>\n            <CardBody>\n                <h3>Your Results</h3>\n                <p>{correctAnswers}</p>\n            </CardBody>\n        </Card>\n    )\n}\n\nexport default withNamespaces()(stateWrapper(Result));"]},"metadata":{},"sourceType":"module"}