{"ast":null,"code":"var _jsxFileName = \"/Users/mac/writingPlatform/src/pages/Writer/Exam/ExamList.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Card, CardBody, CardTitle, Badge, Button } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport instance from \"../../../helpers/axiosly\";\nimport stateWrapper from \"../../../containers/provider\";\nimport { withNamespaces } from \"react-i18next\";\nimport Moment from \"react-moment\";\n\nconst ExamList = props => {\n  const [exams, setExams] = useState([]);\n  const [examId, setexamId] = useState(0);\n  const [state, setState] = useState({\n    loading: false,\n    disableBtn: false\n  });\n  useEffect(() => {\n    setState({ ...state,\n      loading: true\n    });\n\n    async function fetchData() {\n      try {\n        const token = localStorage.getItem(\"token\");\n        const res = await instance.get(`${process.env.REACT_APP_DATABASEURL}exam`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setState({ ...state,\n          loading: false\n        });\n        setExams(res.data.data);\n        let userData = props.userStore.fetchUser(props);\n        console.log(userData, \"userData\");\n        const result = await instance.get(`${process.env.REACT_APP_DATABASEURL}exam/user/${userData.id}`, {\n          headers: {\n            Authorization: `Bearer ${userData === null || userData === void 0 ? void 0 : userData.access_token}`\n          }\n        });\n        setexamId(result.data.data.exam.id);\n\n        if (result.data.data.score) {\n          setState({ ...state,\n            disableBtn: true\n          });\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    }\n\n    fetchData(); //eslint-disable-line\n  }, []);\n  console.log(exams);\n  console.log(examId);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardTitle, {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, \"ALL EXAMS\"), state.loading ? /*#__PURE__*/React.createElement(\"div\", {\n    class: \"spinner-border\",\n    role: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    class: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, \"Loading...\")) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table-responsive\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table table-centered table-nowrap mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    className: \"thead-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      width: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 16\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"custom-control custom-checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 18\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    className: \"custom-control-input\",\n    id: \"customCheck1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 20\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"custom-control-label\",\n    htmlFor: \"customCheck1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 20\n    }\n  }, \"\\xA0\"))), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 16\n    }\n  }, \"Exams\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 16\n    }\n  }, \"Created\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 16\n    }\n  }, \"Updated\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 16\n    }\n  }, \" \"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 12\n    }\n  }, exams && exams.map((exam, key) => exam ? /*#__PURE__*/React.createElement(\"tr\", {\n    key: \"_tr_\" + key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"custom-control custom-checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    className: \"custom-control-input\",\n    id: exam.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"custom-control-label\",\n    htmlFor: exam.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, \"\\xA0\"))), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"#\",\n    className: \"text-body font-weight-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 15\n    }\n  }, \" \", exam.name, \" \"), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Moment, {\n    format: \"YYYY/MM/DD\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }, exam.createdAt)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Moment, {\n    format: \"YYYY/MM/DD\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }, exam.updatedAt)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/wquestion/\" + exam.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 16\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    className: \"btn btn-primary waves-effect waves-light mx-2\",\n    disabled: exam.id == examId ? 'true' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 18\n    }\n  }, \" \", \"Questions\")))) : '')))))));\n};\n\nexport default withNamespaces()(stateWrapper(ExamList));","map":{"version":3,"sources":["/Users/mac/writingPlatform/src/pages/Writer/Exam/ExamList.js"],"names":["React","useEffect","useState","Card","CardBody","CardTitle","Badge","Button","Link","instance","stateWrapper","withNamespaces","Moment","ExamList","props","exams","setExams","examId","setexamId","state","setState","loading","disableBtn","fetchData","token","localStorage","getItem","res","get","process","env","REACT_APP_DATABASEURL","headers","Authorization","data","userData","userStore","fetchUser","console","log","result","id","access_token","exam","score","e","width","map","key","name","createdAt","updatedAt"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Card, CardBody, CardTitle, Badge, Button } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport instance from \"../../../helpers/axiosly\";\nimport stateWrapper from \"../../../containers/provider\";\nimport { withNamespaces } from \"react-i18next\";\nimport Moment from \"react-moment\";\n\n\n\nconst ExamList = (props) => {\n\n  const[exams, setExams] = useState([]);\n  const [examId, setexamId] = useState(0)\n  const[state, setState] = useState({\n    loading: false,\n    disableBtn: false\n  })\n\n  useEffect(() => {\n    setState({...state, loading: true})\n\n    async function fetchData(){\n    try {\n      const token = localStorage.getItem(\"token\")\n      const res = await instance\n        .get(`${process.env.REACT_APP_DATABASEURL}exam`, {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        })\n        setState({...state, loading: false})\n        setExams(res.data.data)\n\n        let userData = props.userStore.fetchUser(props);\n        console.log(userData, \"userData\");\n\n        const result = await instance\n        .get(`${process.env.REACT_APP_DATABASEURL}exam/user/${userData.id}`, {\n          headers: {\n            Authorization: `Bearer ${userData?.access_token}`,\n          },\n        })\n        setexamId(result.data.data.exam.id)\n        if(result.data.data.score){\n          setState({...state, disableBtn: true})\n        }\n\n    } catch (e) {\n      console.log(e);\n    }\n    }\n    fetchData();\n    //eslint-disable-line\n  }, [])\n\n  console.log(exams)\n  console.log(examId)\n\n  return (\n    <React.Fragment>\n\n      <Card>\n        <CardBody>\n          <CardTitle className=\"mb-4\">ALL EXAMS</CardTitle>\n          {state.loading ? (<div class=\"spinner-border\" role=\"status\">\n      <span class=\"sr-only\">Loading...</span>\n      </div>) : (\n         <div className=\"table-responsive\">\n         <table className=\"table table-centered table-nowrap mb-0\">\n           <thead className=\"thead-light\">\n             <tr>\n               <th style={{ width: \"20px\" }}>\n                 <div className=\"custom-control custom-checkbox\">\n                   <input\n                     type=\"checkbox\"\n                     className=\"custom-control-input\"\n                     id=\"customCheck1\"\n                   />\n                   <label\n                     className=\"custom-control-label\"\n                     htmlFor=\"customCheck1\"\n                   >\n                     &nbsp;\n                   </label>\n                 </div>\n               </th>\n               <th>Exams</th>\n               <th>Created</th>\n               <th>Updated</th>\n               <th>{\" \"}</th>\n             </tr>\n           </thead>\n           <tbody>\n             {exams && exams.map((exam, key) => (exam ? (\n            \n            <tr key={\"_tr_\" + key}>\n            <td>\n              <div className=\"custom-control custom-checkbox\">\n                <input\n                  type=\"checkbox\"\n                  className=\"custom-control-input\"\n                  id={exam.id}\n                />\n                <label\n                  className=\"custom-control-label\"\n                  htmlFor={exam.id}\n                >\n                  &nbsp;\n                </label>\n              </div>\n            </td>\n            <td>\n              <Link to=\"#\" className=\"text-body font-weight-bold\">\n                {\" \"}\n                {exam.name}{\" \"}\n              </Link>{\" \"}\n            </td>\n            <td><Moment format=\"YYYY/MM/DD\">{exam.createdAt}</Moment></td>\n            <td><Moment format=\"YYYY/MM/DD\">{exam.updatedAt}</Moment></td>\n            <td>\n\n               <Link to={\"/wquestion/\" + exam.id}>\n                 <Button\n                 color=\"primary\"\n                 className=\"btn btn-primary waves-effect waves-light mx-2\"\n                 disabled={exam.id == examId ? 'true': ''}\n                     >\n                 {\" \"}\n                 Questions\n                 </Button>\n                 </Link>\n\n             </td>\n          </tr>\n       \n             ) : ('')))}\n             {/* {exams && exams.map((exam, key) => (\n\n              // {exam.id}\n              \n              \n            ))} */}\n           </tbody>\n         </table>\n       </div>\n      )}\n\n        </CardBody>\n      </Card>\n    </React.Fragment>\n  );\n};\n\n\n\nexport default (withNamespaces()(stateWrapper(ExamList)));\n"]},"metadata":{},"sourceType":"module"}