{"ast":null,"code":"import _regeneratorRuntime from\"/Users/mac/writingPlatform/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(registerUser),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(watchUserRegister),_marked3=/*#__PURE__*/_regeneratorRuntime.mark(accountSaga);import{takeEvery,fork,put,all,call}from'redux-saga/effects';//Account Redux states\nimport{REGISTER_USER}from'./actionTypes';import{registerUserSuccessful,registerUserFailed}from'./actions';//Include Both Helper File with needed methods\nimport{getFirebaseBackend}from'../../../helpers/firebase_helper';import{postFakeRegister,postJwtRegister}from'../../../helpers/fakebackend_helper';// initialize relavant method of both Auth\nvar fireBaseBackend=getFirebaseBackend();// Is user register successfull then direct plot user in redux.\nfunction registerUser(_ref){var user,response,_response,_response2;return _regeneratorRuntime.wrap(function registerUser$(_context){while(1){switch(_context.prev=_context.next){case 0:user=_ref.payload.user;_context.prev=1;if(!(process.env.REACT_APP_DEFAULTAUTH===\"firebase\")){_context.next=10;break;}_context.next=5;return call(fireBaseBackend.registerUser,user.email,user.password);case 5:response=_context.sent;_context.next=8;return put(registerUserSuccessful(response));case 8:_context.next=24;break;case 10:if(!(process.env.REACT_APP_DEFAULTAUTH===\"jwt\")){_context.next=18;break;}_context.next=13;return call(postJwtRegister,'/post-jwt-register',user);case 13:_response=_context.sent;_context.next=16;return put(registerUserSuccessful(_response));case 16:_context.next=24;break;case 18:if(!(process.env.REACT_APP_DEFAULTAUTH===\"fake\")){_context.next=24;break;}_context.next=21;return call(postFakeRegister,'/post-fake-register',user);case 21:_response2=_context.sent;_context.next=24;return put(registerUserSuccessful(_response2));case 24:_context.next=30;break;case 26:_context.prev=26;_context.t0=_context[\"catch\"](1);_context.next=30;return put(registerUserFailed(_context.t0));case 30:case\"end\":return _context.stop();}}},_marked,null,[[1,26]]);}export function watchUserRegister(){return _regeneratorRuntime.wrap(function watchUserRegister$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return takeEvery(REGISTER_USER,registerUser);case 2:case\"end\":return _context2.stop();}}},_marked2);}function accountSaga(){return _regeneratorRuntime.wrap(function accountSaga$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return all([fork(watchUserRegister)]);case 2:case\"end\":return _context3.stop();}}},_marked3);}export default accountSaga;","map":{"version":3,"sources":["/Users/mac/writingPlatform/src/store/auth/register/saga.js"],"names":["registerUser","watchUserRegister","accountSaga","takeEvery","fork","put","all","call","REGISTER_USER","registerUserSuccessful","registerUserFailed","getFirebaseBackend","postFakeRegister","postJwtRegister","fireBaseBackend","user","payload","process","env","REACT_APP_DEFAULTAUTH","email","password","response"],"mappings":"0LAcUA,Y,iDAsBOC,iB,iDAIPC,W,EAxCV,OAASC,SAAT,CAAoBC,IAApB,CAA0BC,GAA1B,CAA+BC,GAA/B,CAAoCC,IAApC,KAAgD,oBAAhD,CAEA;AACA,OAASC,aAAT,KAA8B,eAA9B,CACA,OAASC,sBAAT,CAAiCC,kBAAjC,KAA2D,WAA3D,CAEA;AACA,OAASC,kBAAT,KAAmC,kCAAnC,CACA,OAASC,gBAAT,CAA2BC,eAA3B,KAAkD,qCAAlD,CAEA;AACA,GAAMC,CAAAA,eAAe,CAAGH,kBAAkB,EAA1C,CAEA;AACA,QAAUX,CAAAA,YAAV,mKAAoCe,IAApC,MAAyBC,OAAzB,CAAoCD,IAApC,sBAEQE,OAAO,CAACC,GAAR,CAAYC,qBAAZ,GAAsC,UAF9C,2CAI6B,MAAMZ,CAAAA,IAAI,CAACO,eAAe,CAACd,YAAjB,CAA+Be,IAAI,CAACK,KAApC,CAA2CL,IAAI,CAACM,QAAhD,CAAV,CAJ7B,OAIkBC,QAJlB,+BAKY,MAAMjB,CAAAA,GAAG,CAACI,sBAAsB,CAACa,QAAD,CAAvB,CAAT,CALZ,2CAOgBL,OAAO,CAACC,GAAR,CAAYC,qBAAZ,GAAsC,KAPtD,4CAS8B,MAAMZ,CAAAA,IAAI,CAACM,eAAD,CAAkB,oBAAlB,CAAwCE,IAAxC,CAAV,CAT9B,QASmBO,SATnB,gCAUY,MAAMjB,CAAAA,GAAG,CAACI,sBAAsB,CAACa,SAAD,CAAvB,CAAT,CAVZ,4CAYaL,OAAO,CAACC,GAAR,CAAYC,qBAAZ,GAAsC,MAZnD,4CAc6B,MAAMZ,CAAAA,IAAI,CAACK,gBAAD,CAAmB,qBAAnB,CAA0CG,IAA1C,CAAV,CAd7B,QAckBO,UAdlB,gCAeY,MAAMjB,CAAAA,GAAG,CAACI,sBAAsB,CAACa,UAAD,CAAvB,CAAT,CAfZ,0GAkBQ,MAAMjB,CAAAA,GAAG,CAACK,kBAAkB,aAAnB,CAAT,CAlBR,qEAsBA,MAAO,SAAUT,CAAAA,iBAAV,iJACH,MAAME,CAAAA,SAAS,CAACK,aAAD,CAAgBR,YAAhB,CAAf,CADG,wDAIP,QAAUE,CAAAA,WAAV,2IACI,MAAMI,CAAAA,GAAG,CAAC,CAACF,IAAI,CAACH,iBAAD,CAAL,CAAD,CAAT,CADJ,wDAIA,cAAeC,CAAAA,WAAf","sourcesContent":["import { takeEvery, fork, put, all, call } from 'redux-saga/effects';\n\n//Account Redux states\nimport { REGISTER_USER } from './actionTypes';\nimport { registerUserSuccessful, registerUserFailed } from './actions';\n\n//Include Both Helper File with needed methods\nimport { getFirebaseBackend } from '../../../helpers/firebase_helper';\nimport { postFakeRegister, postJwtRegister } from '../../../helpers/fakebackend_helper';\n\n// initialize relavant method of both Auth\nconst fireBaseBackend = getFirebaseBackend();\n\n// Is user register successfull then direct plot user in redux.\nfunction* registerUser({ payload: { user } }) {\n    try {\n    \tif(process.env.REACT_APP_DEFAULTAUTH === \"firebase\")\n    \t{\n            const response = yield call(fireBaseBackend.registerUser, user.email, user.password);\n            yield put(registerUserSuccessful(response));\n    \t} \n        else if(process.env.REACT_APP_DEFAULTAUTH === \"jwt\")\n        { \n             const response = yield call(postJwtRegister, '/post-jwt-register', user);\n            yield put(registerUserSuccessful(response));\n        }\n    \telse if(process.env.REACT_APP_DEFAULTAUTH === \"fake\")\n    \t{\n            const response = yield call(postFakeRegister, '/post-fake-register', user);\n            yield put(registerUserSuccessful(response));\n    \t}\n    } catch (error) {\n        yield put(registerUserFailed(error));\n    }\n}\n\nexport function* watchUserRegister() {\n    yield takeEvery(REGISTER_USER, registerUser);\n}\n\nfunction* accountSaga() {\n    yield all([fork(watchUserRegister)]);\n}\n\nexport default accountSaga;"]},"metadata":{},"sourceType":"module"}