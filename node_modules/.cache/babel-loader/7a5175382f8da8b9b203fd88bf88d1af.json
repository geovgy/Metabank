{"ast":null,"code":"import axios from 'axios';\nconst axio = axios.create({\n  baseURL: '',\n  timeout: 9999999 //100000,\n\n}); // axio.interceptors.request.use((config) => {\n//     const customConfig = config;\n//     if (localStorage.getItem('stadiumJWToken')) {\n//       let webToken = JSON.parse(localStorage.getItem('stadiumJWToken'));\n//       if (new Date(webToken.date) >= Date.now()) {\n//         customConfig.headers.Authorization = webToken.bearer;\n//       }\n//     }\n//     return customConfig;\n//   });\n\nexport default axio;","map":{"version":3,"sources":["/Users/mac/metabank/src/helpers/axiosly.js"],"names":["axios","axio","create","baseURL","timeout"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAa;AACtBC,EAAAA,OAAO,EAAE,EADa;AAExBC,EAAAA,OAAO,EAAE,OAFe,CAEP;;AAFO,CAAb,CAAb,C,CAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeH,IAAf","sourcesContent":["import axios from 'axios';\n\nconst axio = axios.create({\n    baseURL: '',\n  timeout: 9999999,//100000,\n});\n\n// axio.interceptors.request.use((config) => {\n//     const customConfig = config;\n//     if (localStorage.getItem('stadiumJWToken')) {\n//       let webToken = JSON.parse(localStorage.getItem('stadiumJWToken'));\n//       if (new Date(webToken.date) >= Date.now()) {\n//         customConfig.headers.Authorization = webToken.bearer;\n//       }\n//     }\n//     return customConfig;\n//   });\n\nexport default axio;"]},"metadata":{},"sourceType":"module"}