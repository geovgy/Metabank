{"ast":null,"code":"import { Container } from \"unstated\";\nimport instance from \"../helpers/axiosly\";\nimport { LOCAL_STORAGE_SIGNIN_KEY } from '../App.constants'; // Get token from local storage\n\nconst token = localStorage.getItem(\"token\");\n\nclass ServiceContainer extends Container {\n  constructor() {\n    super();\n\n    this.fetchService = () => {\n      instance.get(`${process.env.REACT_APP_DATABASEURL}/services`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(response => {\n        const data = response.data.data.rows;\n        this.setState({\n          sessionData: {\n            service: data\n          }\n        });\n        console.log(this.state.sessionData.service);\n        return {};\n      }).catch(e => {\n        console.log(e);\n      });\n    };\n\n    this.deleteService = id => {\n      console.log(id);\n      instance.delete(`${process.env.REACT_APP_DATABASEURL}/services/${id}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).catch(e => {\n        console.log(e);\n      });\n    };\n\n    this.state = {\n      sessionData: {\n        service: []\n      }\n    };\n  }\n\n}\n\nexport { ServiceContainer };","map":{"version":3,"sources":["/Users/mac/writingPlatform/src/containers/ServiceContainer.js"],"names":["Container","instance","LOCAL_STORAGE_SIGNIN_KEY","token","localStorage","getItem","ServiceContainer","constructor","fetchService","get","process","env","REACT_APP_DATABASEURL","headers","Authorization","then","response","data","rows","setState","sessionData","service","console","log","state","catch","e","deleteService","id","delete"],"mappings":"AAAA,SAASA,SAAT,QAA0B,UAA1B;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,SAASC,wBAAT,QAAyC,kBAAzC,C,CAEA;;AACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;;AAEA,MAAMC,gBAAN,SAA+BN,SAA/B,CAAyC;AACvCO,EAAAA,WAAW,GAAG;AACZ;;AADY,SASdC,YATc,GASC,MAAM;AACnBP,MAAAA,QAAQ,CACLQ,GADH,CACQ,GAAEC,OAAO,CAACC,GAAR,CAAYC,qBAAsB,WAD5C,EACwD;AACpDC,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EAAG,UAASX,KAAM;AADxB;AAD2C,OADxD,EAKKY,IALL,CAKWC,QAAD,IAAc;AACpB,cAAMC,IAAI,GAAGD,QAAQ,CAACC,IAAT,CAAcA,IAAd,CAAmBC,IAAhC;AAEA,aAAKC,QAAL,CAAc;AACZC,UAAAA,WAAW,EAAE;AACXC,YAAAA,OAAO,EAAEJ;AADE;AADD,SAAd;AAMAK,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWJ,WAAX,CAAuBC,OAAnC;AACA,eAAO,EAAP;AACD,OAhBH,EAgBKI,KAhBL,CAgBYC,CAAD,IAAO;AACdJ,QAAAA,OAAO,CAACC,GAAR,CAAYG,CAAZ;AACD,OAlBH;AAoBD,KA9Ba;;AAAA,SAgCdC,aAhCc,GAgCGC,EAAD,IAAQ;AACtBN,MAAAA,OAAO,CAACC,GAAR,CAAYK,EAAZ;AACA3B,MAAAA,QAAQ,CACL4B,MADH,CACW,GAAEnB,OAAO,CAACC,GAAR,CAAYC,qBAAsB,aAAYgB,EAAG,EAD9D,EACiE;AAC7Df,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EAAG,UAASX,KAAM;AADxB;AADoD,OADjE,EAKKsB,KALL,CAKYC,CAAD,IAAO;AACdJ,QAAAA,OAAO,CAACC,GAAR,CAAYG,CAAZ;AACD,OAPH;AASD,KA3Ca;;AAEZ,SAAKF,KAAL,GAAa;AACXJ,MAAAA,WAAW,EAAE;AACXC,QAAAA,OAAO,EAAE;AADE;AADF,KAAb;AAKD;;AARsC;;AAgDzC,SAASf,gBAAT","sourcesContent":["import { Container } from \"unstated\";\nimport instance from \"../helpers/axiosly\";\nimport { LOCAL_STORAGE_SIGNIN_KEY } from '../App.constants'\n\n// Get token from local storage\nconst token = localStorage.getItem(\"token\");\n\nclass ServiceContainer extends Container {\n  constructor() {\n    super();\n    this.state = {\n      sessionData: {\n        service: []\n      },\n    };\n  }\n  \n  fetchService = () => {\n    instance\n      .get(`${process.env.REACT_APP_DATABASEURL}/services`, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      }).then((response) => {\n        const data = response.data.data.rows\n\n        this.setState({\n          sessionData: {\n            service: data\n          },\n\n        });\n        console.log(this.state.sessionData.service)\n        return {};\n      }).catch((e) => {\n        console.log(e);\n      });\n\n  };\n\n  deleteService = (id) => {\n    console.log(id)\n    instance\n      .delete(`${process.env.REACT_APP_DATABASEURL}/services/${id}`, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      }).catch((e) => {\n        console.log(e);\n      });\n\n  }\n\n}\n\nexport { ServiceContainer };\n\n\n\n"]},"metadata":{},"sourceType":"module"}