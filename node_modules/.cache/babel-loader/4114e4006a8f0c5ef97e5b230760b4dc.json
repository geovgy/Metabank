{"ast":null,"code":"import _classCallCheck from\"/Users/mac/writingPlatform/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/mac/writingPlatform/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import firebase from\"firebase/app\";// Add the Firebase products that you want to use\nimport\"firebase/auth\";import\"firebase/firestore\";var FirebaseAuthBackend=/*#__PURE__*/function(){function FirebaseAuthBackend(firebaseConfig){var _this=this;_classCallCheck(this,FirebaseAuthBackend);this.registerUser=function(email,password){return new Promise(function(resolve,reject){firebase.auth().createUserWithEmailAndPassword(email,password).then(function(user){resolve(firebase.auth().currentUser);},function(error){reject(_this._handleError(error));});});};this.editProfileAPI=function(email,password){return new Promise(function(resolve,reject){firebase.auth().createUserWithEmailAndPassword(email,password).then(function(user){resolve(firebase.auth().currentUser);},function(error){reject(_this._handleError(error));});});};this.loginUser=function(email,password){return new Promise(function(resolve,reject){firebase.auth().signInWithEmailAndPassword(email,password).then(function(user){resolve(firebase.auth().currentUser);},function(error){reject(_this._handleError(error));});});};this.forgetPassword=function(email){return new Promise(function(resolve,reject){firebase.auth().sendPasswordResetEmail(email,{url:window.location.protocol+\"//\"+window.location.host+\"/login\"}).then(function(){resolve(true);}).catch(function(error){reject(_this._handleError(error));});});};this.logout=function(){return new Promise(function(resolve,reject){firebase.auth().signOut().then(function(){resolve(true);}).catch(function(error){reject(_this._handleError(error));});});};this.setLoggeedInUser=function(user){localStorage.setItem(\"authUser\",JSON.stringify(user));};this.getAuthenticatedUser=function(){if(!localStorage.getItem(\"authUser\"))return null;return JSON.parse(localStorage.getItem(\"authUser\"));};if(firebaseConfig){// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);firebase.auth().onAuthStateChanged(function(user){if(user){localStorage.setItem(\"authUser\",JSON.stringify(user));}else{localStorage.removeItem(\"authUser\");}});}}/**\n   * Registers the user with given details\n   */_createClass(FirebaseAuthBackend,[{key:\"_handleError\",value:/**\n   * Handle the error\n   * @param {*} error\n   */function _handleError(error){// var errorCode = error.code;\nvar errorMessage=error.message;return errorMessage;}}]);return FirebaseAuthBackend;}();var _fireBaseBackend=null;/**\n * Initilize the backend\n * @param {*} config\n */var initFirebaseBackend=function initFirebaseBackend(config){if(!_fireBaseBackend){_fireBaseBackend=new FirebaseAuthBackend(config);}return _fireBaseBackend;};/**\n * Returns the firebase backend\n */var getFirebaseBackend=function getFirebaseBackend(){return _fireBaseBackend;};export{initFirebaseBackend,getFirebaseBackend};","map":{"version":3,"sources":["/Users/mac/writingPlatform/src/helpers/firebase_helper.js"],"names":["firebase","FirebaseAuthBackend","firebaseConfig","registerUser","email","password","Promise","resolve","reject","auth","createUserWithEmailAndPassword","then","user","currentUser","error","_handleError","editProfileAPI","loginUser","signInWithEmailAndPassword","forgetPassword","sendPasswordResetEmail","url","window","location","protocol","host","catch","logout","signOut","setLoggeedInUser","localStorage","setItem","JSON","stringify","getAuthenticatedUser","getItem","parse","initializeApp","onAuthStateChanged","removeItem","errorMessage","message","_fireBaseBackend","initFirebaseBackend","config","getFirebaseBackend"],"mappings":"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","sourcesContent":["import firebase from \"firebase/app\";\n\n// Add the Firebase products that you want to use\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nclass FirebaseAuthBackend {\n  constructor(firebaseConfig) {\n    if (firebaseConfig) {\n      // Initialize Firebase\n      firebase.initializeApp(firebaseConfig);\n      firebase.auth().onAuthStateChanged(user => {\n        if (user) {\n          localStorage.setItem(\"authUser\", JSON.stringify(user));\n        } else {\n          localStorage.removeItem(\"authUser\");\n        }\n      });\n    }\n  }\n\n  /**\n   * Registers the user with given details\n   */\n registerUser = (email, password) => {\n    return new Promise((resolve, reject) => {\n      firebase\n        .auth()\n        .createUserWithEmailAndPassword(email, password)\n        .then(\n          user => {\n            resolve(firebase.auth().currentUser);\n          },\n          error => {\n            reject(this._handleError(error));\n          }\n        );\n    });\n  };\n\n  /**\n   * Registers the user with given details\n   */\n  editProfileAPI = (email, password) => {\n    return new Promise((resolve, reject) => {\n      firebase\n        .auth()\n        .createUserWithEmailAndPassword(email, password)\n        .then(\n          user => {\n            resolve(firebase.auth().currentUser);\n          },\n          error => {\n            reject(this._handleError(error));\n          }\n        );\n    });\n  };\n\n  /**\n   * Login user with given details\n   */\n  loginUser = (email, password) => {\n    return new Promise((resolve, reject) => {\n      firebase\n        .auth()\n        .signInWithEmailAndPassword(email, password)\n        .then(\n          user => {\n            resolve(firebase.auth().currentUser);\n          },\n          error => {\n            reject(this._handleError(error));\n          }\n        );\n    });\n  };\n\n  /**\n   * forget Password user with given details\n   */\n  forgetPassword = email => {\n    return new Promise((resolve, reject) => {\n      firebase\n        .auth()\n        .sendPasswordResetEmail(email, {\n          url: window.location.protocol + \"//\" + window.location.host + \"/login\"\n        })\n        .then(() => {\n          resolve(true);\n        })\n        .catch(error => {\n          reject(this._handleError(error));\n        });\n    });\n  };\n\n  /**\n   * Logout the user\n   */\n  logout = () => {\n    return new Promise((resolve, reject) => {\n      firebase\n        .auth()\n        .signOut()\n        .then(() => {\n          resolve(true);\n        })\n        .catch(error => {\n          reject(this._handleError(error));\n        });\n    });\n  };\n\n  setLoggeedInUser = user => {\n    localStorage.setItem(\"authUser\", JSON.stringify(user));\n  };\n\n  /**\n   * Returns the authenticated user\n   */\n  getAuthenticatedUser = () => {\n    if (!localStorage.getItem(\"authUser\")) return null;\n    return JSON.parse(localStorage.getItem(\"authUser\"));\n  };\n\n  /**\n   * Handle the error\n   * @param {*} error\n   */\n  _handleError(error) {\n    // var errorCode = error.code;\n    var errorMessage = error.message;\n    return errorMessage;\n  }\n}\n\nlet _fireBaseBackend = null;\n\n/**\n * Initilize the backend\n * @param {*} config\n */\nconst initFirebaseBackend = config => {\n  if (!_fireBaseBackend) {\n    _fireBaseBackend = new FirebaseAuthBackend(config);\n  }\n  return _fireBaseBackend;\n};\n\n/**\n * Returns the firebase backend\n */\nconst getFirebaseBackend = () => {\n  return _fireBaseBackend;\n};\n\nexport { initFirebaseBackend, getFirebaseBackend };\n"]},"metadata":{},"sourceType":"module"}