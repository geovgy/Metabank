{"ast":null,"code":"import { REQUEST_SERVICE, GET_SERVICE, DELETE_SERVICE, SET_CURRENT, CLEAR_CURRENT, UPDATE_SERVICE } from './actiontype';\nconst initialState = {\n  services: [],\n  current: null,\n  loading: false\n};\n\nconst Service = (state = initialState, action) => {\n  switch (action.type) {\n    case REQUEST_SERVICE:\n      return {\n        loading: true\n      };\n\n    case GET_SERVICE:\n      return { ...state,\n        loading: false,\n        services: action.payload\n      };\n\n    case DELETE_SERVICE:\n      return { ...state,\n        services: state.services.filter(service => service.id !== action.payload),\n        loading: false\n      };\n\n    default:\n      return {\n        state\n      };\n  }\n};\n\nexport default Service;","map":{"version":3,"sources":["/Users/mac/metabank/src/store/Service/reducer.js"],"names":["REQUEST_SERVICE","GET_SERVICE","DELETE_SERVICE","SET_CURRENT","CLEAR_CURRENT","UPDATE_SERVICE","initialState","services","current","loading","Service","state","action","type","payload","filter","service","id"],"mappings":"AAAA,SACIA,eADJ,EAEIC,WAFJ,EAGIC,cAHJ,EAIIC,WAJJ,EAKIC,aALJ,EAMIC,cANJ,QAOO,cAPP;AASA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAE,EADO;AAEjBC,EAAAA,OAAO,EAAE,IAFQ;AAGjBC,EAAAA,OAAO,EAAE;AAHQ,CAArB;;AAMA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAiC;AAC7C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKb,eAAL;AACI,aAAM;AACFS,QAAAA,OAAO,EAAE;AADP,OAAN;;AAGJ,SAAKR,WAAL;AACI,aAAM,EACF,GAAGU,KADD;AAEFF,QAAAA,OAAO,EAAE,KAFP;AAGFF,QAAAA,QAAQ,EAAEK,MAAM,CAACE;AAHf,OAAN;;AAKJ,SAAMZ,cAAN;AACI,aAAM,EACF,GAAGS,KADD;AAEFJ,QAAAA,QAAQ,EAAEI,KAAK,CAACJ,QAAN,CAAeQ,MAAf,CAAsBC,OAAO,IAAIA,OAAO,CAACC,EAAR,KAAeL,MAAM,CAACE,OAAvD,CAFR;AAGFL,QAAAA,OAAO,EAAE;AAHP,OAAN;;AAKJ;AACI,aAAM;AAACE,QAAAA;AAAD,OAAN;AAlBR;AAqBD,CAtBH;;AAwBA,eAAeD,OAAf","sourcesContent":["import {\n    REQUEST_SERVICE,\n    GET_SERVICE,\n    DELETE_SERVICE,\n    SET_CURRENT,\n    CLEAR_CURRENT,\n    UPDATE_SERVICE\n} from './actiontype';\n\nconst initialState = {\n    services: [],\n    current: null,\n    loading: false,\n  };\n\nconst Service = (state = initialState, action) =>{\n    switch(action.type){\n        case REQUEST_SERVICE:\n            return{\n                loading: true,\n            }\n        case GET_SERVICE: \n            return{\n                ...state,\n                loading: false,\n                services: action.payload,\n            }\n        case  DELETE_SERVICE:\n            return{\n                ...state,\n                services: state.services.filter(service => service.id !== action.payload),\n                loading: false\n            }\n        default:\n            return{state}\n            \n    }\n  }\n\nexport default Service;"]},"metadata":{},"sourceType":"module"}