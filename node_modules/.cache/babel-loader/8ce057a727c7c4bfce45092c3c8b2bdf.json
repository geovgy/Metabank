{"ast":null,"code":"import axios from 'axios';\nimport instance from \"../../helpers/axiosly\";\nimport { REQUEST_SERVICE, GET_SERVICE, DELETE_SERVICE, SET_CURRENT, CLEAR_CURRENT, UPDATE_SERVICE } from './actiontype';\nexport const getService = () => async dispatch => {\n  let token = JSON.parse(localStorage.getItem(\"authUser\"));\n  console.log(token.access_token);\n\n  try {\n    dispatch({\n      type: REQUEST_SERVICE\n    });\n    const res = await instance.get(`${process.env.REACT_APP_DATABASEURL}/services`, {\n      headers: {\n        Authorization: `Bearer ${token.access_token}`\n      }\n    });\n    dispatch({\n      type: GET_SERVICE,\n      payload: res.data.data.rows\n    });\n  } catch (e) {\n    console.log(e);\n  }\n};\nexport const deleteService = id => async dispatch => {\n  let token = JSON.parse(localStorage.getItem(\"authUser\"));\n\n  try {\n    await instance.delete(`${process.env.REACT_APP_DATABASEURL}/services/{id}`, {\n      headers: {\n        Authorization: `Bearer ${token.access_token}`\n      }\n    });\n    dispatch({\n      type: DELETE_SERVICE,\n      payload: id\n    });\n  } catch (err) {}\n};","map":{"version":3,"sources":["/Users/mac/writingPlatform/src/store/Service/action..js"],"names":["axios","instance","REQUEST_SERVICE","GET_SERVICE","DELETE_SERVICE","SET_CURRENT","CLEAR_CURRENT","UPDATE_SERVICE","getService","dispatch","token","JSON","parse","localStorage","getItem","console","log","access_token","type","res","get","process","env","REACT_APP_DATABASEURL","headers","Authorization","payload","data","rows","e","deleteService","id","delete","err"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,SACIC,eADJ,EAEIC,WAFJ,EAGIC,cAHJ,EAIIC,WAJJ,EAKIC,aALJ,EAMIC,cANJ,QAOO,cAPP;AAUA,OAAO,MAAMC,UAAU,GAAG,MAAO,MAAOC,QAAP,IAAoB;AACnD,MAAIC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAZ;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACO,YAAlB;;AACA,MAAI;AACFR,IAAAA,QAAQ,CAAC;AAACS,MAAAA,IAAI,EAAEhB;AAAP,KAAD,CAAR;AACA,UAAMiB,GAAG,GAAG,MAAMlB,QAAQ,CACvBmB,GADe,CACV,GAAEC,OAAO,CAACC,GAAR,CAAYC,qBAAsB,WAD1B,EACsC;AACpDC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,UAASf,KAAK,CAACO,YAAa;AADrC;AAD2C,KADtC,CAAlB;AAQER,IAAAA,QAAQ,CAAC;AACPS,MAAAA,IAAI,EAAEf,WADC;AACYuB,MAAAA,OAAO,EAAEP,GAAG,CAACQ,IAAJ,CAASA,IAAT,CAAcC;AADnC,KAAD,CAAR;AAGH,GAbD,CAaE,OAAOC,CAAP,EAAU;AACVd,IAAAA,OAAO,CAACC,GAAR,CAAYa,CAAZ;AACD;AAEF,CApBM;AAsBP,OAAO,MAAMC,aAAa,GAAIC,EAAD,IAAS,MAAOtB,QAAP,IAAoB;AACvD,MAAIC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAZ;;AAEC,MAAI;AAEA,UAAMb,QAAQ,CACb+B,MADK,CACG,GAAEX,OAAO,CAACC,GAAR,CAAYC,qBAAsB,gBADvC,EACwD;AAC5DC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,UAASf,KAAK,CAACO,YAAa;AADrC;AADmD,KADxD,CAAN;AAMAR,IAAAA,QAAQ,CAAC;AACLS,MAAAA,IAAI,EAAEd,cADD;AACiBsB,MAAAA,OAAO,EAAEK;AAD1B,KAAD,CAAR;AAGH,GAXD,CAWE,OAAOE,GAAP,EAAY,CAEb;AAGJ,CAnBM","sourcesContent":["import axios from 'axios'\nimport instance from \"../../helpers/axiosly\";\nimport {\n    REQUEST_SERVICE,\n    GET_SERVICE,\n    DELETE_SERVICE,\n    SET_CURRENT,\n    CLEAR_CURRENT,\n    UPDATE_SERVICE\n} from './actiontype';\n\n\nexport const getService = ()  => async (dispatch) => {\n  let token = JSON.parse(localStorage.getItem(\"authUser\"))\n  console.log(token.access_token)\n  try {\n    dispatch({type: REQUEST_SERVICE});\n    const res = await instance\n      .get(`${process.env.REACT_APP_DATABASEURL}/services`, {\n        headers: {\n          Authorization: `Bearer ${token.access_token}`,\n        },\n      })\n      \n    \n      dispatch({\n        type: GET_SERVICE, payload: res.data.data.rows\n    });\n  } catch (e) {\n    console.log(e);\n  }\n  \n}\n\nexport const deleteService = (id)  => async (dispatch) => {\n   let token = JSON.parse(localStorage.getItem(\"authUser\"))\n  \n    try {\n\n        await instance\n        .delete(`${process.env.REACT_APP_DATABASEURL}/services/{id}`, {\n          headers: {\n            Authorization: `Bearer ${token.access_token}`,\n          },\n        })\n        dispatch({\n            type: DELETE_SERVICE, payload: id\n        });\n    } catch (err) {\n       \n    }\n\n   \n}"]},"metadata":{},"sourceType":"module"}