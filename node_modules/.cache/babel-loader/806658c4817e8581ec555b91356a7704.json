{"ast":null,"code":"import _objectSpread from\"/Users/mac/writingPlatform/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{REQUEST_SERVICE,GET_SERVICE,DELETE_SERVICE,SET_CURRENT,CLEAR_CURRENT,UPDATE_SERVICE}from'./actiontype';var initialState={services:[],current:null,loading:false};var Service=function Service(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case REQUEST_SERVICE:return{loading:true};case GET_SERVICE:return _objectSpread(_objectSpread({},state),{},{loading:false,services:action.payload});case DELETE_SERVICE:return _objectSpread(_objectSpread({},state),{},{services:state.services.filter(function(service){return service.id!==action.payload;}),loading:false});default:return{state:state};}};export default Service;","map":{"version":3,"sources":["/Users/mac/writingPlatform/src/store/Service/reducer.js"],"names":["REQUEST_SERVICE","GET_SERVICE","DELETE_SERVICE","SET_CURRENT","CLEAR_CURRENT","UPDATE_SERVICE","initialState","services","current","loading","Service","state","action","type","payload","filter","service","id"],"mappings":"gJAAA,OACIA,eADJ,CAEIC,WAFJ,CAGIC,cAHJ,CAIIC,WAJJ,CAKIC,aALJ,CAMIC,cANJ,KAOO,cAPP,CASA,GAAMC,CAAAA,YAAY,CAAG,CACjBC,QAAQ,CAAE,EADO,CAEjBC,OAAO,CAAE,IAFQ,CAGjBC,OAAO,CAAE,KAHQ,CAArB,CAMA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAiC,IAAhCC,CAAAA,KAAgC,2DAAxBL,YAAwB,IAAVM,CAAAA,MAAU,2CAC7C,OAAOA,MAAM,CAACC,IAAd,EACI,IAAKb,CAAAA,eAAL,CACI,MAAM,CACFS,OAAO,CAAE,IADP,CAAN,CAGJ,IAAKR,CAAAA,WAAL,CACI,sCACOU,KADP,MAEIF,OAAO,CAAE,KAFb,CAGIF,QAAQ,CAAEK,MAAM,CAACE,OAHrB,GAKJ,IAAMZ,CAAAA,cAAN,CACI,sCACOS,KADP,MAEIJ,QAAQ,CAAEI,KAAK,CAACJ,QAAN,CAAeQ,MAAf,CAAsB,SAAAC,OAAO,QAAIA,CAAAA,OAAO,CAACC,EAAR,GAAeL,MAAM,CAACE,OAA1B,EAA7B,CAFd,CAGIL,OAAO,CAAE,KAHb,GAKJ,QACI,MAAM,CAACE,KAAK,CAALA,KAAD,CAAN,CAlBR,CAqBD,CAtBH,CAwBA,cAAeD,CAAAA,OAAf","sourcesContent":["import {\n    REQUEST_SERVICE,\n    GET_SERVICE,\n    DELETE_SERVICE,\n    SET_CURRENT,\n    CLEAR_CURRENT,\n    UPDATE_SERVICE\n} from './actiontype';\n\nconst initialState = {\n    services: [],\n    current: null,\n    loading: false,\n  };\n\nconst Service = (state = initialState, action) =>{\n    switch(action.type){\n        case REQUEST_SERVICE:\n            return{\n                loading: true,\n            }\n        case GET_SERVICE: \n            return{\n                ...state,\n                loading: false,\n                services: action.payload,\n            }\n        case  DELETE_SERVICE:\n            return{\n                ...state,\n                services: state.services.filter(service => service.id !== action.payload),\n                loading: false\n            }\n        default:\n            return{state}\n            \n    }\n  }\n\nexport default Service;"]},"metadata":{},"sourceType":"module"}