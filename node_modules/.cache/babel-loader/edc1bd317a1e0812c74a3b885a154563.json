{"ast":null,"code":"import { takeEvery, fork, put, all, call } from 'redux-saga/effects'; // Login Redux States\n\nimport { EDIT_PROFILE } from './actionTypes';\nimport { profileSuccess, profileError } from './actions'; //Include Both Helper File with needed methods\n\nimport { getFirebaseBackend } from '../../../helpers/firebase_helper';\nimport { postFakeProfile, postJwtProfile } from '../../../helpers/fakebackend_helper';\nconst fireBaseBackend = getFirebaseBackend();\n\nfunction* editProfile({\n  payload: {\n    user\n  }\n}) {\n  try {\n    if (process.env.REACT_APP_DEFAULTAUTH === \"firebase\") {\n      const response = yield call(fireBaseBackend.editProfileAPI, user.username, user.idx);\n      yield put(profileSuccess(response));\n    } else if (process.env.REACT_APP_DEFAULTAUTH === \"jwt\") {\n      const response = yield call(postJwtProfile, '/post-jwt-profile', {\n        username: user.username,\n        idx: user.idx\n      });\n      yield put(profileSuccess(response));\n    } else if (process.env.REACT_APP_DEFAULTAUTH === \"fake\") {\n      const response = yield call(postFakeProfile, '/post-fake-profile', {\n        username: user.username,\n        idx: user.idx\n      });\n      yield put(profileSuccess(response));\n    }\n  } catch (error) {\n    yield put(profileError(error));\n  }\n}\n\nexport function* watchProfile() {\n  yield takeEvery(EDIT_PROFILE, editProfile);\n}\n\nfunction* ProfileSaga() {\n  yield all([fork(watchProfile)]);\n}\n\nexport default ProfileSaga;","map":{"version":3,"sources":["/Users/mac/metabank/src/store/auth/profile/saga.js"],"names":["takeEvery","fork","put","all","call","EDIT_PROFILE","profileSuccess","profileError","getFirebaseBackend","postFakeProfile","postJwtProfile","fireBaseBackend","editProfile","payload","user","process","env","REACT_APP_DEFAULTAUTH","response","editProfileAPI","username","idx","error","watchProfile","ProfileSaga"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,EAA+BC,GAA/B,EAAoCC,IAApC,QAAgD,oBAAhD,C,CAEA;;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,SAASC,cAAT,EAAyBC,YAAzB,QAA6C,WAA7C,C,CAEA;;AACA,SAASC,kBAAT,QAAmC,kCAAnC;AACA,SAASC,eAAT,EAA0BC,cAA1B,QAAiD,qCAAjD;AAEA,MAAMC,eAAe,GAAGH,kBAAkB,EAA1C;;AAEA,UAAUI,WAAV,CAAsB;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA;AAAF;AAAX,CAAtB,EAA6C;AAEzC,MAAI;AACE,QAAGC,OAAO,CAACC,GAAR,CAAYC,qBAAZ,KAAsC,UAAzC,EACA;AACE,YAAMC,QAAQ,GAAG,MAAMd,IAAI,CAACO,eAAe,CAACQ,cAAjB,EAAiCL,IAAI,CAACM,QAAtC,EAAgDN,IAAI,CAACO,GAArD,CAA3B;AACA,YAAMnB,GAAG,CAACI,cAAc,CAACY,QAAD,CAAf,CAAT;AACD,KAJD,MAKK,IAAGH,OAAO,CAACC,GAAR,CAAYC,qBAAZ,KAAsC,KAAzC,EACL;AACG,YAAMC,QAAQ,GAAG,MAAMd,IAAI,CAACM,cAAD,EAAiB,mBAAjB,EAAsC;AAAEU,QAAAA,QAAQ,EAAEN,IAAI,CAACM,QAAjB;AAA2BC,QAAAA,GAAG,EAAGP,IAAI,CAACO;AAAtC,OAAtC,CAA3B;AACA,YAAMnB,GAAG,CAACI,cAAc,CAACY,QAAD,CAAf,CAAT;AACF,KAJI,MAKA,IAAGH,OAAO,CAACC,GAAR,CAAYC,qBAAZ,KAAsC,MAAzC,EACL;AACG,YAAMC,QAAQ,GAAG,MAAMd,IAAI,CAACK,eAAD,EAAkB,oBAAlB,EAAwC;AAAEW,QAAAA,QAAQ,EAAEN,IAAI,CAACM,QAAjB;AAA2BC,QAAAA,GAAG,EAAGP,IAAI,CAACO;AAAtC,OAAxC,CAA3B;AACA,YAAMnB,GAAG,CAACI,cAAc,CAACY,QAAD,CAAf,CAAT;AACF;AAEN,GAjBD,CAiBE,OAAOI,KAAP,EAAc;AACZ,UAAMpB,GAAG,CAACK,YAAY,CAACe,KAAD,CAAb,CAAT;AACH;AACJ;;AACD,OAAO,UAAUC,YAAV,GAAyB;AAC5B,QAAMvB,SAAS,CAACK,YAAD,EAAeO,WAAf,CAAf;AACH;;AAED,UAAUY,WAAV,GAAwB;AACpB,QAAMrB,GAAG,CAAC,CACNF,IAAI,CAACsB,YAAD,CADE,CAAD,CAAT;AAGH;;AAED,eAAeC,WAAf","sourcesContent":["import { takeEvery, fork, put, all, call } from 'redux-saga/effects';\n\n// Login Redux States\nimport { EDIT_PROFILE } from './actionTypes';\nimport { profileSuccess, profileError } from './actions';\n\n//Include Both Helper File with needed methods\nimport { getFirebaseBackend } from '../../../helpers/firebase_helper';\nimport { postFakeProfile, postJwtProfile  } from '../../../helpers/fakebackend_helper';\n \nconst fireBaseBackend = getFirebaseBackend();\n\nfunction* editProfile({ payload: { user } }) {\n\n    try {\n          if(process.env.REACT_APP_DEFAULTAUTH === \"firebase\")\n          {\n            const response = yield call(fireBaseBackend.editProfileAPI, user.username, user.idx);\n            yield put(profileSuccess(response));\n          }\n          else if(process.env.REACT_APP_DEFAULTAUTH === \"jwt\")\n          {  \n             const response = yield call(postJwtProfile, '/post-jwt-profile', { username: user.username, idx : user.idx });\n             yield put(profileSuccess(response));\n          }\n          else if(process.env.REACT_APP_DEFAULTAUTH === \"fake\")\n          {\n             const response = yield call(postFakeProfile, '/post-fake-profile', { username: user.username, idx : user.idx });\n             yield put(profileSuccess(response));\n          }\n          \n    } catch (error) {\n        yield put(profileError(error));\n    }\n}\nexport function* watchProfile() {\n    yield takeEvery(EDIT_PROFILE, editProfile)\n}\n\nfunction* ProfileSaga() {\n    yield all([\n        fork(watchProfile),\n    ]);\n}\n\nexport default ProfileSaga;"]},"metadata":{},"sourceType":"module"}