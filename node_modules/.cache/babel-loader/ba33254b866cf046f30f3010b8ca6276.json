{"ast":null,"code":"import axios from \"axios\"; // Gets the logged in user data from local session\n\nconst getLoggedInUser = () => {\n  const user = localStorage.getItem(\"user\");\n  if (user) return JSON.parse(user);\n  return null;\n}; //is user is logged in\n\n\nconst isUserAuthenticated = () => {\n  return getLoggedInUser() !== null;\n}; // Register Method\n\n\nconst postFakeRegister = (url, data) => {\n  return axios.post(url, data).then(response => {\n    if (response.status >= 200 || response.status <= 299) return response.data;\n    throw response.data;\n  }).catch(err => {\n    var message;\n\n    if (err.response && err.response.status) {\n      switch (err.response.status) {\n        case 404:\n          message = \"Sorry! the page you are looking for could not be found\";\n          break;\n\n        case 500:\n          message = \"Sorry! something went wrong, please contact our support team\";\n          break;\n\n        case 401:\n          message = \"Invalid credentials\";\n          break;\n\n        default:\n          message = err[1];\n          break;\n      }\n    }\n\n    throw message;\n  });\n}; // Login Method\n\n\nconst postFakeLogin = (url, data) => {\n  return axios.post(url, data).then(response => {\n    if (response.status === 400 || response.status === 500) throw response.data;\n    return response.data;\n  }).catch(err => {\n    throw err[1];\n  });\n}; // const postUserLogin = (url, data) => {\n//     console.log('here', data, url);\n//     return axios.post(url, data).then(response => {\n//         if (response.status === 400 || response.status === 500)\n//             throw response.data;\n//         return response.data;\n//     }).catch(err => {\n//         throw err[1];\n//     });\n// }\n\n\nconst postUserLogin = (url, data) => {\n  const axio = axios.create({\n    baseURL: \"\",\n    timeout: 999999 //10000,\n\n  }); // axio.interceptors.request.use((config) => {\n  //     const customConfig = config;\n  //     if (localStorage.getItem('stadiumJWToken')) {\n  //       let webToken = JSON.parse(localStorage.getItem('stadiumJWToken'));\n  //       if (new Date(webToken.date) >= Date.now()) {\n  //         customConfig.headers.Authorization = webToken.bearer;\n  //       }\n  //     }\n  //     return customConfig;\n  //   });\n\n  console.log(\"here xx\", data, url);\n  return axio.post(url, data).then(response => {\n    console.log(\"here 2 \", {\n      response\n    });\n\n    if (response.status === 400 || response.status === 500) {\n      console.log(response);\n      throw new Error(JSON.stringify(response));\n    }\n\n    return response.data;\n  }).catch(err => {\n    console.error({\n      err\n    }, err.response);\n    throw err[1];\n  });\n}; // postForgetPwd\n\n\nconst postFakeForgetPwd = (url, data) => {\n  return axios.post(url, data).then(response => {\n    if (response.status === 400 || response.status === 500) throw response.data;\n    return response.data;\n  }).catch(err => {\n    throw err[1];\n  });\n}; // Login Method\n\n\nconst postJwtProfile = (url, data) => {\n  return axios.post(url, data, {\n    headers: {\n      Authorization: \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6ImFkbWluIiwiYWRtaW4iOnRydWUsImp0aSI6ImQ2MTEwYzAxLWMwYjUtNDUzNy1iNDZhLTI0NTk5Mjc2YjY1NiIsImlhdCI6MTU5MjU2MDk2MCwiZXhwIjoxNTkyNTY0NjE5fQ.QgFSQtFaK_Ktauadttq1Is7f9w0SUtKcL8xCmkAvGLw\"\n    }\n  }).then(response => {\n    if (response.status === 400 || response.status === 500) throw response.data;\n    return response.data;\n  }).catch(err => {\n    throw err[1];\n  });\n};\n\nconst postFakeProfile = (url, data) => {\n  return axios.post(url, data).then(response => {\n    if (response.status === 400 || response.status === 500) throw response.data;\n    return response.data;\n  }).catch(err => {\n    throw err[1];\n  });\n}; // Register Method\n\n\nconst postJwtRegister = (url, data) => {\n  return axios.post(url, data).then(response => {\n    if (response.status >= 200 || response.status <= 299) return response.data;\n    throw response.data;\n  }).catch(err => {\n    var message;\n\n    if (err.response && err.response.status) {\n      switch (err.response.status) {\n        case 404:\n          message = \"Sorry! the page you are looking for could not be found\";\n          break;\n\n        case 500:\n          message = \"Sorry! something went wrong, please contact our support team\";\n          break;\n\n        case 401:\n          message = \"Invalid credentials\";\n          break;\n\n        default:\n          message = err[1];\n          break;\n      }\n    }\n\n    throw message;\n  });\n}; // Login Method\n\n\nconst postJwtLogin = (url, data) => {\n  return axios.post(url, data).then(response => {\n    if (response.status === 400 || response.status === 500) throw response.data;\n    return response.data;\n  }).catch(err => {\n    throw err[1];\n  });\n}; // postForgetPwd\n\n\nconst postJwtForgetPwd = (url, data) => {\n  return axios.post(url, data).then(response => {\n    if (response.status === 400 || response.status === 500) throw response.data;\n    return response.data;\n  }).catch(err => {\n    throw err[1];\n  });\n};\n\nexport { getLoggedInUser, postUserLogin, isUserAuthenticated, postFakeRegister, postFakeLogin, postFakeProfile, postFakeForgetPwd, postJwtRegister, postJwtLogin, postJwtForgetPwd, postJwtProfile };","map":{"version":3,"sources":["/Users/mac/metabank/src/helpers/fakebackend_helper.js"],"names":["axios","getLoggedInUser","user","localStorage","getItem","JSON","parse","isUserAuthenticated","postFakeRegister","url","data","post","then","response","status","catch","err","message","postFakeLogin","postUserLogin","axio","create","baseURL","timeout","console","log","Error","stringify","error","postFakeForgetPwd","postJwtProfile","headers","Authorization","postFakeProfile","postJwtRegister","postJwtLogin","postJwtForgetPwd"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n\n// Gets the logged in user data from local session\nconst getLoggedInUser = () => {\n  const user = localStorage.getItem(\"user\");\n  if (user) return JSON.parse(user);\n  return null;\n};\n\n//is user is logged in\nconst isUserAuthenticated = () => {\n  return getLoggedInUser() !== null;\n};\n\n// Register Method\nconst postFakeRegister = (url, data) => {\n  return axios\n    .post(url, data)\n    .then((response) => {\n      if (response.status >= 200 || response.status <= 299)\n        return response.data;\n      throw response.data;\n    })\n    .catch((err) => {\n      var message;\n      if (err.response && err.response.status) {\n        switch (err.response.status) {\n          case 404:\n            message = \"Sorry! the page you are looking for could not be found\";\n            break;\n          case 500:\n            message =\n              \"Sorry! something went wrong, please contact our support team\";\n            break;\n          case 401:\n            message = \"Invalid credentials\";\n            break;\n          default:\n            message = err[1];\n            break;\n        }\n      }\n      throw message;\n    });\n};\n\n// Login Method\nconst postFakeLogin = (url, data) => {\n  return axios\n    .post(url, data)\n    .then((response) => {\n      if (response.status === 400 || response.status === 500)\n        throw response.data;\n      return response.data;\n    })\n    .catch((err) => {\n      throw err[1];\n    });\n};\n\n// const postUserLogin = (url, data) => {\n//     console.log('here', data, url);\n\n//     return axios.post(url, data).then(response => {\n//         if (response.status === 400 || response.status === 500)\n//             throw response.data;\n//         return response.data;\n//     }).catch(err => {\n//         throw err[1];\n//     });\n// }\nconst postUserLogin = (url, data) => {\n  const axio = axios.create({\n    baseURL: \"\",\n    timeout: 999999, //10000,\n  });\n\n  // axio.interceptors.request.use((config) => {\n  //     const customConfig = config;\n  //     if (localStorage.getItem('stadiumJWToken')) {\n  //       let webToken = JSON.parse(localStorage.getItem('stadiumJWToken'));\n  //       if (new Date(webToken.date) >= Date.now()) {\n  //         customConfig.headers.Authorization = webToken.bearer;\n  //       }\n  //     }\n  //     return customConfig;\n  //   });\n\n  console.log(\"here xx\", data, url);\n  return axio\n    .post(url, data)\n    .then((response) => {\n      console.log(\"here 2 \", { response });\n      if (response.status === 400 || response.status === 500) {\n        console.log(response);\n        throw new Error(JSON.stringify(response));\n      }\n      return response.data;\n    })\n    .catch((err) => {\n      console.error({ err }, err.response);\n      throw err[1];\n    });\n};\n\n// postForgetPwd\nconst postFakeForgetPwd = (url, data) => {\n  return axios\n    .post(url, data)\n    .then((response) => {\n      if (response.status === 400 || response.status === 500)\n        throw response.data;\n      return response.data;\n    })\n    .catch((err) => {\n      throw err[1];\n    });\n};\n\n// Login Method\nconst postJwtProfile = (url, data) => {\n  return axios\n    .post(url, data, {\n      headers: {\n        Authorization:\n          \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6ImFkbWluIiwiYWRtaW4iOnRydWUsImp0aSI6ImQ2MTEwYzAxLWMwYjUtNDUzNy1iNDZhLTI0NTk5Mjc2YjY1NiIsImlhdCI6MTU5MjU2MDk2MCwiZXhwIjoxNTkyNTY0NjE5fQ.QgFSQtFaK_Ktauadttq1Is7f9w0SUtKcL8xCmkAvGLw\",\n      },\n    })\n    .then((response) => {\n      if (response.status === 400 || response.status === 500)\n        throw response.data;\n      return response.data;\n    })\n    .catch((err) => {\n      throw err[1];\n    });\n};\n\nconst postFakeProfile = (url, data) => {\n  return axios\n    .post(url, data)\n    .then((response) => {\n      if (response.status === 400 || response.status === 500)\n        throw response.data;\n      return response.data;\n    })\n    .catch((err) => {\n      throw err[1];\n    });\n};\n\n// Register Method\nconst postJwtRegister = (url, data) => {\n  return axios\n    .post(url, data)\n    .then((response) => {\n      if (response.status >= 200 || response.status <= 299)\n        return response.data;\n      throw response.data;\n    })\n    .catch((err) => {\n      var message;\n      if (err.response && err.response.status) {\n        switch (err.response.status) {\n          case 404:\n            message = \"Sorry! the page you are looking for could not be found\";\n            break;\n          case 500:\n            message =\n              \"Sorry! something went wrong, please contact our support team\";\n            break;\n          case 401:\n            message = \"Invalid credentials\";\n            break;\n          default:\n            message = err[1];\n            break;\n        }\n      }\n      throw message;\n    });\n};\n\n// Login Method\nconst postJwtLogin = (url, data) => {\n  return axios\n    .post(url, data)\n    .then((response) => {\n      if (response.status === 400 || response.status === 500)\n        throw response.data;\n      return response.data;\n    })\n    .catch((err) => {\n      throw err[1];\n    });\n};\n\n// postForgetPwd\nconst postJwtForgetPwd = (url, data) => {\n  return axios\n    .post(url, data)\n    .then((response) => {\n      if (response.status === 400 || response.status === 500)\n        throw response.data;\n      return response.data;\n    })\n    .catch((err) => {\n      throw err[1];\n    });\n};\n\nexport {\n  getLoggedInUser,\n  postUserLogin,\n  isUserAuthenticated,\n  postFakeRegister,\n  postFakeLogin,\n  postFakeProfile,\n  postFakeForgetPwd,\n  postJwtRegister,\n  postJwtLogin,\n  postJwtForgetPwd,\n  postJwtProfile,\n};\n"]},"metadata":{},"sourceType":"module"}