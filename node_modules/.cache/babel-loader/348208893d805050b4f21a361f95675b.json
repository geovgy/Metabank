{"ast":null,"code":"var _jsxFileName = \"/Users/mac/writingPlatform/src/pages/Writer/ProjectNotification.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Button, Card, CardBody, CardTitle, Modal, ModalHeader, ModalBody, ModalFooter, Media, Table } from \"reactstrap\"; // Pages Components\n\nimport { Link } from \"react-router-dom\";\nimport instance from \"../../helpers/axiosly\";\nimport stateWrapper from \"../../containers/provider\";\nimport Moment from \"react-moment\"; //Import Breadcrumb\n\nimport Breadcrumbs from \"../../components/Common/Breadcrumb\"; //i18n\n\nimport { withNamespaces } from 'react-i18next';\n\nconst ProjectNotification = props => {\n  const token = localStorage.getItem(\"token\");\n  const [projectNotifications, setProjectNotifications] = useState([]);\n  const [state, setState] = useState({\n    loading: false,\n    alert: ''\n  });\n  useEffect(() => {\n    setState({ ...state,\n      loading: true\n    });\n\n    async function fetchData() {\n      try {\n        var _props$writerStore, _props$writerStore2, _res$data, _res$data$data;\n\n        let userData = await props.userStore.fetchUser(props);\n        console.log(props === null || props === void 0 ? void 0 : (_props$writerStore = props.writerStore) === null || _props$writerStore === void 0 ? void 0 : _props$writerStore.getProjectNotifications(token, userData === null || userData === void 0 ? void 0 : userData.id));\n        console.log(userData, \"userData\"); // const orderList = await props?.masterStore?.fetchOrder(token)\n        //   console.log(orderList)\n\n        const res = await (props === null || props === void 0 ? void 0 : (_props$writerStore2 = props.writerStore) === null || _props$writerStore2 === void 0 ? void 0 : _props$writerStore2.getProjectNotifications(token, userData === null || userData === void 0 ? void 0 : userData.id));\n        setState({ ...state,\n          loading: false\n        });\n        setProjectNotifications(res.data.data.rows);\n        console.log(res === null || res === void 0 ? void 0 : (_res$data = res.data) === null || _res$data === void 0 ? void 0 : (_res$data$data = _res$data.data) === null || _res$data$data === void 0 ? void 0 : _res$data$data.rows);\n      } catch (e) {\n        console.log(e);\n      }\n    }\n\n    fetchData();\n  }, []); //handle Reject project\n\n  const handleRejectProject = async notificationId => {\n    var _props$writerStore3;\n\n    const res = await (props === null || props === void 0 ? void 0 : (_props$writerStore3 = props.writerStore) === null || _props$writerStore3 === void 0 ? void 0 : _props$writerStore3.rejectProject(token, notificationId));\n    console.log(res);\n\n    if (res.data.status == 'Success') {\n      setState({ ...state,\n        alert: 'deleted'\n      });\n      setTimeout(function () {\n        setState({ ...state,\n          alert: ''\n        });\n      }, 2000);\n    }\n\n    window.location.reload();\n  }; //handle accept project\n\n\n  const handleAcceptProject = async notificationId => {\n    var _props$writerStore4;\n\n    const res = await (props === null || props === void 0 ? void 0 : (_props$writerStore4 = props.writerStore) === null || _props$writerStore4 === void 0 ? void 0 : _props$writerStore4.acceptProject(token, notificationId));\n    console.log(res);\n\n    if (res.data.status == 'Success') {\n      setState({ ...state,\n        alert: 'deleted'\n      });\n      setTimeout(function () {\n        setState({ ...state,\n          alert: ''\n        });\n      }, 2000);\n    }\n\n    window.location.reload();\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumbs, {\n    title: props.t('ProjectNotification'),\n    breadcrumbItem: props.t('All ProjectNotification'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(CardTitle, {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 37\n    }\n  }, \"ALL PROJECTS\"), state.loading ? /*#__PURE__*/React.createElement(\"div\", {\n    class: \"spinner-border\",\n    role: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 55\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    class: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 41\n    }\n  }, \"Loading...\")) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table-responsive\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table table-centered table-nowrap mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    className: \"thead-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      width: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"custom-control custom-checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    className: \"custom-control-input\",\n    id: \"customCheck1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 65\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"custom-control-label\",\n    htmlFor: \"customCheck1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 65\n    }\n  }, \"\\xA0\"))), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 57\n    }\n  }, \"Notification\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 57\n    }\n  }, \"Order Reference\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 57\n    }\n  }, \"Actions\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 49\n    }\n  }, projectNotifications.map((project, key) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: \"_tr_\" + key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"custom-control custom-checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 65\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    className: \"custom-control-input\" //   id={project.count}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 69\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"custom-control-label\" //   htmlFor={project.count}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 69\n    }\n  }, \"\\xA0\"))), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 61\n    }\n  }, project.text, \" \", project.orderId), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 61\n    }\n  }, \" \", project.orderId), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/wprojectspage/\" + project.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 65\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    className: \"btn btn-primary waves-effect waves-light\",\n    onClick: () => acceptProject(project.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 69\n    }\n  }, \" \", \"Accept Project\")), \" \", /*#__PURE__*/React.createElement(Button, {\n    color: \"warning\",\n    className: \"btn btn-warning waves-effect waves-light\",\n    onClick: () => handleRejectProject(project.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 65\n    }\n  }, \" \", \"Reject Project\"))))))))))))));\n};\n\nexport default withNamespaces()(stateWrapper(ProjectNotification));","map":{"version":3,"sources":["/Users/mac/writingPlatform/src/pages/Writer/ProjectNotification.js"],"names":["React","useState","useEffect","Container","Row","Col","Button","Card","CardBody","CardTitle","Modal","ModalHeader","ModalBody","ModalFooter","Media","Table","Link","instance","stateWrapper","Moment","Breadcrumbs","withNamespaces","ProjectNotification","props","token","localStorage","getItem","projectNotifications","setProjectNotifications","state","setState","loading","alert","fetchData","userData","userStore","fetchUser","console","log","writerStore","getProjectNotifications","id","res","data","rows","e","handleRejectProject","notificationId","rejectProject","status","setTimeout","window","location","reload","handleAcceptProject","acceptProject","t","width","map","project","key","text","orderId"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Button, Card, CardBody, CardTitle, Modal, ModalHeader, ModalBody, ModalFooter, Media, Table } from \"reactstrap\";\n\n// Pages Components\nimport { Link } from \"react-router-dom\";\nimport instance from \"../../helpers/axiosly\";\nimport stateWrapper from \"../../containers/provider\";\nimport Moment from \"react-moment\";\n\n\n//Import Breadcrumb\nimport Breadcrumbs from \"../../components/Common/Breadcrumb\";\n\n\n//i18n\nimport { withNamespaces } from 'react-i18next';\n\nconst ProjectNotification = (props) => {\n    const token = localStorage.getItem(\"token\")\n\n    const [projectNotifications, setProjectNotifications] = useState([]);\n    const [state, setState] = useState({\n        loading: false,\n        alert:''\n    })\n\n    useEffect(() => {\n        setState({ ...state, loading: true })\n        async function fetchData() {\n            try {\n\n                let userData = await props.userStore.fetchUser(props);\n                console.log(props?.writerStore?.getProjectNotifications(token, userData?.id))\n                console.log(userData, \"userData\");\n                // const orderList = await props?.masterStore?.fetchOrder(token)\n                //   console.log(orderList)\n                const res = await props?.writerStore?.getProjectNotifications(token, userData?.id)\n                setState({ ...state, loading: false })\n                setProjectNotifications(res.data.data.rows)\n                console.log(res?.data?.data?.rows)\n\n\n\n\n            } catch (e) {\n                console.log(e);\n            }\n        }\n        fetchData();\n    }, [])\n\n    //handle Reject project\n    const handleRejectProject = async (notificationId) => {\n\n        const res = await props?.writerStore?.rejectProject(token, notificationId)\n        console.log(res)\n\n        if (res.data.status == 'Success') {\n            setState({ ...state, alert: 'deleted' })\n            setTimeout(function () {\n                setState({ ...state, alert: '' })\n            }, 2000)\n        }\n        window.location.reload()\n    }\n\n    //handle accept project\n    const handleAcceptProject = async (notificationId) => {\n\n        const res = await props?.writerStore?.acceptProject(token, notificationId)\n        console.log(res)\n\n        if (res.data.status == 'Success') {\n            setState({ ...state, alert: 'deleted' })\n            setTimeout(function () {\n                setState({ ...state, alert: '' })\n            }, 2000)\n        }\n        window.location.reload()\n    }\n\n    return (\n        <React.Fragment>\n            <div className=\"page-content\">\n                <Container fluid>\n\n                    {/* Render Breadcrumb */}\n                    <Breadcrumbs title={props.t('ProjectNotification')} breadcrumbItem={props.t('All ProjectNotification')} />\n\n                    <Row>\n                        <Col lg=\"12\">\n                            <Card>\n                                <CardBody>\n                                    <CardTitle className=\"mb-4\">ALL PROJECTS</CardTitle>\n                                    {state.loading ? (<div class=\"spinner-border\" role=\"status\">\n                                        <span class=\"sr-only\">Loading...</span>\n                                    </div>) : (\n                                        <div className=\"table-responsive\">\n                                            <table className=\"table table-centered table-nowrap mb-0\">\n                                                <thead className=\"thead-light\">\n                                                    <tr>\n                                                        <th style={{ width: \"20px\" }}>\n                                                            <div className=\"custom-control custom-checkbox\">\n                                                                <input\n                                                                    type=\"checkbox\"\n                                                                    className=\"custom-control-input\"\n                                                                    id=\"customCheck1\"\n                                                                />\n                                                                <label\n                                                                    className=\"custom-control-label\"\n                                                                    htmlFor=\"customCheck1\"\n                                                                >\n                                                                    &nbsp;\n                                                                </label>\n                                                            </div>\n                                                        </th>\n                                                        <th>Notification</th>\n                                                        <th>Order Reference</th>\n                                                        <th>Actions</th>\n                                                    </tr>\n                                                </thead>\n                                                <tbody>\n                                                    {projectNotifications.map((project, key) => (\n                                                        <tr key={\"_tr_\" + key}>\n                                                            <td>\n                                                                <div className=\"custom-control custom-checkbox\">\n                                                                    <input\n                                                                        type=\"checkbox\"\n                                                                        className=\"custom-control-input\"\n                                                                    //   id={project.count}\n                                                                    />\n                                                                    <label\n                                                                        className=\"custom-control-label\"\n                                                                    //   htmlFor={project.count}\n                                                                    >\n                                                                        &nbsp;\n                                                                    </label>\n                                                                </div>\n                                                            </td>\n                                                            {/* <td>\n                                  <Link to=\"#\" className=\"text-body font-weight-bold\">\n                                    {\" \"}\n                                    {project.order.topic}{\" \"}\n                                  </Link>{\" \"}\n                                </td> */}\n                                                            {/* <td><Moment format=\"YYYY/MM/DD\">{project.order.createdAt}</Moment> </td> */}\n                                                            <td>{project.text} {project.orderId}</td>\n                                                            <td> {project.orderId}</td>\n\n                                                            <td>\n                                                                <Link to={\"/wprojectspage/\" + project.id}>\n                                                                    <Button\n                                                                        color=\"primary\"\n                                                                        className=\"btn btn-primary waves-effect waves-light\"\n                                                                        onClick={() => acceptProject(project.id)}\n                                                                    >\n                                                                        {\" \"}\n                                                                        Accept Project\n                                                                    </Button>\n                                                                </Link>\n                                                                {\" \"}\n\n                                                                <Button\n                                                                    color=\"warning\"\n                                                                    className=\"btn btn-warning waves-effect waves-light\"\n                                                                    onClick={() => handleRejectProject(project.id)}\n                                                                >\n                                                                    {\" \"}\n                                                                    Reject Project\n                                                                </Button>\n                                                                {/* <Button\n                     color=\"primary\"\n                     className=\"btn btn-primary waves-effect waves-light mx-2\"\n                    //  onClick={() => handleDelete(paperType.id)}\n                         >\n                     {\" \"}\n                      <i className=\"bx bx-trash\"></i>\n                     </Button> */}\n                                                            </td>\n                                                        </tr>\n                                                    ))}\n                                                    {/* <button\n                            className=\"btn btn-primary waves-effect waves-light\"\n                            type=\"button\"\n                          onClick={() => { downloadFile(x.order.additional_materials) }}\n                          >\n                            <i class=\"mdi mdi-download font-size-16 align-middle me-2\"></i>\n                            {\" \"}Download pdf\n                              </button> */}\n                                                </tbody>\n                                            </table>\n                                        </div>\n                                    )}\n\n                                </CardBody>\n                            </Card>\n\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        </React.Fragment>\n    );\n}\n\nexport default withNamespaces()(stateWrapper(ProjectNotification));"]},"metadata":{},"sourceType":"module"}