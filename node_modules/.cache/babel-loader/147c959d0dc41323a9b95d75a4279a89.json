{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _typeof from \"@babel/runtime/helpers/typeof\";\nimport React from 'react';\nimport HTML from 'html-parse-stringify2';\nimport { withI18n } from './context';\nimport { warn } from './utils';\n\nfunction hasChildren(node) {\n  return node && (node.children || node.props && node.props.children);\n}\n\nfunction getChildren(node) {\n  return node && node.children ? node.children : node.props && node.props.children;\n}\n\nfunction nodesToString(mem, children, index) {\n  if (!children) return '';\n  if (Object.prototype.toString.call(children) !== '[object Array]') children = [children];\n  children.forEach(function (child, i) {\n    // const isElement = React.isValidElement(child);\n    // const elementKey = `${index !== 0 ? index + '-' : ''}${i}:${typeof child.type === 'function' ? child.type.name : child.type || 'var'}`;\n    var elementKey = \"\".concat(i);\n\n    if (typeof child === 'string') {\n      mem = \"\".concat(mem).concat(child);\n    } else if (hasChildren(child)) {\n      mem = \"\".concat(mem, \"<\").concat(elementKey, \">\").concat(nodesToString('', getChildren(child), i + 1), \"</\").concat(elementKey, \">\");\n    } else if (React.isValidElement(child)) {\n      mem = \"\".concat(mem, \"<\").concat(elementKey, \"></\").concat(elementKey, \">\");\n    } else if (_typeof(child) === 'object') {\n      var clone = _objectSpread({}, child);\n\n      var format = clone.format;\n      delete clone.format;\n      var keys = Object.keys(clone);\n\n      if (format && keys.length === 1) {\n        mem = \"\".concat(mem, \"{{\").concat(keys[0], \", \").concat(format, \"}}\");\n      } else if (keys.length === 1) {\n        mem = \"\".concat(mem, \"{{\").concat(keys[0], \"}}\");\n      } else {\n        // not a valid interpolation object (can only contain one value plus format)\n        warn(\"react-i18next: the passed in object contained more than one variable - the object should look like {{ value, format }} where format is optional.\", child);\n      }\n    } else {\n      warn(\"Trans: the passed in value is invalid - seems you passed in a variable like {number} - please pass in variables for interpolation as full objects like {{number}}.\", child);\n    }\n  });\n  return mem;\n}\n\nfunction renderNodes(children, targetString, i18n) {\n  if (targetString === '') return [];\n  if (!children) return [targetString]; // v2 -> interpolates upfront no need for \"some <0>{{var}}</0>\"\" -> will be just \"some {{var}}\" in translation file\n\n  var data = {};\n\n  function getData(childs) {\n    if (Object.prototype.toString.call(childs) !== '[object Array]') childs = [childs];\n    childs.forEach(function (child) {\n      if (typeof child === 'string') return;\n      if (hasChildren(child)) getData(getChildren(child));else if (_typeof(child) === 'object' && !React.isValidElement(child)) Object.assign(data, child);\n    });\n  }\n\n  getData(children);\n  targetString = i18n.services.interpolator.interpolate(targetString, data, i18n.language); // parse ast from string with additional wrapper tag\n  // -> avoids issues in parser removing prepending text nodes\n\n  var ast = HTML.parse(\"<0>\".concat(targetString, \"</0>\"));\n\n  function mapAST(reactNodes, astNodes) {\n    if (Object.prototype.toString.call(reactNodes) !== '[object Array]') reactNodes = [reactNodes];\n    if (Object.prototype.toString.call(astNodes) !== '[object Array]') astNodes = [astNodes];\n    return astNodes.reduce(function (mem, node, i) {\n      if (node.type === 'tag') {\n        var child = reactNodes[parseInt(node.name, 10)] || {};\n        var isElement = React.isValidElement(child);\n\n        if (typeof child === 'string') {\n          mem.push(child);\n        } else if (hasChildren(child)) {\n          var inner = mapAST(getChildren(child), node.children);\n          if (child.dummy) child.children = inner; // needed on preact!\n\n          mem.push(React.cloneElement(child, _objectSpread({}, child.props, {\n            key: i\n          }), inner));\n        } else if (_typeof(child) === 'object' && !isElement) {\n          var content = node.children[0] ? node.children[0].content : null; // v1\n          // as interpolation was done already we just have a regular content node\n          // in the translation AST while having an object in reactNodes\n          // -> push the content no need to interpolate again\n\n          if (content) mem.push(content);\n        } else {\n          mem.push(child);\n        }\n      } else if (node.type === 'text') {\n        mem.push(node.content);\n      }\n\n      return mem;\n    }, []);\n  } // call mapAST with having react nodes nested into additional node like\n  // we did for the string ast from translation\n  // return the children of that extra node to get expected result\n\n\n  var result = mapAST([{\n    dummy: true,\n    children: children\n  }], ast);\n  return getChildren(result[0]);\n}\n\nexport var TransComponent = /*#__PURE__*/function (_React$Component) {\n  _inherits(TransComponent, _React$Component);\n\n  function TransComponent() {\n    _classCallCheck(this, TransComponent);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TransComponent).apply(this, arguments));\n  }\n\n  _createClass(TransComponent, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          count = _this$props.count,\n          parent = _this$props.parent,\n          i18nKey = _this$props.i18nKey,\n          tOptions = _this$props.tOptions,\n          values = _this$props.values,\n          defaults = _this$props.defaults,\n          components = _this$props.components,\n          namespace = _this$props.ns,\n          i18n = _this$props.i18n,\n          tFromContextAndProps = _this$props.t,\n          defaultNS = _this$props.defaultNS,\n          reportNS = _this$props.reportNS,\n          lng = _this$props.lng,\n          i18nOptions = _this$props.i18nOptions,\n          additionalProps = _objectWithoutProperties(_this$props, [\"children\", \"count\", \"parent\", \"i18nKey\", \"tOptions\", \"values\", \"defaults\", \"components\", \"ns\", \"i18n\", \"t\", \"defaultNS\", \"reportNS\", \"lng\", \"i18nOptions\"]);\n\n      var t = tFromContextAndProps || i18n.t.bind(i18n);\n      var reactI18nextOptions = i18n.options && i18n.options.react || {};\n      var useAsParent = parent !== undefined ? parent : reactI18nextOptions.defaultTransParent;\n      var defaultValue = defaults || nodesToString('', children, 0) || reactI18nextOptions.transEmptyNodeValue;\n      var hashTransKey = reactI18nextOptions.hashTransKey;\n      var key = i18nKey || (hashTransKey ? hashTransKey(defaultValue) : defaultValue);\n      var interpolationOverride = values ? {} : {\n        interpolation: {\n          prefix: '#$?',\n          suffix: '?$#'\n        }\n      };\n      var translation = key ? t(key, _objectSpread({}, tOptions, values, interpolationOverride, {\n        defaultValue: defaultValue,\n        count: count,\n        ns: namespace\n      })) : defaultValue;\n\n      if (reactI18nextOptions.exposeNamespace) {\n        var ns = typeof t.ns === 'string' ? t.ns : t.ns[0];\n\n        if (i18nKey && i18n.options && i18n.options.nsSeparator && i18nKey.indexOf(i18n.options.nsSeparator) > -1) {\n          var parts = i18nKey.split(i18n.options.nsSeparator);\n          ns = parts[0];\n        }\n\n        if (t.ns) additionalProps['data-i18next-options'] = JSON.stringify({\n          ns: ns\n        });\n      }\n\n      if (!useAsParent) return renderNodes(components || children, translation, i18n);\n      return React.createElement(useAsParent, additionalProps, renderNodes(components || children, translation, i18n));\n    }\n  }]);\n\n  return TransComponent;\n}(React.Component);\nexport var Trans = withI18n()(TransComponent);","map":{"version":3,"sources":["/Users/mac/metabank/node_modules/react-i18next/dist/es/Trans.js"],"names":["_objectWithoutProperties","_classCallCheck","_createClass","_possibleConstructorReturn","_getPrototypeOf","_inherits","_objectSpread","_typeof","React","HTML","withI18n","warn","hasChildren","node","children","props","getChildren","nodesToString","mem","index","Object","prototype","toString","call","forEach","child","i","elementKey","concat","isValidElement","clone","format","keys","length","renderNodes","targetString","i18n","data","getData","childs","assign","services","interpolator","interpolate","language","ast","parse","mapAST","reactNodes","astNodes","reduce","type","parseInt","name","isElement","push","inner","dummy","cloneElement","key","content","result","TransComponent","_React$Component","apply","arguments","value","render","_this$props","count","parent","i18nKey","tOptions","values","defaults","components","namespace","ns","tFromContextAndProps","t","defaultNS","reportNS","lng","i18nOptions","additionalProps","bind","reactI18nextOptions","options","react","useAsParent","undefined","defaultTransParent","defaultValue","transEmptyNodeValue","hashTransKey","interpolationOverride","interpolation","prefix","suffix","translation","exposeNamespace","nsSeparator","indexOf","parts","split","JSON","stringify","createElement","Component","Trans"],"mappings":"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","sourcesContent":["import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _typeof from \"@babel/runtime/helpers/typeof\";\nimport React from 'react';\nimport HTML from 'html-parse-stringify2';\nimport { withI18n } from './context';\nimport { warn } from './utils';\n\nfunction hasChildren(node) {\n  return node && (node.children || node.props && node.props.children);\n}\n\nfunction getChildren(node) {\n  return node && node.children ? node.children : node.props && node.props.children;\n}\n\nfunction nodesToString(mem, children, index) {\n  if (!children) return '';\n  if (Object.prototype.toString.call(children) !== '[object Array]') children = [children];\n  children.forEach(function (child, i) {\n    // const isElement = React.isValidElement(child);\n    // const elementKey = `${index !== 0 ? index + '-' : ''}${i}:${typeof child.type === 'function' ? child.type.name : child.type || 'var'}`;\n    var elementKey = \"\".concat(i);\n\n    if (typeof child === 'string') {\n      mem = \"\".concat(mem).concat(child);\n    } else if (hasChildren(child)) {\n      mem = \"\".concat(mem, \"<\").concat(elementKey, \">\").concat(nodesToString('', getChildren(child), i + 1), \"</\").concat(elementKey, \">\");\n    } else if (React.isValidElement(child)) {\n      mem = \"\".concat(mem, \"<\").concat(elementKey, \"></\").concat(elementKey, \">\");\n    } else if (_typeof(child) === 'object') {\n      var clone = _objectSpread({}, child);\n\n      var format = clone.format;\n      delete clone.format;\n      var keys = Object.keys(clone);\n\n      if (format && keys.length === 1) {\n        mem = \"\".concat(mem, \"{{\").concat(keys[0], \", \").concat(format, \"}}\");\n      } else if (keys.length === 1) {\n        mem = \"\".concat(mem, \"{{\").concat(keys[0], \"}}\");\n      } else {\n        // not a valid interpolation object (can only contain one value plus format)\n        warn(\"react-i18next: the passed in object contained more than one variable - the object should look like {{ value, format }} where format is optional.\", child);\n      }\n    } else {\n      warn(\"Trans: the passed in value is invalid - seems you passed in a variable like {number} - please pass in variables for interpolation as full objects like {{number}}.\", child);\n    }\n  });\n  return mem;\n}\n\nfunction renderNodes(children, targetString, i18n) {\n  if (targetString === '') return [];\n  if (!children) return [targetString]; // v2 -> interpolates upfront no need for \"some <0>{{var}}</0>\"\" -> will be just \"some {{var}}\" in translation file\n\n  var data = {};\n\n  function getData(childs) {\n    if (Object.prototype.toString.call(childs) !== '[object Array]') childs = [childs];\n    childs.forEach(function (child) {\n      if (typeof child === 'string') return;\n      if (hasChildren(child)) getData(getChildren(child));else if (_typeof(child) === 'object' && !React.isValidElement(child)) Object.assign(data, child);\n    });\n  }\n\n  getData(children);\n  targetString = i18n.services.interpolator.interpolate(targetString, data, i18n.language); // parse ast from string with additional wrapper tag\n  // -> avoids issues in parser removing prepending text nodes\n\n  var ast = HTML.parse(\"<0>\".concat(targetString, \"</0>\"));\n\n  function mapAST(reactNodes, astNodes) {\n    if (Object.prototype.toString.call(reactNodes) !== '[object Array]') reactNodes = [reactNodes];\n    if (Object.prototype.toString.call(astNodes) !== '[object Array]') astNodes = [astNodes];\n    return astNodes.reduce(function (mem, node, i) {\n      if (node.type === 'tag') {\n        var child = reactNodes[parseInt(node.name, 10)] || {};\n        var isElement = React.isValidElement(child);\n\n        if (typeof child === 'string') {\n          mem.push(child);\n        } else if (hasChildren(child)) {\n          var inner = mapAST(getChildren(child), node.children);\n          if (child.dummy) child.children = inner; // needed on preact!\n\n          mem.push(React.cloneElement(child, _objectSpread({}, child.props, {\n            key: i\n          }), inner));\n        } else if (_typeof(child) === 'object' && !isElement) {\n          var content = node.children[0] ? node.children[0].content : null; // v1\n          // as interpolation was done already we just have a regular content node\n          // in the translation AST while having an object in reactNodes\n          // -> push the content no need to interpolate again\n\n          if (content) mem.push(content);\n        } else {\n          mem.push(child);\n        }\n      } else if (node.type === 'text') {\n        mem.push(node.content);\n      }\n\n      return mem;\n    }, []);\n  } // call mapAST with having react nodes nested into additional node like\n  // we did for the string ast from translation\n  // return the children of that extra node to get expected result\n\n\n  var result = mapAST([{\n    dummy: true,\n    children: children\n  }], ast);\n  return getChildren(result[0]);\n}\n\nexport var TransComponent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TransComponent, _React$Component);\n\n  function TransComponent() {\n    _classCallCheck(this, TransComponent);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TransComponent).apply(this, arguments));\n  }\n\n  _createClass(TransComponent, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          count = _this$props.count,\n          parent = _this$props.parent,\n          i18nKey = _this$props.i18nKey,\n          tOptions = _this$props.tOptions,\n          values = _this$props.values,\n          defaults = _this$props.defaults,\n          components = _this$props.components,\n          namespace = _this$props.ns,\n          i18n = _this$props.i18n,\n          tFromContextAndProps = _this$props.t,\n          defaultNS = _this$props.defaultNS,\n          reportNS = _this$props.reportNS,\n          lng = _this$props.lng,\n          i18nOptions = _this$props.i18nOptions,\n          additionalProps = _objectWithoutProperties(_this$props, [\"children\", \"count\", \"parent\", \"i18nKey\", \"tOptions\", \"values\", \"defaults\", \"components\", \"ns\", \"i18n\", \"t\", \"defaultNS\", \"reportNS\", \"lng\", \"i18nOptions\"]);\n\n      var t = tFromContextAndProps || i18n.t.bind(i18n);\n      var reactI18nextOptions = i18n.options && i18n.options.react || {};\n      var useAsParent = parent !== undefined ? parent : reactI18nextOptions.defaultTransParent;\n      var defaultValue = defaults || nodesToString('', children, 0) || reactI18nextOptions.transEmptyNodeValue;\n      var hashTransKey = reactI18nextOptions.hashTransKey;\n      var key = i18nKey || (hashTransKey ? hashTransKey(defaultValue) : defaultValue);\n      var interpolationOverride = values ? {} : {\n        interpolation: {\n          prefix: '#$?',\n          suffix: '?$#'\n        }\n      };\n      var translation = key ? t(key, _objectSpread({}, tOptions, values, interpolationOverride, {\n        defaultValue: defaultValue,\n        count: count,\n        ns: namespace\n      })) : defaultValue;\n\n      if (reactI18nextOptions.exposeNamespace) {\n        var ns = typeof t.ns === 'string' ? t.ns : t.ns[0];\n\n        if (i18nKey && i18n.options && i18n.options.nsSeparator && i18nKey.indexOf(i18n.options.nsSeparator) > -1) {\n          var parts = i18nKey.split(i18n.options.nsSeparator);\n          ns = parts[0];\n        }\n\n        if (t.ns) additionalProps['data-i18next-options'] = JSON.stringify({\n          ns: ns\n        });\n      }\n\n      if (!useAsParent) return renderNodes(components || children, translation, i18n);\n      return React.createElement(useAsParent, additionalProps, renderNodes(components || children, translation, i18n));\n    }\n  }]);\n\n  return TransComponent;\n}(React.Component);\nexport var Trans = withI18n()(TransComponent);"]},"metadata":{},"sourceType":"module"}