{"ast":null,"code":"import { Container } from \"unstated\";\nimport instance from \"../helpers/axiosly\";\nimport { LOCAL_STORAGE_SIGNIN_KEY } from '../App.constants'; // Get token from local storage\n\nconst token = localStorage.getItem(\"token\");\n\nclass WritersContainer extends Container {\n  constructor() {\n    super();\n\n    this.getLibraryContent = (bearertoken, amount) => {\n      return new Promise((resolve, reject) => {\n        console.log(bearertoken);\n\n        try {\n          res = instance.get(`${process.env.REACT_APP_DATABASEURL}/library`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          }).then(res => {\n            var _res$data, _res$data$data;\n\n            console.log(res === null || res === void 0 ? void 0 : (_res$data = res.data) === null || _res$data === void 0 ? void 0 : (_res$data$data = _res$data.data) === null || _res$data$data === void 0 ? void 0 : _res$data$data.rows); // this.setState({\n            //   ...state,\n            //   library: res.data.data.rows,\n            // //   loading: false\n            // });\n          }).catch(e => {\n            console.log(e);\n          });\n        } catch (e) {\n          console.log(e);\n        }\n      });\n    };\n\n    this.state = {\n      sessionData: {\n        library: ''\n      }\n    };\n  } //Function to request withdrawal by the writer\n\n\n}\n\nexport { WritersContainer };","map":{"version":3,"sources":["/Users/mac/writingPlatform/src/containers/WritersContainer.js"],"names":["Container","instance","LOCAL_STORAGE_SIGNIN_KEY","token","localStorage","getItem","WritersContainer","constructor","getLibraryContent","bearertoken","amount","Promise","resolve","reject","console","log","res","get","process","env","REACT_APP_DATABASEURL","headers","Authorization","then","data","rows","catch","e","state","sessionData","library"],"mappings":"AAAA,SAASA,SAAT,QAA0B,UAA1B;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,SAASC,wBAAT,QAAyC,kBAAzC,C,CAEA;;AACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;;AAEA,MAAMC,gBAAN,SAA+BN,SAA/B,CAAyC;AACvCO,EAAAA,WAAW,GAAG;AACZ;;AADY,SAWhBC,iBAXgB,GAWI,CAACC,WAAD,EAAcC,MAAd,KAAyB;AAC7C,aAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCC,QAAAA,OAAO,CAACC,GAAR,CAAYN,WAAZ;;AACA,YAAI;AACHO,UAAAA,GAAG,GAAGf,QAAQ,CACVgB,GADE,CACG,GAAEC,OAAO,CAACC,GAAR,CAAYC,qBAAsB,UADvC,EACkD;AACnDC,YAAAA,OAAO,EAAE;AACPC,cAAAA,aAAa,EAAG,UAASnB,KAAM;AADxB;AAD0C,WADlD,EAMFoB,IANE,CAMIP,GAAD,IAAS;AAAA;;AACbF,YAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ,aAAYA,GAAZ,oCAAYA,GAAG,CAAEQ,IAAjB,gEAAY,UAAWA,IAAvB,mDAAY,eAAiBC,IAA7B,EADa,CAEb;AACA;AACA;AACA;AACA;AACD,WAbE,EAcFC,KAdE,CAcKC,CAAD,IAAO;AACVb,YAAAA,OAAO,CAACC,GAAR,CAAYY,CAAZ;AACH,WAhBE,CAAN;AAkBA,SAnBD,CAmBE,OAAOA,CAAP,EAAU;AACVb,UAAAA,OAAO,CAACC,GAAR,CAAYY,CAAZ;AACD;AAGF,OA1BM,CAAP;AA2BC,KAvCe;;AAEZ,SAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE;AACXC,QAAAA,OAAO,EAAC;AADG;AADF,KAAb;AAKD,GARsC,CAUzC;;;AAVyC;;AA2CzC,SAASxB,gBAAT","sourcesContent":["import { Container } from \"unstated\";\nimport instance from \"../helpers/axiosly\";\nimport { LOCAL_STORAGE_SIGNIN_KEY } from '../App.constants'\n\n// Get token from local storage\nconst token = localStorage.getItem(\"token\");\n\nclass WritersContainer extends Container {\n  constructor() {\n    super();\n    this.state = {\n      sessionData: {\n        library:''\n      },\n    };\n  }\n\n//Function to request withdrawal by the writer\n\ngetLibraryContent = (bearertoken, amount) => {\nreturn new Promise((resolve, reject) => {\n  console.log(bearertoken)\n  try {\n   res = instance\n      .get(`${process.env.REACT_APP_DATABASEURL}/library`, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      })\n      .then((res) => {\n        console.log(res?.data?.data?.rows)\n        // this.setState({\n        //   ...state,\n        //   library: res.data.data.rows,\n        // //   loading: false\n        // });\n      })\n      .catch((e) => {\n          console.log(e)\n      })\n      \n  } catch (e) {\n    console.log(e);\n  }\n  \n\n})\n}\n\n}\nexport { WritersContainer };\n\n\n\n"]},"metadata":{},"sourceType":"module"}