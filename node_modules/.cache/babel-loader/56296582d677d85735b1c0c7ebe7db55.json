{"ast":null,"code":"import { Container } from \"unstated\";\nimport instance from \"../helpers/axiosly\";\nimport { LOCAL_STORAGE_SIGNIN_KEY } from '../App.constants'; // Get token from local storage\n\nconst token = localStorage.getItem(\"token\");\n\nclass WritersContainer extends Container {\n  constructor() {\n    super();\n\n    this.getLibraryContent = (bearertoken, amount) => {\n      return new Promise((resolve, reject) => {\n        console.log(bearertoken);\n\n        try {\n          instance.get(`${process.env.REACT_APP_DATABASEURL}library`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          }).then(res => {\n            var _res$data, _res$data$data;\n\n            console.log(res === null || res === void 0 ? void 0 : (_res$data = res.data) === null || _res$data === void 0 ? void 0 : (_res$data$data = _res$data.data) === null || _res$data$data === void 0 ? void 0 : _res$data$data.rows); // this.setState({\n            //   ...state,\n            //   library: res.data.data.rows,\n            // //   loading: false\n            // });\n          }).catch(e => {\n            console.log(e);\n          });\n        } catch (e) {\n          console.log(e);\n        }\n      });\n    };\n\n    this.getWritersAccountBalance = id => {\n      return new Promise((resolve, reject) => {\n        console.log(id);\n        console.log(token);\n\n        try {\n          instance.get(`${process.env.REACT_APP_DATABASEURL}user/${id}/balance`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          }).then(res => {\n            console.log(res);\n            this.setState({\n              accountDetails: res === null || res === void 0 ? void 0 : res.data //   loading: false\n\n            }); // return res\n          }).catch(e => {\n            console.log(e);\n          });\n        } catch (e) {\n          console.log(e);\n        }\n      });\n    };\n\n    this.state = {\n      sessionData: {\n        library: '',\n        accountDetails: null\n      }\n    };\n  } //Function to request withdrawal by the writer\n\n\n}\n\nexport { WritersContainer };","map":{"version":3,"sources":["/Users/mac/writingPlatform/src/containers/WritersContainer.js"],"names":["Container","instance","LOCAL_STORAGE_SIGNIN_KEY","token","localStorage","getItem","WritersContainer","constructor","getLibraryContent","bearertoken","amount","Promise","resolve","reject","console","log","get","process","env","REACT_APP_DATABASEURL","headers","Authorization","then","res","data","rows","catch","e","getWritersAccountBalance","id","setState","accountDetails","state","sessionData","library"],"mappings":"AAAA,SAASA,SAAT,QAA0B,UAA1B;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,SAASC,wBAAT,QAAyC,kBAAzC,C,CAEA;;AACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;;AAEA,MAAMC,gBAAN,SAA+BN,SAA/B,CAAyC;AACvCO,EAAAA,WAAW,GAAG;AACZ;;AADY,SAWhBC,iBAXgB,GAWI,CAACC,WAAD,EAAcC,MAAd,KAAyB;AAC7C,aAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCC,QAAAA,OAAO,CAACC,GAAR,CAAYN,WAAZ;;AACA,YAAI;AACAR,UAAAA,QAAQ,CACPe,GADD,CACM,GAAEC,OAAO,CAACC,GAAR,CAAYC,qBAAsB,SAD1C,EACoD;AAClDC,YAAAA,OAAO,EAAE;AACPC,cAAAA,aAAa,EAAG,UAASlB,KAAM;AADxB;AADyC,WADpD,EAMCmB,IAND,CAMOC,GAAD,IAAS;AAAA;;AACbT,YAAAA,OAAO,CAACC,GAAR,CAAYQ,GAAZ,aAAYA,GAAZ,oCAAYA,GAAG,CAAEC,IAAjB,gEAAY,UAAWA,IAAvB,mDAAY,eAAiBC,IAA7B,EADa,CAEb;AACA;AACA;AACA;AACA;AACD,WAbD,EAcCC,KAdD,CAcQC,CAAD,IAAO;AACVb,YAAAA,OAAO,CAACC,GAAR,CAAYY,CAAZ;AACH,WAhBD;AAkBH,SAnBD,CAmBE,OAAOA,CAAP,EAAU;AACVb,UAAAA,OAAO,CAACC,GAAR,CAAYY,CAAZ;AACD;AAGF,OA1BM,CAAP;AA2BC,KAvCe;;AAAA,SAoDhBC,wBApDgB,GAoDYC,EAAD,IAAQ;AACjC,aAAO,IAAIlB,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCC,QAAAA,OAAO,CAACC,GAAR,CAAYc,EAAZ;AACAf,QAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAZ;;AAEA,YAAI;AACAF,UAAAA,QAAQ,CACPe,GADD,CACM,GAAEC,OAAO,CAACC,GAAR,CAAYC,qBAAsB,QAAOU,EAAG,UADpD,EAC+D;AAC7DT,YAAAA,OAAO,EAAE;AACPC,cAAAA,aAAa,EAAG,UAASlB,KAAM;AADxB;AADoD,WAD/D,EAMCmB,IAND,CAMOC,GAAD,IAAS;AACbT,YAAAA,OAAO,CAACC,GAAR,CAAYQ,GAAZ;AACA,iBAAKO,QAAL,CAAc;AACZC,cAAAA,cAAc,EAAER,GAAF,aAAEA,GAAF,uBAAEA,GAAG,CAAEC,IADT,CAEd;;AAFc,aAAd,EAFa,CAMb;AACD,WAbD,EAcCE,KAdD,CAcQC,CAAD,IAAO;AACVb,YAAAA,OAAO,CAACC,GAAR,CAAYY,CAAZ;AACH,WAhBD;AAkBH,SAnBD,CAmBE,OAAOA,CAAP,EAAU;AACVb,UAAAA,OAAO,CAACC,GAAR,CAAYY,CAAZ;AACD;AAGF,OA5BM,CAAP;AA6BC,KAlFa;;AAEZ,SAAKK,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE;AACXC,QAAAA,OAAO,EAAC,EADG;AAEXH,QAAAA,cAAc,EAAC;AAFJ;AADF,KAAb;AAMD,GATsC,CAWzC;;;AAXyC;;AAsFzC,SAASzB,gBAAT","sourcesContent":["import { Container } from \"unstated\";\nimport instance from \"../helpers/axiosly\";\nimport { LOCAL_STORAGE_SIGNIN_KEY } from '../App.constants'\n\n// Get token from local storage\nconst token = localStorage.getItem(\"token\");\n\nclass WritersContainer extends Container {\n  constructor() {\n    super();\n    this.state = {\n      sessionData: {\n        library:'',\n        accountDetails:null\n      },\n    };\n  }\n\n//Function to request withdrawal by the writer\ngetLibraryContent = (bearertoken, amount) => {\nreturn new Promise((resolve, reject) => {\n  console.log(bearertoken)\n  try {\n      instance\n      .get(`${process.env.REACT_APP_DATABASEURL}library`, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      })\n      .then((res) => {\n        console.log(res?.data?.data?.rows)\n        // this.setState({\n        //   ...state,\n        //   library: res.data.data.rows,\n        // //   loading: false\n        // });\n      })\n      .catch((e) => {\n          console.log(e)\n      })\n      \n  } catch (e) {\n    console.log(e);\n  }\n  \n\n})\n}\n\n// Function to fetch project Assigned to writers\ngetWritersProjec\n\n// const res = await instance\n//         .get(`${process.env.REACT_APP_DATABASEURL}project`, {\n//           headers: {\n//             Authorization: `Bearer ${token}`,\n//           },\n//         })\n\n//Function to fetch writers wallet details\ngetWritersAccountBalance = (id) => {\n  return new Promise((resolve, reject) => {\n    console.log(id)\n    console.log(token)\n\n    try {\n        instance\n        .get(`${process.env.REACT_APP_DATABASEURL}user/${id}/balance`, {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        })\n        .then((res) => {\n          console.log(res)\n          this.setState({\n            accountDetails: res?.data,\n          //   loading: false\n          });\n          // return res\n        })\n        .catch((e) => {\n            console.log(e)\n        })\n        \n    } catch (e) {\n      console.log(e);\n    }\n    \n  \n  })\n  }\n\n}\nexport { WritersContainer };\n\n\n\n"]},"metadata":{},"sourceType":"module"}