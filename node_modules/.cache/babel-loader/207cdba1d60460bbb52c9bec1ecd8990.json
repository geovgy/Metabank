{"ast":null,"code":"import _regeneratorRuntime from\"/Users/mac/writingPlatform/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/mac/writingPlatform/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _objectSpread from\"/Users/mac/writingPlatform/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/mac/writingPlatform/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import{Card,CardBody,CardTitle,Badge,Button}from\"reactstrap\";import{Link}from\"react-router-dom\";import instance from\"../../../helpers/axiosly\";import stateWrapper from\"../../../containers/provider\";import{withNamespaces}from\"react-i18next\";import Moment from\"react-moment\";var ExamList=function ExamList(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),exams=_useState2[0],setExams=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),examId=_useState4[0],setexamId=_useState4[1];var _useState5=useState({loading:false,disableBtn:false}),_useState6=_slicedToArray(_useState5,2),state=_useState6[0],setState=_useState6[1];useEffect(function(){setState(_objectSpread(_objectSpread({},state),{},{loading:true}));function fetchData(){return _fetchData.apply(this,arguments);}function _fetchData(){_fetchData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var token,res,userData,result;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;token=localStorage.getItem(\"token\");_context.next=4;return instance.get(\"\".concat(process.env.REACT_APP_DATABASEURL,\"/exam\"),{headers:{Authorization:\"Bearer \".concat(token)}});case 4:res=_context.sent;setState(_objectSpread(_objectSpread({},state),{},{loading:false}));setExams(res.data.data);userData=props.userStore.fetchUser(props);_context.next=10;return instance.get(\"\".concat(process.env.REACT_APP_DATABASEURL,\"/exam/user/\").concat(userData.id),{headers:{Authorization:\"Bearer \".concat(token)}});case 10:result=_context.sent;setexamId(result.data.data.exam.id);if(result.data.data.score){setState(_objectSpread(_objectSpread({},state),{},{disableBtn:true}));}_context.next=18;break;case 15:_context.prev=15;_context.t0=_context[\"catch\"](0);console.log(_context.t0);case 18:case\"end\":return _context.stop();}}},_callee,null,[[0,15]]);}));return _fetchData.apply(this,arguments);}fetchData();//eslint-disable-line\n},[]);console.log(exams);console.log(examId);return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(CardTitle,{className:\"mb-4\"},\"ALL EXAMS\"),state.loading?/*#__PURE__*/React.createElement(\"div\",{class:\"spinner-border\",role:\"status\"},/*#__PURE__*/React.createElement(\"span\",{class:\"sr-only\"},\"Loading...\")):/*#__PURE__*/React.createElement(\"div\",{className:\"table-responsive\"},/*#__PURE__*/React.createElement(\"table\",{className:\"table table-centered table-nowrap mb-0\"},/*#__PURE__*/React.createElement(\"thead\",{className:\"thead-light\"},/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",{style:{width:\"20px\"}},/*#__PURE__*/React.createElement(\"div\",{className:\"custom-control custom-checkbox\"},/*#__PURE__*/React.createElement(\"input\",{type:\"checkbox\",className:\"custom-control-input\",id:\"customCheck1\"}),/*#__PURE__*/React.createElement(\"label\",{className:\"custom-control-label\",htmlFor:\"customCheck1\"},\"\\xA0\"))),/*#__PURE__*/React.createElement(\"th\",null,\"Exams\"),/*#__PURE__*/React.createElement(\"th\",null,\"Created\"),/*#__PURE__*/React.createElement(\"th\",null,\"Updated\"),/*#__PURE__*/React.createElement(\"th\",null,\" \"))),/*#__PURE__*/React.createElement(\"tbody\",null,exams&&exams.map(function(exam,key){return exam?/*#__PURE__*/React.createElement(\"tr\",{key:\"_tr_\"+key},/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"custom-control custom-checkbox\"},/*#__PURE__*/React.createElement(\"input\",{type:\"checkbox\",className:\"custom-control-input\",id:exam.id}),/*#__PURE__*/React.createElement(\"label\",{className:\"custom-control-label\",htmlFor:exam.id},\"\\xA0\"))),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(Link,{to:\"#\",className:\"text-body font-weight-bold\"},\" \",exam.name,\" \"),\" \"),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(Moment,{format:\"YYYY/MM/DD\"},exam.createdAt)),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(Moment,{format:\"YYYY/MM/DD\"},exam.updatedAt)),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(Link,{to:\"/wquestion/\"+exam.id},/*#__PURE__*/React.createElement(Button,{color:\"primary\",className:\"btn btn-primary waves-effect waves-light mx-2\",disabled:exam.id==examId?'true':''},\" \",\"Questions\")))):'';})))))));};export default withNamespaces()(stateWrapper(ExamList));","map":{"version":3,"sources":["/Users/mac/writingPlatform/src/pages/Writer/Exam/ExamList.js"],"names":["React","useEffect","useState","Card","CardBody","CardTitle","Badge","Button","Link","instance","stateWrapper","withNamespaces","Moment","ExamList","props","exams","setExams","examId","setexamId","loading","disableBtn","state","setState","fetchData","token","localStorage","getItem","get","process","env","REACT_APP_DATABASEURL","headers","Authorization","res","data","userData","userStore","fetchUser","id","result","exam","score","console","log","width","map","key","name","createdAt","updatedAt"],"mappings":"gkBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,IAAT,CAAeC,QAAf,CAAyBC,SAAzB,CAAoCC,KAApC,CAA2CC,MAA3C,KAAyD,YAAzD,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,MAAOC,CAAAA,QAAP,KAAqB,0BAArB,CACA,MAAOC,CAAAA,YAAP,KAAyB,8BAAzB,CACA,OAASC,cAAT,KAA+B,eAA/B,CACA,MAAOC,CAAAA,MAAP,KAAmB,cAAnB,CAIA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAW,eAEDZ,QAAQ,CAAC,EAAD,CAFP,wCAEpBa,KAFoB,eAEbC,QAFa,8BAGEd,QAAQ,CAAC,CAAD,CAHV,yCAGnBe,MAHmB,eAGXC,SAHW,8BAIDhB,QAAQ,CAAC,CAChCiB,OAAO,CAAE,KADuB,CAEhCC,UAAU,CAAE,KAFoB,CAAD,CAJP,yCAIpBC,KAJoB,eAIbC,QAJa,eAS1BrB,SAAS,CAAC,UAAM,CACdqB,QAAQ,gCAAKD,KAAL,MAAYF,OAAO,CAAE,IAArB,GAAR,CADc,QAGCI,CAAAA,SAHD,qIAGd,iLAEQC,KAFR,CAEgBC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAFhB,uBAGoBjB,CAAAA,QAAQ,CACvBkB,GADe,WACRC,OAAO,CAACC,GAAR,CAAYC,qBADJ,UACkC,CAChDC,OAAO,CAAE,CACPC,aAAa,kBAAYR,KAAZ,CADN,CADuC,CADlC,CAHpB,QAGQS,GAHR,eASIX,QAAQ,gCAAKD,KAAL,MAAYF,OAAO,CAAE,KAArB,GAAR,CACAH,QAAQ,CAACiB,GAAG,CAACC,IAAJ,CAASA,IAAV,CAAR,CAEIC,QAZR,CAYmBrB,KAAK,CAACsB,SAAN,CAAgBC,SAAhB,CAA0BvB,KAA1B,CAZnB,wBAcyBL,CAAAA,QAAQ,CAC5BkB,GADoB,WACbC,OAAO,CAACC,GAAR,CAAYC,qBADC,uBACkCK,QAAQ,CAACG,EAD3C,EACiD,CACpEP,OAAO,CAAE,CACPC,aAAa,kBAAYR,KAAZ,CADN,CAD2D,CADjD,CAdzB,SAcUe,MAdV,eAoBIrB,SAAS,CAACqB,MAAM,CAACL,IAAP,CAAYA,IAAZ,CAAiBM,IAAjB,CAAsBF,EAAvB,CAAT,CACA,GAAGC,MAAM,CAACL,IAAP,CAAYA,IAAZ,CAAiBO,KAApB,CAA0B,CACxBnB,QAAQ,gCAAKD,KAAL,MAAYD,UAAU,CAAE,IAAxB,GAAR,CACD,CAvBL,iFA0BEsB,OAAO,CAACC,GAAR,cA1BF,qEAHc,4CAgCdpB,SAAS,GACT;AACD,CAlCQ,CAkCN,EAlCM,CAAT,CAoCAmB,OAAO,CAACC,GAAR,CAAY5B,KAAZ,EACA2B,OAAO,CAACC,GAAR,CAAY1B,MAAZ,EAEA,mBACE,oBAAC,KAAD,CAAO,QAAP,mBAEE,oBAAC,IAAD,mBACE,oBAAC,QAAD,mBACE,oBAAC,SAAD,EAAW,SAAS,CAAC,MAArB,cADF,CAEGI,KAAK,CAACF,OAAN,cAAiB,2BAAK,KAAK,CAAC,gBAAX,CAA4B,IAAI,CAAC,QAAjC,eACtB,4BAAM,KAAK,CAAC,SAAZ,eADsB,CAAjB,cAGF,2BAAK,SAAS,CAAC,kBAAf,eACA,6BAAO,SAAS,CAAC,wCAAjB,eACE,6BAAO,SAAS,CAAC,aAAjB,eACE,2CACE,0BAAI,KAAK,CAAE,CAAEyB,KAAK,CAAE,MAAT,CAAX,eACE,2BAAK,SAAS,CAAC,gCAAf,eACE,6BACE,IAAI,CAAC,UADP,CAEE,SAAS,CAAC,sBAFZ,CAGE,EAAE,CAAC,cAHL,EADF,cAME,6BACE,SAAS,CAAC,sBADZ,CAEE,OAAO,CAAC,cAFV,SANF,CADF,CADF,cAgBE,sCAhBF,cAiBE,wCAjBF,cAkBE,wCAlBF,cAmBE,8BAAK,GAAL,CAnBF,CADF,CADF,cAwBE,iCACG7B,KAAK,EAAIA,KAAK,CAAC8B,GAAN,CAAU,SAACL,IAAD,CAAOM,GAAP,QAAgBN,CAAAA,IAAI,cAEzC,0BAAI,GAAG,CAAE,OAASM,GAAlB,eACA,2CACE,2BAAK,SAAS,CAAC,gCAAf,eACE,6BACE,IAAI,CAAC,UADP,CAEE,SAAS,CAAC,sBAFZ,CAGE,EAAE,CAAEN,IAAI,CAACF,EAHX,EADF,cAME,6BACE,SAAS,CAAC,sBADZ,CAEE,OAAO,CAAEE,IAAI,CAACF,EAFhB,SANF,CADF,CADA,cAgBA,2CACE,oBAAC,IAAD,EAAM,EAAE,CAAC,GAAT,CAAa,SAAS,CAAC,4BAAvB,EACG,GADH,CAEGE,IAAI,CAACO,IAFR,CAEc,GAFd,CADF,CAIU,GAJV,CAhBA,cAsBA,2CAAI,oBAAC,MAAD,EAAQ,MAAM,CAAC,YAAf,EAA6BP,IAAI,CAACQ,SAAlC,CAAJ,CAtBA,cAuBA,2CAAI,oBAAC,MAAD,EAAQ,MAAM,CAAC,YAAf,EAA6BR,IAAI,CAACS,SAAlC,CAAJ,CAvBA,cAwBA,2CAEG,oBAAC,IAAD,EAAM,EAAE,CAAE,cAAgBT,IAAI,CAACF,EAA/B,eACE,oBAAC,MAAD,EACA,KAAK,CAAC,SADN,CAEA,SAAS,CAAC,+CAFV,CAGA,QAAQ,CAAEE,IAAI,CAACF,EAAL,EAAWrB,MAAX,CAAoB,MAApB,CAA4B,EAHtC,EAKC,GALD,aADF,CAFH,CAxBA,CAFyC,CA0CnC,EA1Ce,EAAV,CADZ,CAxBF,CADA,CALD,CADF,CAFF,CADF,CA6FD,CA7ID,CAiJA,cAAgBN,CAAAA,cAAc,GAAGD,YAAY,CAACG,QAAD,CAAf,CAA9B","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Card, CardBody, CardTitle, Badge, Button } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport instance from \"../../../helpers/axiosly\";\nimport stateWrapper from \"../../../containers/provider\";\nimport { withNamespaces } from \"react-i18next\";\nimport Moment from \"react-moment\";\n\n\n\nconst ExamList = (props) => {\n\n  const[exams, setExams] = useState([]);\n  const [examId, setexamId] = useState(0)\n  const[state, setState] = useState({\n    loading: false,\n    disableBtn: false\n  })\n\n  useEffect(() => {\n    setState({...state, loading: true})\n\n    async function fetchData(){\n    try {\n      const token = localStorage.getItem(\"token\")\n      const res = await instance\n        .get(`${process.env.REACT_APP_DATABASEURL}/exam`, {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        })\n        setState({...state, loading: false})\n        setExams(res.data.data)\n\n        let userData = props.userStore.fetchUser(props);\n\n        const result = await instance\n        .get(`${process.env.REACT_APP_DATABASEURL}/exam/user/${userData.id}`, {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        })\n        setexamId(result.data.data.exam.id)\n        if(result.data.data.score){\n          setState({...state, disableBtn: true})\n        }\n\n    } catch (e) {\n      console.log(e);\n    }\n    }\n    fetchData();\n    //eslint-disable-line\n  }, [])\n\n  console.log(exams)\n  console.log(examId)\n\n  return (\n    <React.Fragment>\n\n      <Card>\n        <CardBody>\n          <CardTitle className=\"mb-4\">ALL EXAMS</CardTitle>\n          {state.loading ? (<div class=\"spinner-border\" role=\"status\">\n      <span class=\"sr-only\">Loading...</span>\n      </div>) : (\n         <div className=\"table-responsive\">\n         <table className=\"table table-centered table-nowrap mb-0\">\n           <thead className=\"thead-light\">\n             <tr>\n               <th style={{ width: \"20px\" }}>\n                 <div className=\"custom-control custom-checkbox\">\n                   <input\n                     type=\"checkbox\"\n                     className=\"custom-control-input\"\n                     id=\"customCheck1\"\n                   />\n                   <label\n                     className=\"custom-control-label\"\n                     htmlFor=\"customCheck1\"\n                   >\n                     &nbsp;\n                   </label>\n                 </div>\n               </th>\n               <th>Exams</th>\n               <th>Created</th>\n               <th>Updated</th>\n               <th>{\" \"}</th>\n             </tr>\n           </thead>\n           <tbody>\n             {exams && exams.map((exam, key) => (exam ? (\n            \n            <tr key={\"_tr_\" + key}>\n            <td>\n              <div className=\"custom-control custom-checkbox\">\n                <input\n                  type=\"checkbox\"\n                  className=\"custom-control-input\"\n                  id={exam.id}\n                />\n                <label\n                  className=\"custom-control-label\"\n                  htmlFor={exam.id}\n                >\n                  &nbsp;\n                </label>\n              </div>\n            </td>\n            <td>\n              <Link to=\"#\" className=\"text-body font-weight-bold\">\n                {\" \"}\n                {exam.name}{\" \"}\n              </Link>{\" \"}\n            </td>\n            <td><Moment format=\"YYYY/MM/DD\">{exam.createdAt}</Moment></td>\n            <td><Moment format=\"YYYY/MM/DD\">{exam.updatedAt}</Moment></td>\n            <td>\n\n               <Link to={\"/wquestion/\" + exam.id}>\n                 <Button\n                 color=\"primary\"\n                 className=\"btn btn-primary waves-effect waves-light mx-2\"\n                 disabled={exam.id == examId ? 'true': ''}\n                     >\n                 {\" \"}\n                 Questions\n                 </Button>\n                 </Link>\n\n             </td>\n          </tr>\n       \n             ) : ('')))}\n             {/* {exams && exams.map((exam, key) => (\n\n              // {exam.id}\n              \n              \n            ))} */}\n           </tbody>\n         </table>\n       </div>\n      )}\n\n        </CardBody>\n      </Card>\n    </React.Fragment>\n  );\n};\n\n\n\nexport default (withNamespaces()(stateWrapper(ExamList)));\n"]},"metadata":{},"sourceType":"module"}