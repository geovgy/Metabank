{"ast":null,"code":"import { takeEvery, fork, put, all, call } from \"redux-saga/effects\"; // Login Redux States\n\nimport { FORGET_PASSWORD } from \"./actionTypes\";\nimport { userForgetPasswordSuccess, userForgetPasswordError } from \"./actions\"; //Include Both Helper File with needed methods\n\nimport { getFirebaseBackend } from \"../../../helpers/firebase_helper\";\nimport { postFakeForgetPwd, postJwtForgetPwd } from '../../../helpers/fakebackend_helper';\nconst fireBaseBackend = getFirebaseBackend(); //If user is send successfully send mail link then dispatch redux action's are directly from here.\n\nfunction* forgetUser({\n  payload: {\n    user,\n    history\n  }\n}) {\n  try {\n    if (process.env.REACT_APP_DEFAULTAUTH === \"firebase\") {\n      const response = yield call(fireBaseBackend.forgetPassword, user.email);\n\n      if (response) {\n        yield put(userForgetPasswordSuccess(\"Reset link are sended to your mailbox, check there first\"));\n      }\n    } else if (process.env.REACT_APP_DEFAULTAUTH === \"jwt\") {\n      const response = yield call(postJwtForgetPwd, '/jwt-forget-pwd', {\n        email: user.email\n      });\n\n      if (response) {\n        yield put(userForgetPasswordSuccess(\"Reset link are sended to your mailbox, check there first\"));\n      }\n    } else {\n      const response = yield call(postFakeForgetPwd, '/fake-forget-pwd', {\n        email: user.email\n      });\n\n      if (response) {\n        yield put(userForgetPasswordSuccess(\"Reset link are sended to your mailbox, check there first\"));\n      }\n    }\n  } catch (error) {\n    yield put(userForgetPasswordError(error));\n  }\n}\n\nexport function* watchUserPasswordForget() {\n  yield takeEvery(FORGET_PASSWORD, forgetUser);\n}\n\nfunction* forgetPasswordSaga() {\n  yield all([fork(watchUserPasswordForget)]);\n}\n\nexport default forgetPasswordSaga;","map":{"version":3,"sources":["/Users/mac/metabank/src/store/auth/forgetpwd/saga.js"],"names":["takeEvery","fork","put","all","call","FORGET_PASSWORD","userForgetPasswordSuccess","userForgetPasswordError","getFirebaseBackend","postFakeForgetPwd","postJwtForgetPwd","fireBaseBackend","forgetUser","payload","user","history","process","env","REACT_APP_DEFAULTAUTH","response","forgetPassword","email","error","watchUserPasswordForget","forgetPasswordSaga"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,EAA+BC,GAA/B,EAAoCC,IAApC,QAAgD,oBAAhD,C,CAEA;;AACA,SAASC,eAAT,QAAgC,eAAhC;AACA,SAASC,yBAAT,EAAoCC,uBAApC,QAAmE,WAAnE,C,CAEA;;AACA,SAASC,kBAAT,QAAmC,kCAAnC;AACA,SAASC,iBAAT,EAA4BC,gBAA5B,QAAoD,qCAApD;AAGA,MAAMC,eAAe,GAAGH,kBAAkB,EAA1C,C,CAEA;;AACA,UAAUI,UAAV,CAAqB;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR;AAAX,CAArB,EAAqD;AACnD,MAAI;AACJ,QAAGC,OAAO,CAACC,GAAR,CAAYC,qBAAZ,KAAsC,UAAzC,EACQ;AACG,YAAMC,QAAQ,GAAG,MAAMf,IAAI,CAACO,eAAe,CAACS,cAAjB,EAAiCN,IAAI,CAACO,KAAtC,CAA3B;;AACA,UAAIF,QAAJ,EAAc;AACb,cAAMjB,GAAG,CACPI,yBAAyB,CACvB,0DADuB,CADlB,CAAT;AAKD;AACF,KAVT,MAWa,IAAGU,OAAO,CAACC,GAAR,CAAYC,qBAAZ,KAAsC,KAAzC,EACL;AACG,YAAMC,QAAQ,GAAG,MAAMf,IAAI,CAACM,gBAAD,EAAmB,iBAAnB,EAAsC;AAACW,QAAAA,KAAK,EAAEP,IAAI,CAACO;AAAb,OAAtC,CAA3B;;AACC,UAAIF,QAAJ,EAAc;AACd,cAAMjB,GAAG,CACPI,yBAAyB,CACvB,0DADuB,CADlB,CAAT;AAKD;AACF,KAVI,MAYL;AACG,YAAMa,QAAQ,GAAG,MAAMf,IAAI,CAACK,iBAAD,EAAoB,kBAApB,EAAwC;AAACY,QAAAA,KAAK,EAAEP,IAAI,CAACO;AAAb,OAAxC,CAA3B;;AACC,UAAIF,QAAJ,EAAc;AACd,cAAMjB,GAAG,CACPI,yBAAyB,CACvB,0DADuB,CADlB,CAAT;AAKD;AAEF;AACR,GAnCD,CAmCE,OAAOgB,KAAP,EAAc;AACd,UAAMpB,GAAG,CAACK,uBAAuB,CAACe,KAAD,CAAxB,CAAT;AACD;AACF;;AAED,OAAO,UAAUC,uBAAV,GAAoC;AACzC,QAAMvB,SAAS,CAACK,eAAD,EAAkBO,UAAlB,CAAf;AACD;;AAED,UAAUY,kBAAV,GAA+B;AAC7B,QAAMrB,GAAG,CAAC,CAACF,IAAI,CAACsB,uBAAD,CAAL,CAAD,CAAT;AACD;;AAED,eAAeC,kBAAf","sourcesContent":["import { takeEvery, fork, put, all, call } from \"redux-saga/effects\";\n\n// Login Redux States\nimport { FORGET_PASSWORD } from \"./actionTypes\";\nimport { userForgetPasswordSuccess, userForgetPasswordError } from \"./actions\";\n\n//Include Both Helper File with needed methods\nimport { getFirebaseBackend } from \"../../../helpers/firebase_helper\";\nimport { postFakeForgetPwd, postJwtForgetPwd } from '../../../helpers/fakebackend_helper';\n\n\nconst fireBaseBackend = getFirebaseBackend();\n\n//If user is send successfully send mail link then dispatch redux action's are directly from here.\nfunction* forgetUser({ payload: { user, history } }) {\n  try {\n  if(process.env.REACT_APP_DEFAULTAUTH === \"firebase\")\n          {\n             const response = yield call(fireBaseBackend.forgetPassword, user.email);\n             if (response) {\n              yield put(\n                userForgetPasswordSuccess(\n                  \"Reset link are sended to your mailbox, check there first\"\n                )\n              );\n            }\n          }\n          else if(process.env.REACT_APP_DEFAULTAUTH === \"jwt\")\n          {\n             const response = yield call(postJwtForgetPwd, '/jwt-forget-pwd', {email: user.email});\n              if (response) {\n              yield put(\n                userForgetPasswordSuccess(\n                  \"Reset link are sended to your mailbox, check there first\"\n                )\n              );\n            }\n          }\n          else\n          {\n             const response = yield call(postFakeForgetPwd, '/fake-forget-pwd', {email: user.email});\n              if (response) {\n              yield put(\n                userForgetPasswordSuccess(\n                  \"Reset link are sended to your mailbox, check there first\"\n                )\n              );\n            }\n\n          }\n  } catch (error) {\n    yield put(userForgetPasswordError(error));\n  }\n}\n\nexport function* watchUserPasswordForget() {\n  yield takeEvery(FORGET_PASSWORD, forgetUser);\n}\n\nfunction* forgetPasswordSaga() {\n  yield all([fork(watchUserPasswordForget)]);\n}\n\nexport default forgetPasswordSaga;\n"]},"metadata":{},"sourceType":"module"}