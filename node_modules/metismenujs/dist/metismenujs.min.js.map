{"version":3,"sources":["../src/constant.ts","../src/util.ts","../src/index.ts"],"names":["Default","parentTrigger","subMenu","toggle","triggerElement","ClassName","ACTIVE","COLLAPSE","COLLAPSED","COLLAPSING","METIS","SHOW","matches","element","selector","webkitMatchesSelector","msMatchesSelector","call","closest","el","parentElement","MetisMenu","[object Object]","options","this","isElement","document","querySelector","config","Object","assign","disposed","triggerArr","init","opt","classList","add","slice","querySelectorAll","forEach","ul","li","contains","show","hide","a","getAttribute","setAttribute","addEventListener","clickEvent","bind","push","evt","target","currentTarget","tagName","preventDefault","arr","removeEventListener","evtType","handler","evtData","shouldBubble","CustomEvent","bubbles","detail","createEvent","initCustomEvent","dispatchEvent","isTransitioning","complete","remove","style","height","setTransitioning","emit","shownElement","eleParentSiblins","_a","parentNode","children","filter","c","length","sibli","sibUl","scrollHeight","showElement","hideElement","hiddenElement","getBoundingClientRect","offsetHeight","Boolean"],"mappings":"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","sourcesContent":["import { IMMOptions } from './interface';\n\nexport type MetisMenuEvents =\n  | 'show.metisMenu'\n  | 'shown.metisMenu'\n  | 'hide.metisMenu'\n  | 'hidden.metisMenu';\n\nexport const Default: IMMOptions = {\n  parentTrigger: 'li',\n  subMenu: 'ul',\n  toggle: true,\n  triggerElement: 'a',\n};\n\nexport const ClassName = {\n  ACTIVE: 'mm-active',\n  COLLAPSE: 'mm-collapse',\n  COLLAPSED: 'mm-collapsed',\n  COLLAPSING: 'mm-collapsing',\n  METIS: 'metismenu',\n  SHOW: 'mm-show',\n};\n","export function matches(element: Element, selector: string): boolean {\n  const nativeMatches = element.matches\n    || element.webkitMatchesSelector\n    || element.msMatchesSelector;\n  return nativeMatches.call(element, selector);\n}\n\nexport function closest(element: Element, selector: string): Element | null {\n  if (element.closest) {\n    return element.closest(selector);\n  }\n\n  let el: Element | null = element;\n  while (el) {\n    if (matches(el, selector)) {\n      return el;\n    }\n    el = el.parentElement;\n  }\n  return null;\n}\n","/* eslint-disable max-len */\nimport { ClassName, Default, MetisMenuEvents } from './constant';\nimport { IMMOptions } from './interface';\nimport { EventType, SpecificEventListener, CustomEventListener } from './types';\nimport { closest } from './util';\n\nclass MetisMenu {\n  protected config: IMMOptions;\n\n  protected element: Element;\n\n  protected isTransitioning!: boolean;\n\n  protected disposed: boolean;\n\n  protected triggerArr: Array<Element>;\n\n  /**\n   * Creates an instance of MetisMenu.\n   *\n   * @constructor\n   * @param {Element | string} element\n   * @param {IMMOptions} [options]\n   * @memberof MetisMenu\n   */\n\n  constructor(element: Element | string, options?: IMMOptions) {\n    this.element = MetisMenu.isElement(element) ? element : document.querySelector<HTMLElement>(element)!;\n    this.config = { ...Default, ...options };\n    this.disposed = false;\n    this.triggerArr = [];\n    this.init();\n  }\n\n  static attach(el: Element, opt?: IMMOptions) {\n    return new MetisMenu(el, opt);\n  }\n\n  private init(): void {\n    const { METIS, ACTIVE, COLLAPSE } = ClassName;\n    this.element.classList.add(METIS);\n\n    [].slice.call(this.element.querySelectorAll<HTMLElement>(this.config.subMenu!)).forEach((ul: Element) => {\n      ul.classList.add(COLLAPSE!);\n      const li = closest(ul, this.config.parentTrigger!);\n\n      if (li?.classList.contains(ACTIVE!)) {\n        this.show(ul as HTMLElement);\n      } else {\n        this.hide(ul);\n      }\n\n      const a = li?.querySelector<HTMLElement>(this.config.triggerElement!);\n      if (a?.getAttribute('aria-disabled') === 'true') {\n        return;\n      }\n\n      a?.setAttribute('aria-expanded', 'false');\n\n      a?.addEventListener('click', this.clickEvent.bind(this));\n      this.triggerArr.push(a!);\n    });\n  }\n\n  private clickEvent(evt?: Event) {\n    if (!this.disposed) {\n      const target = evt?.currentTarget as Element | null;\n      if (target && target.tagName === 'A') {\n        evt!.preventDefault();\n      }\n\n      const li = closest(target!, this.config.parentTrigger!);\n      const ul = li?.querySelector(this.config.subMenu!);\n      this.toggle(ul!);\n    }\n  }\n\n  update() {\n    this.disposed = false;\n    this.init();\n  }\n\n  dispose() {\n    this.triggerArr.forEach((arr) => {\n      arr.removeEventListener('click', this.clickEvent.bind(this));\n    });\n    this.disposed = true;\n  }\n\n  on<K extends EventType>(evtType: K, handler: SpecificEventListener<K>, options?: AddEventListenerOptions | boolean): MetisMenu;\n\n  on<E extends Event>(evtType: E, handler: CustomEventListener<E>, options?: AddEventListenerOptions | boolean): MetisMenu;\n\n  on(evtType: MetisMenuEvents, handler: EventListener, options?: AddEventListenerOptions | boolean) {\n    this.element.addEventListener(evtType, handler, options);\n    return this;\n  }\n\n  off<K extends EventType>(evtType: K, handler: SpecificEventListener<K>, options?: AddEventListenerOptions | boolean): MetisMenu;\n\n  off<E extends Event>(evtType: E, handler: CustomEventListener<E>, options?: AddEventListenerOptions | boolean): MetisMenu;\n\n  off(evtType: MetisMenuEvents, handler: EventListener, options?: AddEventListenerOptions | boolean) {\n    this.element.removeEventListener(evtType, handler, options);\n    return this;\n  }\n\n  emit<T extends object>(evtType: string, evtData: T, shouldBubble = false) {\n    let evt: CustomEvent<T>;\n    if (typeof CustomEvent === 'function') {\n      evt = new CustomEvent<T>(evtType, {\n        bubbles: shouldBubble,\n        detail: evtData,\n      });\n    } else {\n      evt = document.createEvent('CustomEvent');\n      evt.initCustomEvent(evtType, shouldBubble, false, evtData);\n    }\n    this.element.dispatchEvent(evt);\n    return this;\n  }\n\n  toggle(ul: Element) {\n    const li = closest(ul, this.config.parentTrigger!);\n    if (li?.classList.contains(ClassName.ACTIVE)) {\n      this.hide(ul);\n    } else {\n      this.show(ul);\n    }\n  }\n\n  show(el: Element) {\n    const ul = el as HTMLElement;\n    const {\n      ACTIVE, COLLAPSE, COLLAPSED, COLLAPSING, SHOW,\n    } = ClassName;\n\n    if (this.isTransitioning || ul.classList.contains(COLLAPSING!)) {\n      return;\n    }\n    const complete = () => {\n      ul.classList.remove(COLLAPSING!);\n      ul.style.height = '';\n      ul.removeEventListener('transitionend', complete);\n      this.setTransitioning(false);\n      this.emit('shown.metisMenu', {\n        shownElement: ul,\n      });\n    };\n\n    const li = closest(ul, this.config.parentTrigger!);\n    li?.classList.add(ACTIVE!);\n\n    const a = li?.querySelector<HTMLElement>(this.config.triggerElement!);\n    a?.setAttribute('aria-expanded', 'true');\n    a?.classList.remove(COLLAPSED!);\n\n    ul.style.height = '0px';\n    ul.classList.remove(COLLAPSE!);\n    ul.classList.remove(SHOW!);\n    ul.classList.add(COLLAPSING!);\n    const eleParentSiblins = [].slice\n      .call(li?.parentNode?.children)\n      .filter((c) => c !== li);\n    if (this.config.toggle && eleParentSiblins.length > 0) {\n      eleParentSiblins.forEach((sibli: Element) => {\n        const sibUl = sibli.querySelector<HTMLElement>(this.config.subMenu!);\n        if (sibUl) {\n          this.hide(sibUl);\n        }\n      });\n    }\n\n    this.setTransitioning(true);\n\n    ul.classList.add(COLLAPSE!);\n    ul.classList.add(SHOW!);\n    ul.style.height = `${ul.scrollHeight}px`;\n    this.emit('show.metisMenu', {\n      showElement: ul,\n    });\n    ul.addEventListener('transitionend', complete);\n  }\n\n  hide(el: Element) {\n    const {\n      ACTIVE, COLLAPSE, COLLAPSED, COLLAPSING, SHOW,\n    } = ClassName;\n    const ul = el as HTMLElement;\n    if (this.isTransitioning || !ul.classList.contains(SHOW!)) {\n      return;\n    }\n    this.emit('hide.metisMenu', {\n      hideElement: ul,\n    });\n\n    const li = closest(ul, this.config.parentTrigger!);\n    li?.classList.remove(ACTIVE!);\n\n    const complete = () => {\n      ul.classList.remove(COLLAPSING!);\n      ul.classList.add(COLLAPSE!);\n      ul.style.height = '';\n      ul.removeEventListener('transitionend', complete);\n      this.setTransitioning(false);\n      this.emit('hidden.metisMenu', {\n        hiddenElement: ul,\n      });\n    };\n\n    ul.style.height = `${ul.getBoundingClientRect().height}px`;\n    ul.style.height = `${ul.offsetHeight}px`;\n\n    ul.classList.add(COLLAPSING!);\n    ul.classList.remove(COLLAPSE!);\n    ul.classList.remove(SHOW!);\n    this.setTransitioning(true);\n\n    ul.addEventListener('transitionend', complete);\n\n    ul.style.height = '0px';\n\n    const a = li?.querySelector(this.config.triggerElement!);\n    a?.setAttribute('aria-expanded', 'false');\n    a?.classList.add(COLLAPSED!);\n  }\n\n  private setTransitioning(isTransitioning: boolean) {\n    this.isTransitioning = isTransitioning;\n  }\n\n  static isElement(element: unknown): element is Element {\n    return Boolean((element as Element).classList);\n  }\n}\n\nexport default MetisMenu;\n"]}