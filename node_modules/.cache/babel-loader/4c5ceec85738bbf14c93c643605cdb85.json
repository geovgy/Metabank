{"ast":null,"code":"import _toConsumableArray from\"/Users/mac/writingPlatform/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/mac/writingPlatform/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState,useRef}from\"react\";import{Container,Row,Col,Card,CardBody,Label,CardTitle,Input,Form,FormGroup,CustomInput,ListGroup,ListGroupItem,ButtonGroup,Button,Jumbotron,Progress}from\"reactstrap\";import{Link}from\"react-router-dom\";import instance from\"../../../helpers/axiosly\";import stateWrapper from\"../../../containers/provider\";import{withNamespaces}from\"react-i18next\";import Moment from'react-moment';import AvForm from\"availity-reactstrap-validation/lib/AvForm\";var Question=function Question(_ref){var data=_ref.data,onAnswerUpdate=_ref.onAnswerUpdate,numberOfQuestion=_ref.numberOfQuestion,activeQuestion=_ref.activeQuestion,onSetActiveQuestion=_ref.onSetActiveQuestion,onSetStep=_ref.onSetStep,setShowPrev=_ref.setShowPrev;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),selected=_useState2[0],setSelected=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),error=_useState4[0],setError=_useState4[1];var radioWrapper=useRef();var changeHandler=function changeHandler(e){setSelected(e.target.value);if(error){setError('');}};var nextClickHandler=function nextClickHandler(e){if(selected===''){return setError('Please select one option');}onAnswerUpdate(function(prevState){return[].concat(_toConsumableArray(prevState),[{q:data.question,a:selected,s:data.score}]);});setSelected('');if(activeQuestion<numberOfQuestion-1){onSetActiveQuestion(activeQuestion+1);}else{onSetStep(3);}};var PrevHandler=function PrevHandler(e){setSelected('');onAnswerUpdate([]);onSetActiveQuestion(activeQuestion-1);};useEffect(function(){var findcheckedInput=radioWrapper.current.querySelector('input:checked');if(findcheckedInput){findcheckedInput.checked=false;}},[data]);return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(\"h4\",{className:\"card-title mb-4\"},\"QUESTION \"),/*#__PURE__*/React.createElement(\"div\",{id:\"basic-pills-wizard\",className:\"twitter-bs-wizard\"},/*#__PURE__*/React.createElement(\"div\",{className:\"mb-2\"},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{lg:\"12\"},/*#__PURE__*/React.createElement(\"h5\",{className:\"text-info\"},\"Question \",activeQuestion+1,\" of \",numberOfQuestion),/*#__PURE__*/React.createElement(\"p\",null,data.question))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{lg:\"12\"},/*#__PURE__*/React.createElement(\"form\",null,/*#__PURE__*/React.createElement(\"div\",{ref:radioWrapper},data.options.map(function(option,id){return/*#__PURE__*/React.createElement(\"label\",{className:\"radio\",key:id},/*#__PURE__*/React.createElement(\"input\",{type:\"radio\",name:\"answer\",value:option,onChange:changeHandler}),option);}))),error&&/*#__PURE__*/React.createElement(\"div\",{className:\"text-danger\"},error),/*#__PURE__*/React.createElement(Button,{color:\"primary\",className:\"btn btn-primary waves-effect waves-light mx-2\",onClick:nextClickHandler},\"Submit\"),activeQuestion>0&&/*#__PURE__*/React.createElement(Button,{color:\"primary\",className:\"btn btn-primary waves-effect waves-light mx-2\",onClick:PrevHandler},\"Back\"))),/*#__PURE__*/React.createElement(\"br\",null))))));};export default withNamespaces()(stateWrapper(Question));","map":{"version":3,"sources":["/Users/mac/writingPlatform/src/pages/Writer/Exam/question.js"],"names":["React","useEffect","useState","useRef","Container","Row","Col","Card","CardBody","Label","CardTitle","Input","Form","FormGroup","CustomInput","ListGroup","ListGroupItem","ButtonGroup","Button","Jumbotron","Progress","Link","instance","stateWrapper","withNamespaces","Moment","AvForm","Question","data","onAnswerUpdate","numberOfQuestion","activeQuestion","onSetActiveQuestion","onSetStep","setShowPrev","selected","setSelected","error","setError","radioWrapper","changeHandler","e","target","value","nextClickHandler","prevState","q","question","a","s","score","PrevHandler","findcheckedInput","current","querySelector","checked","options","map","option","id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport {  Container, Row, Col, Card, CardBody, Label, CardTitle, Input, Form, FormGroup, CustomInput, ListGroup,ListGroupItem, ButtonGroup, Button, Jumbotron, Progress } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport instance from \"../../../helpers/axiosly\";\nimport stateWrapper from \"../../../containers/provider\";\nimport { withNamespaces } from \"react-i18next\";\nimport Moment from 'react-moment'\nimport AvForm from \"availity-reactstrap-validation/lib/AvForm\";\n\n\n\nconst Question = ({data, onAnswerUpdate, numberOfQuestion, activeQuestion, onSetActiveQuestion, onSetStep, setShowPrev}) => {\n\n    const [selected, setSelected] = useState('');\n    const [error, setError] = useState('')\n    const radioWrapper = useRef()\n\n    const changeHandler = (e) => {\n        setSelected(e.target.value);\n\n        if(error) {\n            setError('')\n        }\n    }\n\n    const nextClickHandler = (e) => {\n        if(selected === '') {\n            return setError('Please select one option');\n        }\n        onAnswerUpdate(prevState => [...prevState, {\n            q: data.question , a: selected, s: data.score\n        }]);\n        setSelected('')\n        if(activeQuestion < numberOfQuestion - 1) {\n            onSetActiveQuestion(activeQuestion + 1)\n        } else {\n            onSetStep(3)\n        }\n    }\n\n    const PrevHandler = (e) => {\n        setSelected('')\n        onAnswerUpdate([]);\n        onSetActiveQuestion(activeQuestion - 1)\n    }\n\n    useEffect(() => {\n        const findcheckedInput = radioWrapper.current.querySelector('input:checked');\n        if(findcheckedInput) {\n            findcheckedInput.checked = false;\n        }\n\n    }, [data])\n  return (\n    <React.Fragment>\n\n        <Card>\n         <CardBody>\n           <h4 className=\"card-title mb-4\">QUESTION </h4>\n           <div id=\"basic-pills-wizard\" className=\"twitter-bs-wizard\">\n\n            <div className=\"mb-2\">\n                <Row>\n              <Col lg=\"12\">\n                <h5 className=\"text-info\">\n                  Question {activeQuestion + 1} of {numberOfQuestion}\n                </h5>\n                <p>{data.question}</p>\n              </Col>\n            </Row>\n             <Row>\n             <Col lg=\"12\">\n               <form>\n                 <div ref={radioWrapper}>\n                 {data.options.map((option, id) => (\n                    <label className=\"radio\" key={id}>\n                    <input type=\"radio\" name=\"answer\" value={option}  onChange={changeHandler}/>\n                       {option}\n                    </label>\n                   ))}\n                </div>\n\n               </form>\n               {error && <div className=\"text-danger\">{error}</div>}\n                <Button color=\"primary\" className=\"btn btn-primary waves-effect waves-light mx-2\" onClick={nextClickHandler}>\n                    Submit</Button>\n                {activeQuestion > 0 &&\n                <Button color=\"primary\" className=\"btn btn-primary waves-effect waves-light mx-2\" onClick={PrevHandler}>\n                    Back\n                </Button>}\n\n             </Col>\n           </Row>\n           <br/>\n            </div>\n\n                {/* questions && <button\n                      type=\"submit\"\n                      className=\"btn btn-warning waves-effect waves-light mt-4\"\n                    >\n                      Submit\n                </button>*/}\n           </div>\n\n\n         </CardBody>\n       </Card>\n\n\n    </React.Fragment>\n  );\n};\n\n\nexport default withNamespaces()(stateWrapper(Question));"]},"metadata":{},"sourceType":"module"}