{"ast":null,"code":"import { Container } from \"unstated\";\nimport instance from \"../helpers/axiosly\";\nimport { LOCAL_STORAGE_SIGNIN_KEY } from '../App.constants'; // Get token from local storage\n\nconst token = localStorage.getItem(\"token\");\n\nclass MasterContainer extends Container {\n  constructor() {\n    super();\n\n    this.fetchService = bearertoken => {\n      return new Promise((resolve, reject) => {\n        instance.get(`${process.env.REACT_APP_DATABASEURL}services`, {\n          headers: {\n            Authorization: `Bearer ${bearertoken}`\n          }\n        }).then(response => {\n          resolve(response);\n          this.setState({\n            sessionData: {\n              serviceList: response.data.data.rows\n            }\n          });\n          console.log(this.state.sessionData.serviceList);\n        }).catch(e => console.log(e));\n      });\n    };\n\n    this.fetchOrder = bearertoken => {\n      console.log(bearertoken);\n      return new Promise((resolve, reject) => {\n        instance.get(`${process.env.REACT_APP_DATABASEURL}project`, {\n          headers: {\n            Authorization: `Bearer ${bearertoken}`\n          }\n        }).then(response => {\n          resolve(response);\n          this.setState({\n            sessionData: {\n              serviceList: response.data.data.rows\n            }\n          });\n          console.log(this.state.sessionData.serviceList);\n        }).catch(e => console.log(e));\n      });\n    };\n\n    this.addService = (state, bearertoken) => {\n      instance.post(`${process.env.REACT_APP_DATABASEURL}services`, {\n        name: state.name,\n        price: state.price\n      }, {\n        headers: {\n          Authorization: `Bearer ${bearertoken}`\n        }\n      }).then(response => {\n        console.log(\"services here \", response.data.data);\n      }).catch(e => console.log(e));\n    };\n\n    this.updateServices = (state, bearertoken, id) => {\n      instance.put(`${process.env.REACT_APP_DATABASEURL}services/${id}`, {\n        name: state.name.toString(),\n        price: state.price.toString()\n      }, {\n        headers: {\n          Authorization: `Bearer ${bearertoken}`\n        }\n      }).then(response => {\n        console.log(\"services here \", response.data.data);\n      }).catch(e => console.log(e));\n    };\n\n    this.deleteService = id => {\n      return new Promise((resolve, reject) => {\n        instance.delete(`${process.env.REACT_APP_DATABASEURL}services/${id}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }).then(response => {\n          resolve(response);\n        }).catch(e => {\n          console.log(e);\n        });\n      });\n    };\n\n    this.fetchSubjectarea = bearertoken => {\n      return new Promise((resolve, reject) => {\n        instance.get(`${process.env.REACT_APP_DATABASEURL}subject-area`, {\n          headers: {\n            Authorization: `Bearer ${bearertoken}`\n          }\n        }).then(response => {\n          resolve(response);\n          this.setState({\n            sessionData: {\n              subjectareaList: response.data.data.rows\n            }\n          });\n        }).catch(e => console.log(e));\n      });\n    };\n\n    this.addSubjectarea = (state, bearertoken) => {\n      instance.post(`${process.env.REACT_APP_DATABASEURL}subject-area`, {\n        name: state.name,\n        price: state.price\n      }, {\n        headers: {\n          Authorization: `Bearer ${bearertoken}`\n        }\n      }).then(response => {\n        console.log(\"services here \", response.data.data);\n      }).catch(e => console.log(e));\n    };\n\n    this.updateSubjectarea = (state, bearertoken, id) => {\n      instance.put(`${process.env.REACT_APP_DATABASEURL}subject-area/${id}`, {\n        name: state.name.toString(),\n        price: state.price.toString()\n      }, {\n        headers: {\n          Authorization: `Bearer ${bearertoken}`\n        }\n      }).then(response => {\n        console.log(\"services here \", response.data.data);\n      }).catch(e => console.log(e));\n    };\n\n    this.deleteSubjectarea = id => {\n      return new Promise((resolve, reject) => {\n        instance.delete(`${process.env.REACT_APP_DATABASEURL}subject-area/${id}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }).then(response => {\n          console.log(resolve(response));\n          resolve(response);\n        }).catch(e => {\n          console.log(e);\n        });\n      });\n    };\n\n    this.fetchSpacing = bearertoken => {\n      return new Promise((resolve, reject) => {\n        instance.get(`${process.env.REACT_APP_DATABASEURL}spacing`, {\n          headers: {\n            Authorization: `Bearer ${bearertoken}`\n          }\n        }).then(response => {\n          resolve(response);\n          this.setState({\n            sessionData: {\n              spacingList: response.data.data\n            }\n          });\n        }).catch(e => console.log(e));\n      });\n    };\n\n    this.addSpacing = (state, bearertoken) => {\n      instance.post(`${process.env.REACT_APP_DATABASEURL}spacing`, {\n        name: state.name,\n        price: state.price\n      }, {\n        headers: {\n          Authorization: `Bearer ${bearertoken}`\n        }\n      }).then(response => {\n        console.log(\"services here \", response.data.data);\n      }).catch(e => console.log(e));\n    };\n\n    this.updateSpacing = (state, bearertoken, id) => {\n      instance.put(`${process.env.REACT_APP_DATABASEURL}spacing/${id}`, {\n        name: state.name.toString()\n      }, {\n        headers: {\n          Authorization: `Bearer ${bearertoken}`\n        }\n      }).then(response => {\n        console.log(\"services here \", response.data.data);\n      }).catch(e => console.log(e));\n    };\n\n    this.deleteSpacing = id => {\n      return new Promise((resolve, reject) => {\n        instance.delete(`${process.env.REACT_APP_DATABASEURL}spacing/${id}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }).then(response => {\n          console.log(resolve(response));\n          resolve(response);\n        }).catch(e => {\n          console.log(e);\n        });\n      });\n    };\n\n    this.fetchPaperFormat = bearertoken => {\n      return new Promise((resolve, reject) => {\n        instance.get(`${process.env.REACT_APP_DATABASEURL}paper-format`, {\n          headers: {\n            Authorization: `Bearer ${bearertoken}`\n          }\n        }).then(response => {\n          resolve(response);\n          this.setState({\n            sessionData: {\n              paperFormatList: response.data.data\n            }\n          });\n        }).catch(e => console.log(e));\n      });\n    };\n\n    this.addPaperFormat = (state, bearertoken) => {\n      instance.post(`${process.env.REACT_APP_DATABASEURL}paper-format`, {\n        name: state.name\n      }, {\n        headers: {\n          Authorization: `Bearer ${bearertoken}`\n        }\n      }).then(response => {}).catch(e => console.log(e));\n    };\n\n    this.updatePaperFormat = (state, bearertoken, id) => {\n      instance.put(`${process.env.REACT_APP_DATABASEURL}paper-format/${id}`, {\n        name: state.name.toString()\n      }, {\n        headers: {\n          Authorization: `Bearer ${bearertoken}`\n        }\n      }).then(response => {\n        console.log(response.data.data);\n      }).catch(e => console.log(e));\n    };\n\n    this.deletePaperFormat = id => {\n      return new Promise((resolve, reject) => {\n        instance.delete(`${process.env.REACT_APP_DATABASEURL}paper-format/${id}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }).then(response => {\n          console.log(resolve(response));\n          resolve(response);\n        }).catch(e => {\n          console.log(e);\n        });\n      });\n    };\n\n    this.fetchPaperType = bearertoken => {\n      return new Promise((resolve, reject) => {\n        instance.get(`${process.env.REACT_APP_DATABASEURL}paper-format`, {\n          headers: {\n            Authorization: `Bearer ${bearertoken}`\n          }\n        }).then(response => {\n          resolve(response);\n          this.setState({\n            sessionData: {\n              paperTypeList: response.data.data\n            }\n          });\n        }).catch(e => console.log(e));\n      });\n    };\n\n    this.addPaperType = (state, bearertoken) => {\n      instance.post(`${process.env.REACT_APP_DATABASEURL}paper-format`, {\n        name: state.name\n      }, {\n        headers: {\n          Authorization: `Bearer ${bearertoken}`\n        }\n      }).then(response => {}).catch(e => console.log(e));\n    };\n\n    this.updatePaperType = (state, bearertoken, id) => {\n      instance.put(`${process.env.REACT_APP_DATABASEURL}paper-format/${id}`, {\n        name: state.name.toString()\n      }, {\n        headers: {\n          Authorization: `Bearer ${bearertoken}`\n        }\n      }).then(response => {\n        console.log(response.data.data);\n      }).catch(e => console.log(e));\n    };\n\n    this.deletePaperType = id => {\n      return new Promise((resolve, reject) => {\n        instance.delete(`${process.env.REACT_APP_DATABASEURL}paper-format/${id}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }).then(response => {\n          console.log(resolve(response));\n          resolve(response);\n        }).catch(e => {\n          console.log(e);\n        });\n      });\n    };\n\n    this.singleOrderPayment = (id, user_id, amount, balance, redirect_url) => {\n      console.log(`${window.location.origin}/payments`);\n      return new Promise((resolve, reject) => {\n        instance.post(`${process.env.REACT_APP_DATABASEURL}order/${id}/complete-pay`, {\n          id: id,\n          user_id: user_id,\n          amount: amount,\n          balance: balance,\n          redirect_url: `${window.location.origin}/payments`\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }).then(response => {\n          console.log(resolve(response));\n          resolve(response);\n        }).catch(e => {\n          console.log(e);\n        });\n      });\n    };\n\n    this.fetchExam = bearertoken => {\n      return new Promise((resolve, reject) => {\n        instance.get(`${process.env.REACT_APP_DATABASEURL}exam`, {\n          headers: {\n            Authorization: `Bearer ${bearertoken}`\n          }\n        }).then(response => {\n          resolve(response);\n          this.setState({\n            sessionData: {\n              examList: response.data.data\n            }\n          });\n        }).catch(e => console.log(e));\n      });\n    };\n\n    this.addExam = (state, bearertoken) => {\n      instance.post(`${process.env.REACT_APP_DATABASEURL}exam`, {\n        name: state.name\n      }, {\n        headers: {\n          Authorization: `Bearer ${bearertoken}`\n        }\n      }).then(response => {\n        console.log(\"exam here \", response.data.data);\n      }).catch(e => console.log(e));\n    };\n\n    this.updateExam = (state, bearertoken, id) => {\n      instance.put(`${process.env.REACT_APP_DATABASEURL}exam/${id}`, {\n        name: state.name.toString()\n      }, {\n        headers: {\n          Authorization: `Bearer ${bearertoken}`\n        }\n      }).then(response => {\n        console.log(\"exam here \", response.data.data);\n      }).catch(e => console.log(e));\n    };\n\n    this.deleteExam = id => {\n      return new Promise((resolve, reject) => {\n        instance.delete(`${process.env.REACT_APP_DATABASEURL}exam/${id}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }).then(response => {\n          console.log(resolve(response));\n          resolve(response);\n        }).catch(e => {\n          console.log(e);\n        });\n      });\n    };\n\n    this.fetchQuestion = (bearertoken, id) => {\n      return new Promise((resolve, reject) => {\n        instance.get(`${process.env.REACT_APP_DATABASEURL}exam/${id}/question`, {\n          headers: {\n            Authorization: `Bearer ${bearertoken}`\n          }\n        }).then(response => {\n          resolve(response);\n          this.setState({\n            sessionData: {\n              questionList: response.data.data\n            }\n          });\n        }).catch(e => console.log(e));\n      });\n    };\n\n    this.addQuestion = (state, bearertoken, id) => {\n      instance.post(`${process.env.REACT_APP_DATABASEURL}exam/${id}/question`, {\n        question: state.question,\n        answer: state.answer,\n        options: state.options,\n        score: state.score\n      }, {\n        headers: {\n          Authorization: `Bearer ${bearertoken}`\n        }\n      }).then(response => {\n        console.log(\"question here \", response.data.data);\n      }).catch(e => console.log(e));\n    };\n\n    this.findWriterExam = (userId, bearertoken) => {\n      return new Promise((resolve, reject) => {\n        instance.get(`${process.env.REACT_APP_DATABASEURL}exam/user/${userId}`, {\n          // {userId: userId},\n          headers: {\n            Authorization: `Bearer ${bearertoken}`\n          }\n        }).then(response => {\n          console.log(resolve(response === null || response === void 0 ? void 0 : response.data));\n          resolve(response === null || response === void 0 ? void 0 : response.data);\n        }).catch(e => {\n          console.log(e);\n        });\n      });\n    };\n\n    this.fetchLibrary = bearertoken => {\n      return new Promise((resolve, reject) => {\n        instance.get(`${process.env.REACT_APP_DATABASEURL}library`, {\n          headers: {\n            Authorization: `Bearer ${bearertoken}`\n          }\n        }).then(response => {\n          resolve(response);\n          this.setState({\n            sessionData: {\n              libraryList: response.data.data.rows\n            }\n          });\n        }).catch(e => console.log(e));\n      });\n    };\n\n    this.addLibrary = (state, bearertoken, selectedFiles) => {\n      console.log(state);\n      const form = new FormData();\n      form.append(\"title\", state.title);\n      form.append(\"description\", state.description);\n      form.append(\"file\", selectedFiles);\n      instance.post(`${process.env.REACT_APP_DATABASEURL}library`, form, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n          Authorization: `Bearer ${bearertoken}`\n        }\n      }).then(response => {\n        console.log(\"lib here \", response.data);\n      }).catch(e => console.log(e));\n    };\n\n    this.deleteLibrary = id => {\n      return new Promise((resolve, reject) => {\n        instance.delete(`${process.env.REACT_APP_DATABASEURL}library/${id}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }).then(response => {\n          console.log(resolve(response));\n          resolve(response);\n        }).catch(e => {\n          console.log(e);\n        });\n      });\n    };\n\n    this.updateLibrary = (state, bearertoken, selectedFiles, id) => {\n      console.log(selectedFiles);\n      const form = new FormData();\n      form.append(\"title\", state.title);\n      form.append(\"description\", state.description);\n      form.append(\"file\", selectedFiles);\n      instance.patch(`${process.env.REACT_APP_DATABASEURL}library/${id}`, form, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n          Authorization: `Bearer ${bearertoken}`\n        }\n      }).then(response => {\n        console.log(\"services here \", response.data.data);\n      }).catch(e => console.log(e));\n    };\n\n    this.fetchProject = bearertoken => {\n      return new Promise((resolve, reject) => {\n        instance.get(`${process.env.REACT_APP_DATABASEURL}project`, {\n          headers: {\n            Authorization: `Bearer ${bearertoken}`\n          }\n        }).then(response => {\n          resolve(response);\n          console.log(response.data.data.rows);\n          this.setState({\n            sessionData: {\n              projectList: response.data.data.rows\n            }\n          });\n        }).catch(e => console.log(e));\n      });\n    };\n\n    this.fetchWithdrawal = bearertoken => {\n      return new Promise((resolve, reject) => {\n        instance.get(`${process.env.REACT_APP_DATABASEURL}withdrawal`, {\n          headers: {\n            Authorization: `Bearer ${bearertoken}`\n          }\n        }).then(response => {\n          resolve(response);\n          this.setState({\n            sessionData: {\n              withdrawalList: response.data.data.rows\n            }\n          });\n        }).catch(e => console.log(e));\n      });\n    };\n\n    this.fetchSuppprt = bearertoken => {\n      return new Promise((resolve, reject) => {\n        instance.get(`${process.env.REACT_APP_DATABASEURL}support`, {\n          headers: {\n            Authorization: `Bearer ${bearertoken}`\n          }\n        }).then(response => {\n          resolve(response);\n          console.log(response);\n          this.setState({\n            sessionData: {\n              supportList: response.data.data.rows\n            }\n          });\n        }).catch(e => console.log(e));\n      });\n    };\n\n    this.state = {\n      sessionData: {\n        serviceList: [],\n        subjectareaList: [],\n        spacingList: [],\n        libraryList: [],\n        projectList: [],\n        withdrawalList: [],\n        paperFormatListL: [],\n        paperTypeList: [],\n        supportList: [],\n        examList: [],\n        questionList: []\n      }\n    };\n  }\n  /**\n   *\n   * State manager for Services\n   *\n  * */\n  // Function to get list of services\n\n\n}\n\nexport { MasterContainer };","map":{"version":3,"sources":["/Users/mac/metabank/src/containers/MasterContainer.js"],"names":["Container","instance","LOCAL_STORAGE_SIGNIN_KEY","token","localStorage","getItem","MasterContainer","constructor","fetchService","bearertoken","Promise","resolve","reject","get","process","env","REACT_APP_DATABASEURL","headers","Authorization","then","response","setState","sessionData","serviceList","data","rows","console","log","state","catch","e","fetchOrder","addService","post","name","price","updateServices","id","put","toString","deleteService","delete","fetchSubjectarea","subjectareaList","addSubjectarea","updateSubjectarea","deleteSubjectarea","fetchSpacing","spacingList","addSpacing","updateSpacing","deleteSpacing","fetchPaperFormat","paperFormatList","addPaperFormat","updatePaperFormat","deletePaperFormat","fetchPaperType","paperTypeList","addPaperType","updatePaperType","deletePaperType","singleOrderPayment","user_id","amount","balance","redirect_url","window","location","origin","fetchExam","examList","addExam","updateExam","deleteExam","fetchQuestion","questionList","addQuestion","question","answer","options","score","findWriterExam","userId","fetchLibrary","libraryList","addLibrary","selectedFiles","form","FormData","append","title","description","deleteLibrary","updateLibrary","patch","fetchProject","projectList","fetchWithdrawal","withdrawalList","fetchSuppprt","supportList","paperFormatListL"],"mappings":"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","sourcesContent":["import { Container } from \"unstated\";\nimport instance from \"../helpers/axiosly\";\nimport { LOCAL_STORAGE_SIGNIN_KEY } from '../App.constants'\n\n// Get token from local storage\nconst token = localStorage.getItem(\"token\");\n\nclass MasterContainer extends Container {\n  constructor() {\n    super();\n    this.state = {\n      sessionData: {\n        serviceList: [],\n        subjectareaList: [],\n        spacingList: [],\n        libraryList: [],\n        projectList: [],\n        withdrawalList: [],\n        paperFormatListL: [],\n        paperTypeList: [],\n        supportList: [],\n        examList: [],\n        questionList: []\n      },\n    };\n  }\n\n/**\n *\n * State manager for Services\n *\n* */\n\n// Function to get list of services\n\n  fetchService = (bearertoken) => {\n    return new Promise((resolve, reject)=> {\n      instance\n      .get(`${process.env.REACT_APP_DATABASEURL}services`, {\n        headers: {\n          Authorization: `Bearer ${bearertoken}`,\n        },\n      })\n      .then((response) => {\n        resolve(response)\n\n            this.setState({\n              sessionData: {\n                serviceList: response.data.data.rows,\n              },\n            });\n            console.log(this.state.sessionData.serviceList)\n\n\n      })\n\n      .catch((e) => console.log(e));\n    })\n\n\n  };\n\n  // Function to get list of order\n\n  fetchOrder = (bearertoken) => {\n    console.log(bearertoken)\n    return new Promise((resolve, reject)=> {\n      instance\n      .get(`${process.env.REACT_APP_DATABASEURL}project`, {\n        headers: {\n          Authorization: `Bearer ${bearertoken}`,\n        },\n      })\n      .then((response) => {\n        resolve(response)\n\n            this.setState({\n              sessionData: {\n                serviceList: response.data.data.rows,\n              },\n            });\n            console.log(this.state.sessionData.serviceList)\n\n\n      })\n\n      .catch((e) => console.log(e));\n    })\n\n\n  };\n\n//post service\n  addService = (state, bearertoken) => {\n    instance\n      .post(`${process.env.REACT_APP_DATABASEURL}services`,{\n        name: state.name,\n        price: state.price\n        },  {\n        headers: {\n          Authorization: `Bearer ${bearertoken}`,\n        },\n      })\n      .then((response) => {\n\n        console.log(\"services here \", response.data.data)\n\n      })\n\n      .catch((e) => console.log(e));\n  }\n\n  //update service\n  updateServices = (state, bearertoken, id) => {\n    instance\n    .put(`${process.env.REACT_APP_DATABASEURL}services/${id}`,{\n      name: state.name.toString(),\n      price: state.price.toString()\n      },  {\n      headers: {\n        Authorization: `Bearer ${bearertoken}`,\n      },\n    })\n    .then((response) => {\n\n      console.log(\"services here \", response.data.data)\n\n    })\n\n    .catch((e) => console.log(e));\n  }\n\n// function to delete service\n  deleteService = (id) => { return new Promise((resolve, reject)=> {\n    instance\n    .delete(`${process.env.REACT_APP_DATABASEURL}services/${id}`, {\n\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n\n    }).then((response) => {\n\n      resolve(response);\n\n    }).catch((e) => {\n      console.log(e);\n    });\n  })\n\n\n\n  }\n\n\n  // Function to get list of subject area\n\n  fetchSubjectarea = (bearertoken) => {\n    return new Promise((resolve, reject)=>{\n      instance\n      .get(`${process.env.REACT_APP_DATABASEURL}subject-area`, {\n        headers: {\n          Authorization: `Bearer ${bearertoken}`,\n        },\n      })\n      .then((response) => {\n        resolve(response)\n            this.setState({\n              sessionData: {\n                subjectareaList: response.data.data.rows,\n              },\n            });\n\n\n\n      })\n\n      .catch((e) => console.log(e));\n    })\n\n  };\n\n//post subject\n  addSubjectarea = (state, bearertoken) => {\n    instance\n      .post(`${process.env.REACT_APP_DATABASEURL}subject-area`,{\n        name: state.name,\n        price: state.price\n        },  {\n        headers: {\n          Authorization: `Bearer ${bearertoken}`,\n        },\n      })\n      .then((response) => {\n\n        console.log(\"services here \", response.data.data)\n\n      })\n\n      .catch((e) => console.log(e));\n  }\n\n  //update subject\n  updateSubjectarea = (state, bearertoken, id) => {\n    instance\n    .put(`${process.env.REACT_APP_DATABASEURL}subject-area/${id}`,{\n      name: state.name.toString(),\n      price: state.price.toString()\n      },  {\n      headers: {\n        Authorization: `Bearer ${bearertoken}`,\n      },\n    })\n    .then((response) => {\n\n      console.log(\"services here \", response.data.data)\n\n    })\n\n    .catch((e) => console.log(e));\n  }\n\n// function to delete subject\n  deleteSubjectarea = (id) => {\n    return new Promise((resolve, reject)=> {\n    instance\n    .delete(`${process.env.REACT_APP_DATABASEURL}subject-area/${id}`, {\n\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n\n    }).then((response) => {\n      console.log(resolve(response));\n      resolve(response);\n\n    }).catch((e) => {\n      console.log(e);\n    });\n  })\n\n\n\n  }\n\n\n   // Function to get list of spacing\n\n   fetchSpacing = (bearertoken) => {\n    return new Promise((resolve, reject)=>{\n      instance\n      .get(`${process.env.REACT_APP_DATABASEURL}spacing`, {\n        headers: {\n          Authorization: `Bearer ${bearertoken}`,\n        },\n      })\n      .then((response) => {\n        resolve(response)\n            this.setState({\n              sessionData: {\n                spacingList: response.data.data,\n              },\n            });\n\n\n\n      })\n\n      .catch((e) => console.log(e));\n    })\n\n  };\n\n//post spacing\n  addSpacing = (state, bearertoken) => {\n    instance\n      .post(`${process.env.REACT_APP_DATABASEURL}spacing`,{\n        name: state.name,\n        price: state.price\n        },  {\n        headers: {\n          Authorization: `Bearer ${bearertoken}`,\n        },\n      })\n      .then((response) => {\n\n        console.log(\"services here \", response.data.data)\n\n      })\n\n      .catch((e) => console.log(e));\n  }\n\n  //update spacing\n  updateSpacing = (state, bearertoken, id) => {\n    instance\n    .put(`${process.env.REACT_APP_DATABASEURL}spacing/${id}`,{\n      name: state.name.toString()\n      },  {\n      headers: {\n        Authorization: `Bearer ${bearertoken}`,\n      },\n    })\n    .then((response) => {\n\n      console.log(\"services here \", response.data.data)\n\n    })\n\n    .catch((e) => console.log(e));\n  }\n\n// function to delete spacing\n  deleteSpacing = (id) => {\n    return new Promise((resolve, reject)=> {\n    instance\n    .delete(`${process.env.REACT_APP_DATABASEURL}spacing/${id}`, {\n\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n\n    }).then((response) => {\n      console.log(resolve(response));\n      resolve(response);\n\n    }).catch((e) => {\n      console.log(e);\n    });\n  })\n\n  }\n\n  fetchPaperFormat = (bearertoken) => {\n    return new Promise((resolve, reject)=>{\n      instance\n      .get(`${process.env.REACT_APP_DATABASEURL}paper-format`, {\n        headers: {\n          Authorization: `Bearer ${bearertoken}`,\n        },\n      })\n      .then((response) => {\n        resolve(response)\n            this.setState({\n              sessionData: {\n                paperFormatList: response.data.data,\n              },\n            });\n\n\n\n      })\n\n      .catch((e) => console.log(e));\n    })\n\n  };\n\n  addPaperFormat = (state, bearertoken) => {\n    instance\n      .post(`${process.env.REACT_APP_DATABASEURL}paper-format`,{\n        name: state.name\n        },  {\n        headers: {\n          Authorization: `Bearer ${bearertoken}`,\n        },\n      })\n      .then((response) => {\n\n\n\n      })\n\n      .catch((e) => console.log(e));\n  }\n\n  updatePaperFormat = (state, bearertoken, id) => {\n    instance\n    .put(`${process.env.REACT_APP_DATABASEURL}paper-format/${id}`,{\n      name: state.name.toString()\n      },  {\n      headers: {\n        Authorization: `Bearer ${bearertoken}`,\n      },\n    })\n    .then((response) => {\n\n      console.log(response.data.data)\n\n    })\n\n    .catch((e) => console.log(e));\n  }\n\n  deletePaperFormat = (id) => {\n    return new Promise((resolve, reject)=> {\n    instance\n    .delete(`${process.env.REACT_APP_DATABASEURL}paper-format/${id}`, {\n\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n\n    }).then((response) => {\n      console.log(resolve(response));\n      resolve(response);\n\n    }).catch((e) => {\n      console.log(e);\n    });\n  })\n\n  }\n\n  fetchPaperType = (bearertoken) => {\n    return new Promise((resolve, reject)=>{\n      instance\n      .get(`${process.env.REACT_APP_DATABASEURL}paper-format`, {\n        headers: {\n          Authorization: `Bearer ${bearertoken}`,\n        },\n      })\n      .then((response) => {\n        resolve(response)\n            this.setState({\n              sessionData: {\n                paperTypeList: response.data.data,\n              },\n            });\n\n\n\n      })\n\n      .catch((e) => console.log(e));\n    })\n\n  };\n\n  addPaperType = (state, bearertoken) => {\n    instance\n      .post(`${process.env.REACT_APP_DATABASEURL}paper-format`,{\n        name: state.name\n        },  {\n        headers: {\n          Authorization: `Bearer ${bearertoken}`,\n        },\n      })\n      .then((response) => {\n\n\n\n      })\n\n      .catch((e) => console.log(e));\n  }\n\n  updatePaperType = (state, bearertoken, id) => {\n    instance\n    .put(`${process.env.REACT_APP_DATABASEURL}paper-format/${id}`,{\n      name: state.name.toString()\n      },  {\n      headers: {\n        Authorization: `Bearer ${bearertoken}`,\n      },\n    })\n    .then((response) => {\n\n      console.log(response.data.data)\n\n    })\n\n    .catch((e) => console.log(e));\n  }\n\n  deletePaperType = (id) => {\n    return new Promise((resolve, reject)=> {\n    instance\n    .delete(`${process.env.REACT_APP_DATABASEURL}paper-format/${id}`, {\n\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n\n    }).then((response) => {\n      console.log(resolve(response));\n      resolve(response);\n\n    }).catch((e) => {\n      console.log(e);\n    });\n  })\n\n  }\n\n\n\n  //Function to make single payment for any Order placed by the client\n  singleOrderPayment = (id, user_id, amount, balance, redirect_url) => {\n    console.log(`${window.location.origin}/payments`)\n    return new Promise((resolve, reject)=> {\n    instance\n    .post(`${process.env.REACT_APP_DATABASEURL}order/${id}/complete-pay`,\n    {\n      id: id,\n      user_id: user_id,\n      amount: amount,\n      balance: balance,\n      redirect_url: `${window.location.origin}/payments`\n    },\n    {\n\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n\n    }).then((response) => {\n      console.log(resolve(response));\n      resolve(response);\n\n    }).catch((e) => {\n      console.log(e);\n    });\n  })\n\n  }\n\n\n  //fetch exams\n  fetchExam = (bearertoken) => {\n    return new Promise((resolve, reject)=>{\n      instance\n      .get(`${process.env.REACT_APP_DATABASEURL}exam`, {\n        headers: {\n          Authorization: `Bearer ${bearertoken}`,\n        },\n      })\n      .then((response) => {\n\n        resolve(response)\n            this.setState({\n              sessionData: {\n                examList: response.data.data,\n              },\n            });\n\n\n\n      })\n\n      .catch((e) => console.log(e));\n    })\n\n  };\n\n\n  //post exam\n  addExam = (state, bearertoken) => {\n    instance\n      .post(`${process.env.REACT_APP_DATABASEURL}exam`,{\n        name: state.name\n        },  {\n        headers: {\n          Authorization: `Bearer ${bearertoken}`,\n        },\n      })\n      .then((response) => {\n\n        console.log(\"exam here \", response.data.data)\n\n      })\n\n      .catch((e) => console.log(e));\n  }\n\n  //update spacing\n  updateExam = (state, bearertoken, id) => {\n    instance\n    .put(`${process.env.REACT_APP_DATABASEURL}exam/${id}`,{\n      name: state.name.toString()\n      },  {\n      headers: {\n        Authorization: `Bearer ${bearertoken}`,\n      },\n    })\n    .then((response) => {\n\n      console.log(\"exam here \", response.data.data)\n\n    })\n\n    .catch((e) => console.log(e));\n  }\n\n  deleteExam = (id) => {\n    return new Promise((resolve, reject)=> {\n    instance\n    .delete(`${process.env.REACT_APP_DATABASEURL}exam/${id}`, {\n\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n\n    }).then((response) => {\n      console.log(resolve(response));\n      resolve(response);\n\n    }).catch((e) => {\n      console.log(e);\n    });\n  })\n\n  }\n\n  fetchQuestion = (bearertoken, id) => {\n    return new Promise((resolve, reject)=>{\n      instance\n      .get(`${process.env.REACT_APP_DATABASEURL}exam/${id}/question`, {\n        headers: {\n          Authorization: `Bearer ${bearertoken}`,\n        },\n      })\n      .then((response) => {\n\n        resolve(response)\n            this.setState({\n              sessionData: {\n                questionList: response.data.data,\n              },\n            });\n\n\n\n      })\n\n      .catch((e) => console.log(e));\n    })\n\n  };\n\n  addQuestion = (state, bearertoken, id) => {\n    instance\n      .post(`${process.env.REACT_APP_DATABASEURL}exam/${id}/question`,{\n        question: state.question,\n        answer: state.answer,\n        options: state.options,\n        score: state.score\n        },  {\n        headers: {\n          Authorization: `Bearer ${bearertoken}`,\n        },\n      })\n      .then((response) => {\n\n        console.log(\"question here \", response.data.data)\n\n      })\n\n      .catch((e) => console.log(e));\n  }\n\n  // check writer exam score exist\n findWriterExam = (userId,bearertoken) => {\n  return new Promise((resolve, reject)=> {\n  instance\n  .get(`${process.env.REACT_APP_DATABASEURL}exam/user/${userId}`, {\n    // {userId: userId},\n    headers: {\n      Authorization: `Bearer ${bearertoken}`,\n    },\n\n  }).then((response) => {\n    console.log(resolve(response?.data));\n    resolve(response?.data);\n\n  }).catch((e) => {\n    console.log(e);\n  });\n})\n\n\n}\n\n// Function to get list of library\n\nfetchLibrary = (bearertoken) => {\n  return new Promise((resolve, reject)=>{\n    instance\n    .get(`${process.env.REACT_APP_DATABASEURL}library`, {\n      headers: {\n        Authorization: `Bearer ${bearertoken}`,\n      },\n    })\n    .then((response) => {\n\n      resolve(response)\n          this.setState({\n            sessionData: {\n              libraryList: response.data.data.rows\n            },\n          });\n\n\n\n    })\n\n    .catch((e) => console.log(e));\n  })\n\n};\n\n// Function to add library\n\naddLibrary = (state, bearertoken, selectedFiles) => {\nconsole.log(state)\n  const form = new FormData();\n\n    form.append(\"title\", state.title);\n    form.append(\"description\", state.description);\n    form.append(\"file\", selectedFiles);\n  instance\n    .post(`${process.env.REACT_APP_DATABASEURL}library`,form,  {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n        Authorization: `Bearer ${bearertoken}`,\n      },\n    })\n    .then((response) => {\n\n      console.log(\"lib here \", response.data)\n\n    })\n\n    .catch((e) => console.log(e));\n}\n\n\n// Function to delete library\ndeleteLibrary = (id) => {\n  return new Promise((resolve, reject)=> {\n  instance\n  .delete(`${process.env.REACT_APP_DATABASEURL}library/${id}`, {\n\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n\n  }).then((response) => {\n    console.log(resolve(response));\n    resolve(response);\n\n  }).catch((e) => {\n    console.log(e);\n  });\n})\n\n}\n\n// Function to update a library\nupdateLibrary = (state, bearertoken, selectedFiles, id) => {\n  console.log(selectedFiles)\n  const form = new FormData();\n\n    form.append(\"title\", state.title);\n    form.append(\"description\", state.description);\n    form.append(\"file\", selectedFiles);\n  instance\n  .patch(`${process.env.REACT_APP_DATABASEURL}library/${id}`,form,  {\n    headers: {\n      \"Content-Type\": \"multipart/form-data\",\n      Authorization: `Bearer ${bearertoken}`,\n    },\n  })\n  .then((response) => {\n\n    console.log(\"services here \", response.data.data)\n\n  })\n\n  .catch((e) => console.log(e));\n}\n\nfetchProject = (bearertoken) => {\n  return new Promise((resolve, reject)=> {\n    instance\n    .get(`${process.env.REACT_APP_DATABASEURL}project`, {\n      headers: {\n        Authorization: `Bearer ${bearertoken}`,\n      },\n    })\n    .then((response) => {\n      resolve(response)\n        console.log(response.data.data.rows)\n          this.setState({\n            sessionData: {\n              projectList: response.data.data.rows\n            },\n          });\n\n\n    })\n\n    .catch((e) => console.log(e));\n  })\n\n}\n\nfetchWithdrawal = (bearertoken) => {\n  return new Promise((resolve, reject)=> {\n    instance\n    .get(`${process.env.REACT_APP_DATABASEURL}withdrawal`, {\n      headers: {\n        Authorization: `Bearer ${bearertoken}`,\n      },\n    })\n    .then((response) => {\n      resolve(response)\n\n          this.setState({\n            sessionData: {\n              withdrawalList: response.data.data.rows\n            },\n          });\n\n\n    })\n\n    .catch((e) => console.log(e));\n  })\n\n}\n\nfetchSuppprt = (bearertoken) => {\n  return new Promise((resolve, reject)=> {\n    instance\n    .get(`${process.env.REACT_APP_DATABASEURL}support`, {\n      headers: {\n        Authorization: `Bearer ${bearertoken}`,\n      },\n    })\n    .then((response) => {\n      resolve(response)\n        console.log(response)\n          this.setState({\n            sessionData: {\n              supportList: response.data.data.rows\n            },\n          });\n\n\n    })\n\n    .catch((e) => console.log(e));\n  })\n\n}\n\n}\n\n\n\nexport { MasterContainer };\n\n\n\n"]},"metadata":{},"sourceType":"module"}