{"ast":null,"code":"var _jsxFileName = \"/Users/mac/writingPlatform/src/pages/Writer/Exam/question.js\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { Container, Row, Col, Card, CardBody, Label, CardTitle, Input, Form, FormGroup, CustomInput, ListGroup, ListGroupItem, ButtonGroup, Button, Jumbotron, Progress } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport instance from \"../../../helpers/axiosly\";\nimport stateWrapper from \"../../../containers/provider\";\nimport { withNamespaces } from \"react-i18next\";\nimport Moment from 'react-moment';\nimport AvForm from \"availity-reactstrap-validation/lib/AvForm\";\n\nconst Question = ({\n  data,\n  onAnswerUpdate,\n  numberOfQuestion,\n  activeQuestion,\n  onSetActiveQuestion,\n  onSetStep,\n  setScore,\n  score\n}) => {\n  console.log(numberOfQuestion);\n  const [selected, setSelected] = useState('');\n  const [error, setError] = useState('');\n  const radioWrapper = useRef();\n\n  const changeHandler = e => {\n    setSelected(e.target.value);\n\n    if (error) {\n      setError('');\n    }\n  };\n\n  const nextClickHandler = e => {\n    if (selected === '') {\n      return setError('Please select one option');\n    }\n\n    onAnswerUpdate(prevState => [...prevState, {\n      q: data.question,\n      a: selected,\n      s: data.score\n    }]);\n\n    if (selected === data.answer) {\n      setScore(score + data.score);\n    }\n\n    setSelected('');\n\n    if (activeQuestion < numberOfQuestion - 1) {\n      onSetActiveQuestion(activeQuestion + 1);\n    } else {\n      onSetStep(3);\n    }\n  };\n  /* const submitHandler = (e) => {\n     if(selected === '') {\n       return setError('Please select one option');\n   }\n       onAnswerUpdate(prevState => [...prevState, {\n         q: data.question , a: selected, s: data.score\n     }]);\n     setSelected('')\n     onSetStep(3)\n   }*/\n\n\n  useEffect(() => {\n    const findcheckedInput = radioWrapper.current.querySelector('input:checked');\n\n    if (findcheckedInput) {\n      findcheckedInput.checked = false;\n    }\n  }, [data]);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    body: true,\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"card-title mb-4 text-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 12\n    }\n  }, \"Question \", activeQuestion + 1, \" of \", numberOfQuestion, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"basic-pills-wizard\",\n    className: \"twitter-bs-wizard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, data.question))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 16\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    ref: radioWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 18\n    }\n  }, data.options.map((option, id) => /*#__PURE__*/React.createElement(\"label\", {\n    className: \"radio\",\n    key: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"checkbox\",\n    type: \"radio\",\n    name: \"answer\",\n    value: option,\n    onChange: changeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"checkmark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }), option)))), error && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-danger mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 26\n    }\n  }, error), activeQuestion == numberOfQuestion - 1 ? '' : /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    className: \"btn btn-primary waves-effect waves-light mx-2\",\n    onClick: nextClickHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 64\n    }\n  }, \"Next\"), activeQuestion == numberOfQuestion - 1 && /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    className: \"btn btn-primary waves-effect waves-light mx-2\",\n    onClick: nextClickHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, \"Submit\"))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 12\n    }\n  })))));\n};\n\nexport default withNamespaces()(stateWrapper(Question));","map":{"version":3,"sources":["/Users/mac/writingPlatform/src/pages/Writer/Exam/question.js"],"names":["React","useEffect","useState","useRef","Container","Row","Col","Card","CardBody","Label","CardTitle","Input","Form","FormGroup","CustomInput","ListGroup","ListGroupItem","ButtonGroup","Button","Jumbotron","Progress","Link","instance","stateWrapper","withNamespaces","Moment","AvForm","Question","data","onAnswerUpdate","numberOfQuestion","activeQuestion","onSetActiveQuestion","onSetStep","setScore","score","console","log","selected","setSelected","error","setError","radioWrapper","changeHandler","e","target","value","nextClickHandler","prevState","q","question","a","s","answer","findcheckedInput","current","querySelector","checked","options","map","option","id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport {  Container, Row, Col, Card, CardBody, Label, CardTitle, Input, Form, FormGroup, CustomInput, ListGroup,ListGroupItem, ButtonGroup, Button, Jumbotron, Progress } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport instance from \"../../../helpers/axiosly\";\nimport stateWrapper from \"../../../containers/provider\";\nimport { withNamespaces } from \"react-i18next\";\nimport Moment from 'react-moment'\nimport AvForm from \"availity-reactstrap-validation/lib/AvForm\";\n\n\n\nconst Question = ({data, onAnswerUpdate, numberOfQuestion, activeQuestion, onSetActiveQuestion, onSetStep, setScore, score}) => {\n    console.log(numberOfQuestion)\n    const [selected, setSelected] = useState('');\n    const [error, setError] = useState('')\n    const radioWrapper = useRef()\n\n    const changeHandler = (e) => {\n        setSelected(e.target.value);\n\n        if(error) {\n            setError('')\n        }\n    }\n\n    const nextClickHandler = (e) => {\n        if(selected === '') {\n            return setError('Please select one option');\n        }\n\n        onAnswerUpdate(prevState => [...prevState, {\n            q: data.question , a: selected, s: data.score\n        }]);\n\n        if(selected === data.answer) {\n          setScore(score + data.score)\n        }\n\n        setSelected('')\n        if(activeQuestion < numberOfQuestion - 1) {\n            onSetActiveQuestion(activeQuestion + 1)\n        } else {\n            onSetStep(3)\n        }\n    }\n\n   /* const submitHandler = (e) => {\n      if(selected === '') {\n        return setError('Please select one option');\n    }\n        onAnswerUpdate(prevState => [...prevState, {\n          q: data.question , a: selected, s: data.score\n      }]);\n      setSelected('')\n      onSetStep(3)\n    }*/\n\n    useEffect(() => {\n        const findcheckedInput = radioWrapper.current.querySelector('input:checked');\n        if(findcheckedInput) {\n            findcheckedInput.checked = false;\n        }\n\n    }, [data])\n  return (\n    <React.Fragment>\n\n        <Card body className=\"text-center\">\n           <h4 className=\"card-title mb-4 text-info\">Question {activeQuestion + 1} of {numberOfQuestion} </h4>\n           <div id=\"basic-pills-wizard\" className=\"twitter-bs-wizard\">\n\n            <div className=\"mb-2\">\n                <Row>\n              <Col lg=\"12\">\n                <h3>{data.question}</h3>\n              </Col>\n            </Row>\n             <Row>\n             <Col lg=\"12\">\n               <form>\n                 <div ref={radioWrapper}>\n                 {data.options.map((option, id) => (\n                    <label className=\"radio\" key={id}>\n                    <input className=\"checkbox\" type=\"radio\" name=\"answer\" value={option}  onChange={changeHandler}/>\n                    <span className=\"checkmark\"></span>\n                       {option}\n                    </label>\n                   ))}\n                </div>\n\n               </form>\n               {error && <div className=\"text-danger mb-2\">{error}</div>}\n                {activeQuestion == numberOfQuestion - 1 ? '' : <Button color=\"primary\" className=\"btn btn-primary waves-effect waves-light mx-2\" onClick={nextClickHandler}>\n                    Next</Button>}\n                {activeQuestion == numberOfQuestion - 1 &&\n                <Button color=\"primary\" className=\"btn btn-primary waves-effect waves-light mx-2\" onClick={nextClickHandler}>\n                    Submit\n                </Button>}\n\n             </Col>\n           </Row>\n           <br/>\n            </div>\n\n                {/* questions && <button\n                      type=\"submit\"\n                      className=\"btn btn-warning waves-effect waves-light mt-4\"\n                    >\n                      Submit\n                </button>*/}\n           </div>\n\n       </Card>\n\n\n    </React.Fragment>\n  );\n};\n\n\nexport default withNamespaces()(stateWrapper(Question));"]},"metadata":{},"sourceType":"module"}