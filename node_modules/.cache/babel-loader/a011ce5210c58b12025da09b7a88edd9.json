{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nexports.default = validate;\n\nvar _utils = require('./utils');\n\nvar _get = require('lodash/get');\n\nvar _get2 = _interopRequireDefault(_get);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction validate(value, context) {\n  var constraint = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return (0, _utils.isEmpty)(value) || value === (0, _get2.default)(context, constraint.value) || constraint.errorMessage || false;\n}","map":{"version":3,"sources":["/Users/mac/writingPlatform/node_modules/availity-reactstrap-validation/lib/AvValidator/match.js"],"names":["exports","__esModule","default","validate","_utils","require","_get","_get2","_interopRequireDefault","obj","value","context","constraint","arguments","length","undefined","isEmpty","errorMessage"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACE,OAAR,GAAkBC,QAAlB;;AAEA,IAAIC,MAAM,GAAGC,OAAO,CAAC,SAAD,CAApB;;AAEA,IAAIC,IAAI,GAAGD,OAAO,CAAC,YAAD,CAAlB;;AAEA,IAAIE,KAAK,GAAGC,sBAAsB,CAACF,IAAD,CAAlC;;AAEA,SAASE,sBAAT,CAAgCC,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACR,UAAX,GAAwBQ,GAAxB,GAA8B;AAAEP,IAAAA,OAAO,EAAEO;AAAX,GAArC;AAAwD;;AAE/F,SAASN,QAAT,CAAkBO,KAAlB,EAAyBC,OAAzB,EAAkC;AAChC,MAAIC,UAAU,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAArF;AAEA,SAAO,CAAC,GAAGT,MAAM,CAACY,OAAX,EAAoBN,KAApB,KAA8BA,KAAK,KAAK,CAAC,GAAGH,KAAK,CAACL,OAAV,EAAmBS,OAAnB,EAA4BC,UAAU,CAACF,KAAvC,CAAxC,IAAyFE,UAAU,CAACK,YAApG,IAAoH,KAA3H;AACD","sourcesContent":["'use strict';\n\nexports.__esModule = true;\nexports.default = validate;\n\nvar _utils = require('./utils');\n\nvar _get = require('lodash/get');\n\nvar _get2 = _interopRequireDefault(_get);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction validate(value, context) {\n  var constraint = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  return (0, _utils.isEmpty)(value) || value === (0, _get2.default)(context, constraint.value) || constraint.errorMessage || false;\n}"]},"metadata":{},"sourceType":"script"}