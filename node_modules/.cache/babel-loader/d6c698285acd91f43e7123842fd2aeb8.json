{"ast":null,"code":"import { Container } from \"unstated\";\nimport instance from \"../helpers/axiosly\";\nimport CONSTANTS from \"../helpers/App.constant\";\nimport { setDefaults } from \"react-i18next\";\nimport { LOCAL_STORAGE_SIGNIN_KEY } from '../App.constants';\n\nclass OrderContainer extends Container {\n  constructor() {\n    super();\n\n    this.goBack = props => {\n      props.history.goBack();\n    };\n\n    this.fetchOrders = (userData, bearertoken) => {\n      console.log(userData, bea); // const token = localStorage.getItem(\"token\")\n      // console.log(userData)\n      // console.log(token)\n      // console.log(bearertoken)\n      // const userId = userData.id;\n      // console.log(\"check token id\", userId);\n      // instance\n      //   .get(`${process.env.REACT_APP_DATABASEURL}order`, {\n      //     headers: {\n      //       Authorization: `Bearer ${bearertoken}`,\n      //     },\n      //   })\n      //   .then((response) => {\n      //     console.log(response.data)\n      //     // count order list by user\n      //     const orderListCount = response.data.data.rows.reduce(\n      //       (counter, obj) => (obj.UserId === userId ? (counter += 1) : counter),\n      //       0\n      //     );\n      //     // Calculate Total balance by user\n      //     // console.log(\"list\", response.data.data.rows);\n      //     let orderList = this.state.sessionData.orderList;\n      //     // console.log(\"count orders by user :\", orderListCount);\n      //     response.data.data.rows.map((obj, i) => {\n      //       if (obj.UserId === userId) {\n      //         // console.log(\"api for orderList no:\", obj.UserId);\n      //         // console.log(\"api for orderList no:\", obj.topic);\n      //         this.setState({\n      //           sessionData: {\n      //             topic: obj.topic,\n      //             numberOfOrders: orderListCount,\n      //             completedOrders: 0,\n      //             totalBalance: obj.balance,\n      //             // newArr.push.apply(newArr, arr)\n      //             orderList: orderList.concat.apply(\n      //               orderList, response.data.data.rows\n      //             ),\n      //           },\n      //         });\n      //       }\n      //       else{\n      //         console.log(\"no list for you\")\n      //       }\n      //     });\n      //   })\n      //   .catch((e) => console.log(e));\n    };\n\n    this.state = {\n      sessionData: {\n        user: null,\n        accessToken: \"\",\n        userId: -1,\n        topic: \"\",\n        orderList: [],\n        numberOfOrders: 0,\n        completedOrders: 0,\n        totalBalance: 0\n      }\n    };\n  } // signIn = ({ email, password }, props) => {\n  //   instance\n  //     .post(`${process.env.REACT_APP_DATABASEURL}/auth/login`, { email, password })\n  //     .then((response) => {\n  //       console.log(response.data.data);\n  //       localStorage.setItem(\"authUser\", JSON.stringify(response.data.data));\n  //       console.log(\"local storage data\", localStorage.getItem(\"authUser\"));\n  //       props.history.push(\"/dashboard\");\n  //     })\n  //     .catch((e) => {\n  //       console.log(e);\n  //     });\n  // };\n\n\n}\n\nexport { OrderContainer };","map":{"version":3,"sources":["/Users/mac/writingPlatform/src/containers/OrderContainer.js"],"names":["Container","instance","CONSTANTS","setDefaults","LOCAL_STORAGE_SIGNIN_KEY","OrderContainer","constructor","goBack","props","history","fetchOrders","userData","bearertoken","console","log","bea","state","sessionData","user","accessToken","userId","topic","orderList","numberOfOrders","completedOrders","totalBalance"],"mappings":"AAAA,SAASA,SAAT,QAA0B,UAA1B;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAAQC,wBAAR,QAAuC,kBAAvC;;AAGA,MAAMC,cAAN,SAA6BL,SAA7B,CAAuC;AACrCM,EAAAA,WAAW,GAAG;AACZ;;AADY,SAedC,MAfc,GAeJC,KAAD,IAAW;AAClBA,MAAAA,KAAK,CAACC,OAAN,CAAcF,MAAd;AACD,KAjBa;;AAAA,SAmBdG,WAnBc,GAmBA,CAACC,QAAD,EAAWC,WAAX,KAA2B;AACvCC,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ,EAAsBI,GAAtB,EADuC,CAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACD,KA1Ea;;AAEZ,SAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE;AACXC,QAAAA,IAAI,EAAE,IADK;AAEXC,QAAAA,WAAW,EAAE,EAFF;AAGXC,QAAAA,MAAM,EAAE,CAAC,CAHE;AAIXC,QAAAA,KAAK,EAAE,EAJI;AAKXC,QAAAA,SAAS,EAAE,EALA;AAMXC,QAAAA,cAAc,EAAE,CANL;AAOXC,QAAAA,eAAe,EAAE,CAPN;AAQXC,QAAAA,YAAY,EAAE;AARH;AADF,KAAb;AAYD,GAfoC,CA6ErC;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AA1FqC;;AA6FvC,SAASpB,cAAT","sourcesContent":["import { Container } from \"unstated\";\nimport instance from \"../helpers/axiosly\";\nimport CONSTANTS from \"../helpers/App.constant\";\nimport { setDefaults } from \"react-i18next\";\nimport {LOCAL_STORAGE_SIGNIN_KEY} from '../App.constants'\n\n\nclass OrderContainer extends Container {\n  constructor() {\n    super();\n    this.state = {\n      sessionData: {\n        user: null,\n        accessToken: \"\",\n        userId: -1,\n        topic: \"\",\n        orderList: [],\n        numberOfOrders: 0,\n        completedOrders: 0,\n        totalBalance: 0,\n      },\n    };\n  }\n  goBack = (props) => {\n    props.history.goBack();\n  };\n\n  fetchOrders = (userData, bearertoken) => {\n    console.log(userData, bea)\n    // const token = localStorage.getItem(\"token\")\n    // console.log(userData)\n    // console.log(token)\n    // console.log(bearertoken)\n    // const userId = userData.id;\n    // console.log(\"check token id\", userId);\n    // instance\n    //   .get(`${process.env.REACT_APP_DATABASEURL}order`, {\n    //     headers: {\n    //       Authorization: `Bearer ${bearertoken}`,\n    //     },\n    //   })\n    //   .then((response) => {\n    //     console.log(response.data)\n    //     // count order list by user\n    //     const orderListCount = response.data.data.rows.reduce(\n    //       (counter, obj) => (obj.UserId === userId ? (counter += 1) : counter),\n    //       0\n    //     );\n    //     // Calculate Total balance by user\n\n    //     // console.log(\"list\", response.data.data.rows);\n    //     let orderList = this.state.sessionData.orderList;\n\n\n    //     // console.log(\"count orders by user :\", orderListCount);\n    //     response.data.data.rows.map((obj, i) => {\n\n    //       if (obj.UserId === userId) {\n\n    //         // console.log(\"api for orderList no:\", obj.UserId);\n    //         // console.log(\"api for orderList no:\", obj.topic);\n\n    //         this.setState({\n    //           sessionData: {\n    //             topic: obj.topic,\n    //             numberOfOrders: orderListCount,\n    //             completedOrders: 0,\n    //             totalBalance: obj.balance,\n    //             // newArr.push.apply(newArr, arr)\n    //             orderList: orderList.concat.apply(\n    //               orderList, response.data.data.rows\n    //             ),\n    //           },\n    //         });\n    //       }\n    //       else{\n    //         console.log(\"no list for you\")\n    //       }\n    //     });\n    //   })\n\n    //   .catch((e) => console.log(e));\n  };\n\n  // signIn = ({ email, password }, props) => {\n  //   instance\n  //     .post(`${process.env.REACT_APP_DATABASEURL}/auth/login`, { email, password })\n  //     .then((response) => {\n  //       console.log(response.data.data);\n  //       localStorage.setItem(\"authUser\", JSON.stringify(response.data.data));\n\n  //       console.log(\"local storage data\", localStorage.getItem(\"authUser\"));\n  //       props.history.push(\"/dashboard\");\n  //     })\n  //     .catch((e) => {\n  //       console.log(e);\n  //     });\n  // };\n}\n\nexport { OrderContainer };\n"]},"metadata":{},"sourceType":"module"}