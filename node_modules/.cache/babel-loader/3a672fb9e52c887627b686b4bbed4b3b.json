{"ast":null,"code":"var _jsxFileName = \"/Users/mac/writingPlatform/src/routes/middleware/Authmiddleware.js\";\nimport React from \"react\";\nimport { Route, Redirect, withRouter } from \"react-router-dom\";\nimport { LOCAL_STORAGE_SIGNIN_KEY } from '../../App.constants';\nimport { grantPermission } from '../../GrantPermission';\nimport { ROLES } from '../../App.constants';\nimport stateWrapper from '../../containers/provider';\n/*const Authmiddleware = ({\n\tcomponent: Component,\n\tlayout: Layout,\n\trender,\n  \troles,\n  \t...rest\n}) => (\n\t\t<Route\n\t\t{...rest}\n\t\t\trender={props => {\n\t\t\t\n\t\t\t\t\n\t\t\tlet Currentuser = JSON.parse(localStorage.getItem(LOCAL_STORAGE_SIGNIN_KEY))\n\n\t\t\t\n\t\t\t// here you can apply condition\n\t\t\tif (!grantPermission([ROLES.ADMIN])) {\n\t\t\t\tconsole.log(roles)\n\t\t\t\treturn (\n\t\t\t\t\t<Redirect to={{ pathname: \"/login\", state: { from: props.location } }} />\n\t\t\t\t);\n\t\t\t}\n\t\t\t\treturn (\n\t\t     \t<Layout>\n\t\t\t\t\t\t<Component {...props} />\n\t\t\t\t</Layout>\n\t\t\t\t);\n\t\t\t}}\n\t\t/>\n\t);*/\n\nfunction Authmiddleware({\n  component: Component,\n  layout: Layout,\n  roles,\n  ...rest\n}) {\n  useEffect(() => {\n    var _props, _props$orderContainer;\n\n    const userData = (_props = props) === null || _props === void 0 ? void 0 : (_props$orderContainer = _props.orderContainer) === null || _props$orderContainer === void 0 ? void 0 : _props$orderContainer.fetchOrders(userData, bearertoken);\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, grantPermission([ROLES.CLIENT]) && /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => /*#__PURE__*/React.createElement(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }\n  })), !grantPermission([ROLES.CLIENT]) && /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => /*#__PURE__*/React.createElement(Redirect, {\n      to: {\n        pathname: \"/login\",\n        state: {\n          from: props.location\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 6\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  })));\n}\n\nexport default withRouter(stateProvider(Authmiddleware));","map":{"version":3,"sources":["/Users/mac/writingPlatform/src/routes/middleware/Authmiddleware.js"],"names":["React","Route","Redirect","withRouter","LOCAL_STORAGE_SIGNIN_KEY","grantPermission","ROLES","stateWrapper","Authmiddleware","component","Component","layout","Layout","roles","rest","useEffect","userData","props","orderContainer","fetchOrders","bearertoken","CLIENT","pathname","state","from","location","stateProvider"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAeC,QAAf,EAAwBC,UAAxB,QAA0C,kBAA1C;AACA,SAAQC,wBAAR,QAAuC,qBAAvC;AACA,SAAQC,eAAR,QAA8B,uBAA9B;AACA,SAAQC,KAAR,QAAoB,qBAApB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEC,SAASC,cAAT,CAAwB;AACvBC,EAAAA,SAAS,EAAEC,SADY;AACDC,EAAAA,MAAM,EAAEC,MADP;AACeC,EAAAA,KADf;AACsB,KAAGC;AADzB,CAAxB,EAEK;AACFC,EAAAA,SAAS,CAAC,MAAM;AAAA;;AACf,UAAMC,QAAQ,aACdC,KADc,oEACd,OAAOC,cADO,0DACd,sBAAuBC,WAAvB,CAAmCH,QAAnC,EAA6CI,WAA7C,CADA;AAEA,GAHQ,EAGN,EAHM,CAAT;AAIF,sBACE,0CACCf,eAAe,CAAC,CAACC,KAAK,CAACe,MAAP,CAAD,CAAf,iBACF,oBAAC,KAAD,oBACMP,IADN;AAEE,IAAA,MAAM,EAAGG,KAAD,iBACT,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD,oBAAeA,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,CAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFC,EAYC,CAACZ,eAAe,CAAC,CAACC,KAAK,CAACe,MAAP,CAAD,CAAhB,iBACD,oBAAC,KAAD,oBACIP,IADJ;AAEA,IAAA,MAAM,EAAGG,KAAD,iBACP,oBAAC,QAAD;AAAW,MAAA,EAAE,EAAE;AAAEK,QAAAA,QAAQ,EAAE,QAAZ;AAAsBC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAEP,KAAK,CAACQ;AAAd;AAA7B,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAbA,CADF;AA0BE;;AAEJ,eAAetB,UAAU,CAACuB,aAAa,CAAClB,cAAD,CAAd,CAAzB","sourcesContent":["import React from \"react\";\nimport { Route,Redirect,withRouter } from \"react-router-dom\";\nimport {LOCAL_STORAGE_SIGNIN_KEY} from '../../App.constants'\nimport {grantPermission} from '../../GrantPermission'\nimport {ROLES} from '../../App.constants';\nimport stateWrapper from '../../containers/provider';\n\n/*const Authmiddleware = ({\n\tcomponent: Component,\n\tlayout: Layout,\n\trender,\n  \troles,\n  \t...rest\n}) => (\n\t\t<Route\n\t\t{...rest}\n\t\t\trender={props => {\n\t\t\t\n\t\t\t\t\n\t\t\tlet Currentuser = JSON.parse(localStorage.getItem(LOCAL_STORAGE_SIGNIN_KEY))\n\n\t\t\t\n\t\t\t// here you can apply condition\n\t\t\tif (!grantPermission([ROLES.ADMIN])) {\n\t\t\t\tconsole.log(roles)\n\t\t\t\treturn (\n\t\t\t\t\t<Redirect to={{ pathname: \"/login\", state: { from: props.location } }} />\n\t\t\t\t);\n\t\t\t}\n\t\t\t\treturn (\n\t\t     \t<Layout>\n\t\t\t\t\t\t<Component {...props} />\n\t\t\t\t</Layout>\n\t\t\t\t);\n\t\t\t}}\n\t\t/>\n\t);*/\n\n\tfunction Authmiddleware({\n\t\tcomponent: Component, layout: Layout, roles, ...rest\n\t  }) {\n\t\t  useEffect(() => {\n\t\t\t  const userData = \n\t\t\t  props?.orderContainer?.fetchOrders(userData, bearertoken);\n\t\t  }, [])\n\t\treturn (\n\t\t  <>\n\t\t\t{ grantPermission([ROLES.CLIENT]) && (\n\t\t\t<Route\n\t\t\t  {...rest}\n\t\t\t  render={(props) => (\n\t\t\t\t<Layout>\n\t\t\t\t  <Component {...props} />\n\t\t\t\t</Layout>\n\t\t\t  )}\n\t\t\t/>\n\t\t\t)}\n\t\t\t{\n\t\t\t  !grantPermission([ROLES.CLIENT]) && (\n\t\t\t\t<Route \n\t\t\t\t{...rest}\n\t\t\t\trender={(props) => (\n\t\t\t\t\t<Redirect  to={{ pathname: \"/login\", state: { from: props.location } }} />\n\t\t\t\t)}\n\t\t\t\t\t\n\t\t\t\t/>\n\t\t\t\t\n\t\t\t  )\n\t\t\t}\n\t\t  </>\n\t\t);\n\t  }\n\nexport default withRouter(stateProvider(Authmiddleware));\n\n"]},"metadata":{},"sourceType":"module"}