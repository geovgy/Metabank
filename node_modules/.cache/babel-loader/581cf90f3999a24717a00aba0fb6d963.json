{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nexports.default = validate;\n\nvar _utils = require('./utils');\n\nvar INTEGER_REGEX = /^\\d*$/;\n\nfunction validate(value, context) {\n  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n      _ref$errorMessage = _ref.errorMessage,\n      errorMessage = _ref$errorMessage === undefined ? false : _ref$errorMessage;\n\n  if ((0, _utils.isEmpty)(value)) return true;\n  value = value + '';\n\n  if (!INTEGER_REGEX.test(value) || value.length !== 10) {\n    return errorMessage;\n  }\n\n  var firstDigit = value.charAt(0);\n\n  if (['1', '2', '3', '4'].indexOf(firstDigit) < 0) {\n    return errorMessage;\n  }\n\n  var digit = parseInt(value.charAt(9), 10);\n  value = value.substring(0, 9);\n  value = '80840' + value;\n  var alternate = true;\n  var total = 0;\n\n  for (var i = value.length; i > 0; i--) {\n    var next = parseInt(value.charAt(i - 1), 10);\n\n    if (alternate) {\n      next = next * 2;\n\n      if (next > 9) {\n        next = next % 10 + 1;\n      }\n    }\n\n    total += next;\n    alternate = !alternate;\n  }\n\n  var roundUp = Math.ceil(total / 10) * 10;\n  var calculatedCheck = roundUp - total;\n  return calculatedCheck === digit || errorMessage;\n}","map":{"version":3,"sources":["/Users/mac/writingPlatform/node_modules/availity-reactstrap-validation/lib/AvValidator/npi.js"],"names":["exports","__esModule","default","validate","_utils","require","INTEGER_REGEX","value","context","_ref","arguments","length","undefined","_ref$errorMessage","errorMessage","isEmpty","test","firstDigit","charAt","indexOf","digit","parseInt","substring","alternate","total","i","next","roundUp","Math","ceil","calculatedCheck"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACE,OAAR,GAAkBC,QAAlB;;AAEA,IAAIC,MAAM,GAAGC,OAAO,CAAC,SAAD,CAApB;;AAEA,IAAIC,aAAa,GAAG,OAApB;;AAEA,SAASH,QAAT,CAAkBI,KAAlB,EAAyBC,OAAzB,EAAkC;AAChC,MAAIC,IAAI,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAA/E;AAAA,MACIG,iBAAiB,GAAGJ,IAAI,CAACK,YAD7B;AAAA,MAEIA,YAAY,GAAGD,iBAAiB,KAAKD,SAAtB,GAAkC,KAAlC,GAA0CC,iBAF7D;;AAIA,MAAI,CAAC,GAAGT,MAAM,CAACW,OAAX,EAAoBR,KAApB,CAAJ,EAAgC,OAAO,IAAP;AAEhCA,EAAAA,KAAK,GAAGA,KAAK,GAAG,EAAhB;;AAEA,MAAI,CAACD,aAAa,CAACU,IAAd,CAAmBT,KAAnB,CAAD,IAA8BA,KAAK,CAACI,MAAN,KAAiB,EAAnD,EAAuD;AACrD,WAAOG,YAAP;AACD;;AAED,MAAIG,UAAU,GAAGV,KAAK,CAACW,MAAN,CAAa,CAAb,CAAjB;;AACA,MAAI,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqBC,OAArB,CAA6BF,UAA7B,IAA2C,CAA/C,EAAkD;AAChD,WAAOH,YAAP;AACD;;AAED,MAAIM,KAAK,GAAGC,QAAQ,CAACd,KAAK,CAACW,MAAN,CAAa,CAAb,CAAD,EAAkB,EAAlB,CAApB;AACAX,EAAAA,KAAK,GAAGA,KAAK,CAACe,SAAN,CAAgB,CAAhB,EAAmB,CAAnB,CAAR;AACAf,EAAAA,KAAK,GAAG,UAAUA,KAAlB;AAEA,MAAIgB,SAAS,GAAG,IAAhB;AACA,MAAIC,KAAK,GAAG,CAAZ;;AAEA,OAAK,IAAIC,CAAC,GAAGlB,KAAK,CAACI,MAAnB,EAA2Bc,CAAC,GAAG,CAA/B,EAAkCA,CAAC,EAAnC,EAAuC;AACrC,QAAIC,IAAI,GAAGL,QAAQ,CAACd,KAAK,CAACW,MAAN,CAAaO,CAAC,GAAG,CAAjB,CAAD,EAAsB,EAAtB,CAAnB;;AACA,QAAIF,SAAJ,EAAe;AACbG,MAAAA,IAAI,GAAGA,IAAI,GAAG,CAAd;;AACA,UAAIA,IAAI,GAAG,CAAX,EAAc;AACZA,QAAAA,IAAI,GAAGA,IAAI,GAAG,EAAP,GAAY,CAAnB;AACD;AACF;;AACDF,IAAAA,KAAK,IAAIE,IAAT;AACAH,IAAAA,SAAS,GAAG,CAACA,SAAb;AACD;;AAED,MAAII,OAAO,GAAGC,IAAI,CAACC,IAAL,CAAUL,KAAK,GAAG,EAAlB,IAAwB,EAAtC;AACA,MAAIM,eAAe,GAAGH,OAAO,GAAGH,KAAhC;AAEA,SAAOM,eAAe,KAAKV,KAApB,IAA6BN,YAApC;AACD","sourcesContent":["'use strict';\n\nexports.__esModule = true;\nexports.default = validate;\n\nvar _utils = require('./utils');\n\nvar INTEGER_REGEX = /^\\d*$/;\n\nfunction validate(value, context) {\n  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n      _ref$errorMessage = _ref.errorMessage,\n      errorMessage = _ref$errorMessage === undefined ? false : _ref$errorMessage;\n\n  if ((0, _utils.isEmpty)(value)) return true;\n\n  value = value + '';\n\n  if (!INTEGER_REGEX.test(value) || value.length !== 10) {\n    return errorMessage;\n  }\n\n  var firstDigit = value.charAt(0);\n  if (['1', '2', '3', '4'].indexOf(firstDigit) < 0) {\n    return errorMessage;\n  }\n\n  var digit = parseInt(value.charAt(9), 10);\n  value = value.substring(0, 9);\n  value = '80840' + value;\n\n  var alternate = true;\n  var total = 0;\n\n  for (var i = value.length; i > 0; i--) {\n    var next = parseInt(value.charAt(i - 1), 10);\n    if (alternate) {\n      next = next * 2;\n      if (next > 9) {\n        next = next % 10 + 1;\n      }\n    }\n    total += next;\n    alternate = !alternate;\n  }\n\n  var roundUp = Math.ceil(total / 10) * 10;\n  var calculatedCheck = roundUp - total;\n\n  return calculatedCheck === digit || errorMessage;\n}"]},"metadata":{},"sourceType":"script"}