{"ast":null,"code":"var _jsxFileName = \"/Users/mac/metabank/src/App.js\";\nimport React, { Component } from 'react';\nimport { Switch, BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Provider, Subscribe } from \"unstated\";\nimport allStores from './containers'; // Import Routes all\n\nimport { userRoutes, authRoutes } from \"./routes/allRoutes\";\nimport { superadminRoutes } from \"./routes/superadminRoutes\";\nimport { adminRoutes } from \"./routes/adminRoutes\";\nimport { writerRoutes } from \"./routes/writerRoutes\"; // Import all middleware\n\nimport Authmiddleware from \"./routes/middleware/Authmiddleware\";\nimport SuperAdminmiddleware from \"./routes/middleware/SuperAdminmiddleware\";\nimport Adminmiddleware from \"./routes/middleware/Adminmiddleware\";\nimport Writermiddleware from \"./routes/middleware/Writermiddleware\"; // layouts Format\n\nimport VerticalLayout from \"./components/VerticalLayout/\";\nimport HorizontalLayout from \"./components/HorizontalLayout/\";\nimport NonAuthLayout from \"./components/NonAuthLayout\";\nimport { ROLES } from './App.constants'; // Import scss\n\nimport \"./assets/scss/theme.scss\"; // Import Firebase Configuration file\n\nimport { initFirebaseBackend } from \"./helpers/firebase_helper\";\nimport fakeBackend from './helpers/AuthType/fakeBackend';\n\nclass App extends Component {\n  constructor(_props) {\n    super(_props);\n\n    this.appScreen = () => {\n      const getLayout = () => {\n        let layoutCls = VerticalLayout;\n\n        switch (this.props.layout.layoutType) {\n          case \"horizontal\":\n            layoutCls = HorizontalLayout;\n            break;\n\n          default:\n            layoutCls = VerticalLayout;\n            break;\n        }\n\n        return layoutCls;\n      };\n\n      const Layout = getLayout();\n\n      const NonAuthmiddleware = ({\n        component: Component,\n        layout: Layout\n      }) => /*#__PURE__*/React.createElement(Route, {\n        render: props => {\n          return /*#__PURE__*/React.createElement(Layout, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 8\n            }\n          }, /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 9\n            }\n          })));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 5\n        }\n      });\n\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 4\n        }\n      }, /*#__PURE__*/React.createElement(Router, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 4\n        }\n      }, /*#__PURE__*/React.createElement(Switch, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 5\n        }\n      }, authRoutes.map((route, idx) => /*#__PURE__*/React.createElement(NonAuthmiddleware, {\n        path: route.path,\n        component: route.component,\n        key: idx,\n        layout: NonAuthLayout,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 7\n        }\n      })), superadminRoutes.map((route, idx) => /*#__PURE__*/React.createElement(SuperAdminmiddleware, {\n        exact: true,\n        path: route.path,\n        component: route.component,\n        key: idx,\n        layout: Layout,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 7\n        }\n      })), adminRoutes.map((route, idx) => /*#__PURE__*/React.createElement(Adminmiddleware, {\n        exact: true,\n        path: route.path,\n        component: route.component,\n        key: idx,\n        layout: Layout,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 7\n        }\n      })), userRoutes.map((route, idx) => /*#__PURE__*/React.createElement(Authmiddleware, {\n        exact: true,\n        path: route.path,\n        component: route.component,\n        key: idx,\n        layout: Layout,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 7\n        }\n      })), writerRoutes.map((route, idx) => /*#__PURE__*/React.createElement(Writermiddleware, {\n        exact: true,\n        path: route.path,\n        component: route.component,\n        key: idx,\n        layout: Layout,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 7\n        }\n      })))));\n    };\n\n    this.layoutStore = allStores[0]; // this.footballStore = allStores[1];\n\n    this.userStore = allStores[1];\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Provider, {\n      inject: allStores,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Subscribe, {\n      to: [this.layoutStore],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 5\n      }\n    }, layoutStore => this.appScreen(layoutStore)));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    layout: state.Layout\n  };\n};\n\nexport default connect(mapStateToProps, null)(App);","map":{"version":3,"sources":["/Users/mac/metabank/src/App.js"],"names":["React","Component","Switch","BrowserRouter","Router","Route","connect","Provider","Subscribe","allStores","userRoutes","authRoutes","superadminRoutes","adminRoutes","writerRoutes","Authmiddleware","SuperAdminmiddleware","Adminmiddleware","Writermiddleware","VerticalLayout","HorizontalLayout","NonAuthLayout","ROLES","initFirebaseBackend","fakeBackend","App","constructor","props","appScreen","getLayout","layoutCls","layout","layoutType","Layout","NonAuthmiddleware","component","map","route","idx","path","layoutStore","userStore","render","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\n\nimport { Switch, BrowserRouter as Router,Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Provider, Subscribe } from \"unstated\";\n\nimport allStores from './containers';\n// Import Routes all\nimport { userRoutes , authRoutes} from \"./routes/allRoutes\";\n\nimport { superadminRoutes} from \"./routes/superadminRoutes\";\nimport { adminRoutes} from \"./routes/adminRoutes\";\nimport { writerRoutes } from \"./routes/writerRoutes\"\n\n// Import all middleware\nimport Authmiddleware from \"./routes/middleware/Authmiddleware\";\nimport SuperAdminmiddleware from \"./routes/middleware/SuperAdminmiddleware\";\nimport Adminmiddleware from \"./routes/middleware/Adminmiddleware\";\nimport Writermiddleware from \"./routes/middleware/Writermiddleware\"\n\n// layouts Format\nimport VerticalLayout from \"./components/VerticalLayout/\";\nimport HorizontalLayout from \"./components/HorizontalLayout/\";\nimport NonAuthLayout from \"./components/NonAuthLayout\";\n\nimport {ROLES} from './App.constants'\n\n// Import scss\nimport \"./assets/scss/theme.scss\";\n\n// Import Firebase Configuration file\nimport { initFirebaseBackend } from \"./helpers/firebase_helper\";\n\nimport fakeBackend from './helpers/AuthType/fakeBackend';\n\n\n\n\nclass App extends Component{\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.layoutStore = allStores[0];\n\t\t// this.footballStore = allStores[1];\n\t\tthis.userStore = allStores[1];\n\t}\n\n\n\tappScreen = () => {\n\t\tconst getLayout = () => {\n\t\t\tlet layoutCls = VerticalLayout;\n\n\t\t\tswitch (this.props.layout.layoutType) {\n\t\t\t\tcase \"horizontal\":\n\t\t\t\t\tlayoutCls = HorizontalLayout;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tlayoutCls = VerticalLayout;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn layoutCls;\n\t\t};\n\n\t\tconst Layout = getLayout();\n\t\tconst NonAuthmiddleware = ({\n\t\t\tcomponent: Component,\n\t\t\tlayout: Layout\n\t\t}) => (\n\t\t\t\t<Route\n\t\t\t\t\trender={props => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Layout>\n\t\t\t\t\t\t\t\t<Component {...props} />\n\t\t\t\t\t\t\t</Layout>\n\t\t\t\t\t\t);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t);\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t<Router>\n\t\t\t\t<Switch>\n\t\t\t\t\t{authRoutes.map((route, idx) => (\n\t\t\t\t\t\t<NonAuthmiddleware\n\t\t\t\t\t\t\tpath={route.path}\n\t\t\t\t\t\t\tcomponent={route.component}\n\t\t\t\t\t\t\tkey={idx}\n\t\t\t\t\t\t\tlayout={NonAuthLayout}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t\t{superadminRoutes.map((route, idx) => (\n\t\t\t\t\t\t<SuperAdminmiddleware\n\t\t\t\t\t\t\texact path={route.path}\n\t\t\t\t\t\t\tcomponent={route.component}\n\t\t\t\t\t\t\tkey={idx}\n\t\t\t\t\t\t\tlayout={Layout}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t\t{adminRoutes.map((route, idx) => (\n\t\t\t\t\t\t<Adminmiddleware\n\t\t\t\t\t\t\texact path={route.path}\n\t\t\t\t\t\t\tcomponent={route.component}\n\t\t\t\t\t\t\tkey={idx}\n\t\t\t\t\t\t\tlayout={Layout}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\n\t\t\t\t\t{userRoutes.map((route, idx) => (\n\t\t\t\t\t\t<Authmiddleware\n\t\t\t\t\t\t\texact path={route.path}\n\t\t\t\t\t\t\tcomponent={route.component}\n\t\t\t\t\t\t\tkey={idx}\n\t\t\t\t\t\t\tlayout={Layout}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\n\t\t\t\t\t{writerRoutes.map((route, idx) => (\n\t\t\t\t\t\t<Writermiddleware\n\t\t\t\t\t\t\texact path={route.path}\n\t\t\t\t\t\t\tcomponent={route.component}\n\t\t\t\t\t\t\tkey={idx}\n\t\t\t\t\t\t\tlayout={Layout}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\n\t\t\t\t</Switch>\n\t\t\t</Router>\n\t\t</React.Fragment>\n\n\t\t)\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Provider inject={allStores}>\n\t\t\t\t<Subscribe to={[this.layoutStore]}>\n\t\t\t\t\t{layoutStore => (\n\t\t\t\t\t\tthis.appScreen(layoutStore)\n\t\t\t\t\t)}\n\t\t\t\t</Subscribe>\n\t\t\t</Provider>\n\t\t)\n\t}\n}\n\n\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tlayout: state.Layout\n\t};\n};\n\n\nexport default connect(mapStateToProps, null)(App);\n"]},"metadata":{},"sourceType":"module"}