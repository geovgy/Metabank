{"ast":null,"code":"import { Container } from \"unstated\";\nimport instance from \"../helpers/axiosly\";\nimport { LOCAL_STORAGE_SIGNIN_KEY } from '../App.constants'; // Get token from local storage\n\nconst token = localStorage.getItem(\"token\");\n\nclass MasterContainer extends Container {\n  constructor() {\n    super();\n\n    this.fetchService = bearertoken => {\n      return new Promise((resolve, reject) => {\n        instance.get(`${process.env.REACT_APP_DATABASEURL}services`, {\n          headers: {\n            Authorization: `Bearer ${bearertoken}`\n          }\n        }).then(response => {\n          resolve(response);\n          this.setState({\n            sessionData: {\n              serviceList: response.data.data.rows\n            }\n          });\n          console.log(this.state.sessionData.serviceList);\n        }).catch(e => console.log(e));\n      });\n    };\n\n    this.addService = (state, bearertoken) => {\n      instance.post(`${process.env.REACT_APP_DATABASEURL}services`, {\n        name: state.name,\n        price: state.price\n      }, {\n        headers: {\n          Authorization: `Bearer ${bearertoken}`\n        }\n      }).then(response => {\n        console.log(\"services here \", response.data.data);\n      }).catch(e => console.log(e));\n    };\n\n    this.updateServices = (state, bearertoken, id) => {\n      instance.put(`${process.env.REACT_APP_DATABASEURL}services/${id}`, {\n        name: state.name.toString(),\n        price: state.price.toString()\n      }, {\n        headers: {\n          Authorization: `Bearer ${bearertoken}`\n        }\n      }).then(response => {\n        console.log(\"services here \", response.data.data);\n      }).catch(e => console.log(e));\n    };\n\n    this.deleteService = id => {\n      return new Promise((resolve, reject) => {\n        instance.delete(`${process.env.REACT_APP_DATABASEURL}/services/${id}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }).then(response => {\n          resolve(response);\n        }).catch(e => {\n          console.log(e);\n        });\n      });\n    };\n\n    this.fetchSubjectarea = bearertoken => {\n      return new Promise((resolve, reject) => {\n        instance.get(`${process.env.REACT_APP_DATABASEURL}subject-area`, {\n          headers: {\n            Authorization: `Bearer ${bearertoken}`\n          }\n        }).then(response => {\n          resolve(response);\n          this.setState({\n            sessionData: {\n              subjectareaList: response.data.data.rows\n            }\n          });\n        }).catch(e => console.log(e));\n      });\n    };\n\n    this.addSubjectarea = (state, bearertoken) => {\n      instance.post(`${process.env.REACT_APP_DATABASEURL}subject-area`, {\n        name: state.name,\n        price: state.price\n      }, {\n        headers: {\n          Authorization: `Bearer ${bearertoken}`\n        }\n      }).then(response => {\n        console.log(\"services here \", response.data.data);\n      }).catch(e => console.log(e));\n    };\n\n    this.updateSubjectarea = (state, bearertoken, id) => {\n      instance.put(`${process.env.REACT_APP_DATABASEURL}subject-area/${id}`, {\n        name: state.name.toString(),\n        price: state.price.toString()\n      }, {\n        headers: {\n          Authorization: `Bearer ${bearertoken}`\n        }\n      }).then(response => {\n        console.log(\"services here \", response.data.data);\n      }).catch(e => console.log(e));\n    };\n\n    this.deleteSubjectarea = id => {\n      return new Promise((resolve, reject) => {\n        instance.delete(`${process.env.REACT_APP_DATABASEURL}/subject-area/${id}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }).then(response => {\n          console.log(resolve(response));\n          resolve(response);\n        }).catch(e => {\n          console.log(e);\n        });\n      });\n    };\n\n    this.fetchSpacing = bearertoken => {\n      return new Promise((resolve, reject) => {\n        instance.get(`${process.env.REACT_APP_DATABASEURL}spacing`, {\n          headers: {\n            Authorization: `Bearer ${bearertoken}`\n          }\n        }).then(response => {\n          resolve(response);\n          this.setState({\n            sessionData: {\n              spacingList: response.data.data\n            }\n          });\n        }).catch(e => console.log(e));\n      });\n    };\n\n    this.addSpacing = (state, bearertoken) => {\n      instance.post(`${process.env.REACT_APP_DATABASEURL}spacing`, {\n        name: state.name,\n        price: state.price\n      }, {\n        headers: {\n          Authorization: `Bearer ${bearertoken}`\n        }\n      }).then(response => {\n        console.log(\"services here \", response.data.data);\n      }).catch(e => console.log(e));\n    };\n\n    this.updateSpacing = (state, bearertoken, id) => {\n      instance.put(`${process.env.REACT_APP_DATABASEURL}spacing/${id}`, {\n        name: state.name.toString()\n      }, {\n        headers: {\n          Authorization: `Bearer ${bearertoken}`\n        }\n      }).then(response => {\n        console.log(\"services here \", response.data.data);\n      }).catch(e => console.log(e));\n    };\n\n    this.deleteSpacing = id => {\n      return new Promise((resolve, reject) => {\n        instance.delete(`${process.env.REACT_APP_DATABASEURL}/spacing/${id}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }).then(response => {\n          console.log(resolve(response));\n          resolve(response);\n        }).catch(e => {\n          console.log(e);\n        });\n      });\n    };\n\n    this.state = {\n      sessionData: {\n        serviceList: [],\n        subjectareaList: [],\n        spacingList: []\n      }\n    };\n  }\n  /**\n   *\n   * State manager for Services\n   *\n  * */\n  // Function to get list of services\n  //\n\n\n}\n\nexport { MasterContainer };","map":{"version":3,"sources":["/Users/mac/writingPlatform/src/containers/MasterContainer.js"],"names":["Container","instance","LOCAL_STORAGE_SIGNIN_KEY","token","localStorage","getItem","MasterContainer","constructor","fetchService","bearertoken","Promise","resolve","reject","get","process","env","REACT_APP_DATABASEURL","headers","Authorization","then","response","setState","sessionData","serviceList","data","rows","console","log","state","catch","e","addService","post","name","price","updateServices","id","put","toString","deleteService","delete","fetchSubjectarea","subjectareaList","addSubjectarea","updateSubjectarea","deleteSubjectarea","fetchSpacing","spacingList","addSpacing","updateSpacing","deleteSpacing"],"mappings":"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","sourcesContent":["import { Container } from \"unstated\";\nimport instance from \"../helpers/axiosly\";\nimport { LOCAL_STORAGE_SIGNIN_KEY } from '../App.constants'\n\n// Get token from local storage\nconst token = localStorage.getItem(\"token\");\n\nclass MasterContainer extends Container {\n  constructor() {\n    super();\n    this.state = {\n      sessionData: {\n        serviceList: [],\n        subjectareaList: [],\n        spacingList: []\n      },\n    };\n  }\n\n/**\n *\n * State manager for Services\n *\n* */\n\n// Function to get list of services\n\n  fetchService = (bearertoken) => {\n    return new Promise((resolve, reject)=> {\n      instance\n      .get(`${process.env.REACT_APP_DATABASEURL}services`, {\n        headers: {\n          Authorization: `Bearer ${bearertoken}`,\n        },\n      })\n      .then((response) => {\n        resolve(response)\n\n            this.setState({\n              sessionData: {\n                serviceList: response.data.data.rows,\n              },\n            });\n            console.log(this.state.sessionData.serviceList)\n\n\n      })\n\n      .catch((e) => console.log(e));\n    })\n\n\n  };\n\n//post service\n  addService = (state, bearertoken) => {\n    instance\n      .post(`${process.env.REACT_APP_DATABASEURL}services`,{\n        name: state.name,\n        price: state.price\n        },  {\n        headers: {\n          Authorization: `Bearer ${bearertoken}`,\n        },\n      })\n      .then((response) => {\n\n        console.log(\"services here \", response.data.data)\n\n      })\n\n      .catch((e) => console.log(e));\n  }\n\n  //update service\n  updateServices = (state, bearertoken, id) => {\n    instance\n    .put(`${process.env.REACT_APP_DATABASEURL}services/${id}`,{\n      name: state.name.toString(),\n      price: state.price.toString()\n      },  {\n      headers: {\n        Authorization: `Bearer ${bearertoken}`,\n      },\n    })\n    .then((response) => {\n\n      console.log(\"services here \", response.data.data)\n\n    })\n\n    .catch((e) => console.log(e));\n  }\n\n// function to delete service\n  deleteService = (id) => { return new Promise((resolve, reject)=> {\n    instance\n    .delete(`${process.env.REACT_APP_DATABASEURL}/services/${id}`, {\n\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n\n    }).then((response) => {\n\n      resolve(response);\n\n    }).catch((e) => {\n      console.log(e);\n    });\n  })\n\n\n\n  }\n\n\n  // Function to get list of subject area\n\n  fetchSubjectarea = (bearertoken) => {\n    return new Promise((resolve, reject)=>{\n      instance\n      .get(`${process.env.REACT_APP_DATABASEURL}subject-area`, {\n        headers: {\n          Authorization: `Bearer ${bearertoken}`,\n        },\n      })\n      .then((response) => {\n        resolve(response)\n            this.setState({\n              sessionData: {\n                subjectareaList: response.data.data.rows,\n              },\n            });\n\n\n\n      })\n\n      .catch((e) => console.log(e));\n    })\n\n  };\n\n//post subject\n  addSubjectarea = (state, bearertoken) => {\n    instance\n      .post(`${process.env.REACT_APP_DATABASEURL}subject-area`,{\n        name: state.name,\n        price: state.price\n        },  {\n        headers: {\n          Authorization: `Bearer ${bearertoken}`,\n        },\n      })\n      .then((response) => {\n\n        console.log(\"services here \", response.data.data)\n\n      })\n\n      .catch((e) => console.log(e));\n  }\n\n  //update subject\n  updateSubjectarea = (state, bearertoken, id) => {\n    instance\n    .put(`${process.env.REACT_APP_DATABASEURL}subject-area/${id}`,{\n      name: state.name.toString(),\n      price: state.price.toString()\n      },  {\n      headers: {\n        Authorization: `Bearer ${bearertoken}`,\n      },\n    })\n    .then((response) => {\n\n      console.log(\"services here \", response.data.data)\n\n    })\n\n    .catch((e) => console.log(e));\n  }\n\n// function to delete subject\n  deleteSubjectarea = (id) => {\n    return new Promise((resolve, reject)=> {\n    instance\n    .delete(`${process.env.REACT_APP_DATABASEURL}/subject-area/${id}`, {\n\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n\n    }).then((response) => {\n      console.log(resolve(response));\n      resolve(response);\n\n    }).catch((e) => {\n      console.log(e);\n    });\n  })\n\n\n\n  }\n\n\n   // Function to get list of spacing\n\n   fetchSpacing = (bearertoken) => {\n    return new Promise((resolve, reject)=>{\n      instance\n      .get(`${process.env.REACT_APP_DATABASEURL}spacing`, {\n        headers: {\n          Authorization: `Bearer ${bearertoken}`,\n        },\n      })\n      .then((response) => {\n        resolve(response)\n            this.setState({\n              sessionData: {\n                spacingList: response.data.data,\n              },\n            });\n\n\n\n      })\n\n      .catch((e) => console.log(e));\n    })\n\n  };\n\n//post spacing\n  addSpacing = (state, bearertoken) => {\n    instance\n      .post(`${process.env.REACT_APP_DATABASEURL}spacing`,{\n        name: state.name,\n        price: state.price\n        },  {\n        headers: {\n          Authorization: `Bearer ${bearertoken}`,\n        },\n      })\n      .then((response) => {\n\n        console.log(\"services here \", response.data.data)\n\n      })\n\n      .catch((e) => console.log(e));\n  }\n\n  //update spacing\n  updateSpacing = (state, bearertoken, id) => {\n    instance\n    .put(`${process.env.REACT_APP_DATABASEURL}spacing/${id}`,{\n      name: state.name.toString()\n      },  {\n      headers: {\n        Authorization: `Bearer ${bearertoken}`,\n      },\n    })\n    .then((response) => {\n\n      console.log(\"services here \", response.data.data)\n\n    })\n\n    .catch((e) => console.log(e));\n  }\n\n// function to delete spacing\n  deleteSpacing = (id) => {\n    return new Promise((resolve, reject)=> {\n    instance\n    .delete(`${process.env.REACT_APP_DATABASEURL}/spacing/${id}`, {\n\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n\n    }).then((response) => {\n      console.log(resolve(response));\n      resolve(response);\n\n    }).catch((e) => {\n      console.log(e);\n    });\n  })\n\n  }\n\n  //\n\n\n}\n\n\n\nexport { MasterContainer };\n\n\n\n"]},"metadata":{},"sourceType":"module"}